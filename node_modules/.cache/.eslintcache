[{"/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/index.js":"1","/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/App.js":"2","/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/components/sales-list.js":"3","/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/components/analyze.js":"4","/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/components/login.js":"5","/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/components/graphs/graph3.component.js":"6","/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/components/graphs/graph1.component.js":"7","/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/components/graphs/graph2.component.js":"8","/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/services/sales.js":"9","/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/services/priceFormatter.js":"10","/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/services/stores.js":"11","/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/http-common.js":"12","/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/components/management.js":"13"},{"size":240,"mtime":1640271848055,"results":"14","hashOfConfig":"15"},{"size":3654,"mtime":1643772415514,"results":"16","hashOfConfig":"15"},{"size":9789,"mtime":1643778607940,"results":"17","hashOfConfig":"15"},{"size":2439,"mtime":1642159994835,"results":"18","hashOfConfig":"15"},{"size":6320,"mtime":1642247635469,"results":"19","hashOfConfig":"15"},{"size":6088,"mtime":1642089659645,"results":"20","hashOfConfig":"15"},{"size":4121,"mtime":1643773846792,"results":"21","hashOfConfig":"15"},{"size":3634,"mtime":1642089440268,"results":"22","hashOfConfig":"15"},{"size":1473,"mtime":1642166963219,"results":"23","hashOfConfig":"15"},{"size":561,"mtime":1643772601171,"results":"24","hashOfConfig":"15"},{"size":155,"mtime":1642166980215,"results":"25","hashOfConfig":"15"},{"size":202,"mtime":1642263893155,"results":"26","hashOfConfig":"15"},{"size":12533,"mtime":1643770738384,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fix6ph",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/index.js",[],"/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/App.js",["56","57","58","59","60"],"/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/components/sales-list.js",["61","62","63","64","65","66"],"/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/components/analyze.js",[],"/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/components/login.js",[],"/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/components/graphs/graph3.component.js",["67","68","69"],"import React, { useEffect , useState} from 'react';\nimport SalesDataService from '../../services/sales.js' ;\nimport dayjs from 'dayjs' ;\nimport { Chart } from \"react-google-charts\";\n\n\nconst Graph3 = props => {\n\n  const [sales, setSales] = React.useState([])\n  const [month, setMonth] = React.useState(\"\")\n  const [store, setStore] = React.useState(\"\")\n  const [dataForLineChart, setdataForLineChart] = React.useState(null)\n  const [locations, setLocations] = React.useState([])\n  const months = ['Jan', 'Feb','March','April','May','June','July','Aug','Sept','Oct','Nov','Dec'] \n  const [noData, setNoData] = useState(null)\n  const [monthToDisplay, setMonthToDisplay]=useState('Jan')\n  const [storeToDisplay, setStoreToDisplay]=useState('Austin')\n\n  useEffect(() => {\n    retrieveLocations();\n  }, []);\n  \n  const calculateTotalRevenue = (items) => {\n    // console.log(items) ;\n    var totalRevenue = 0.0\n    items.map(item => {\n      totalRevenue+=(parseInt(item.quantity)*item.price['$numberDecimal']) \n    })\n    return totalRevenue\n  }\n\n  const DisplayLineChart = () => {      \n    // choose a month -> display line chart from that month      \n    SalesDataService.getUnlimited(store, \"location\")\n    .then(response => {        \n        setSales(response.data.Sales)\n    })\n    .catch(e => {\n        console.log(e);\n    })\n\n    var m = [[\"Date\",\"Revenue\"]]\n    var monthlySaleExists = false \n    sales.map((sale)=>{\n      const date = dayjs(sale.saleDate).month()\n      if(date === month) {\n        monthlySaleExists = true ;\n        const d = dayjs(sale.saleDate).date()\n        const monthlyRevenue = calculateTotalRevenue(sale.items) \n        \n        var flag = 0\n        for(var i=0;i<m.length;i++) {\n          if(m[i][0] === d) {\n            m[i][1]+=monthlyRevenue\n            flag = 1\n            break\n          }\n        }\n        if(!flag) {\n          m.push([d,monthlyRevenue])\n        }\n      }\n    })\n    if(!monthlySaleExists)\n      setdataForLineChart(null)\n    else {\n      m.sort((a,b)=>a[0]-b[0])\n      setdataForLineChart(m)\n    }\n\n    setStoreToDisplay(store)\n    setMonthToDisplay(month)\n\n  }\n\n  const retrieveLocations = () => {\n      SalesDataService.getStoreLocations()\n      .then(response => {\n      // console.log(response.data);\n      setLocations(response.data);\n      })\n      .catch(e => {\n      console.log(e);\n      });\n  }\n  // triggered setters\n  const OnChangeSetStore = e => {\n      setStore(e.target.value)\n  }\n\n  const OnChangeSetMonth = e => {\n    console.log(e.target.value)\n    for(var i=0;i<12;i++){\n      if(months[i] === e.target.value) {\n        setMonth(i) \n        return  \n      }\n    }\n    return \n  }\n\n    return (\n        <div className='wrapper'>\n            <div className=\"input-group mb-3 container\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text bg-dark\" id=\"basic-addon1\"><div className='text-white'>Store Location</div></span>\n                    </div>\n                    <select class=\"form-control selectinput\" type='select' onChange={OnChangeSetStore}>\n                    {\n                        locations.map(method => {\n                            return (\n                            <option value={method}> {method} </option>\n                            )\n                        })\n                    }\n                    </select>\n            </div>\n            <div className=\"input-group mb-3 container\">\n                <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text bg-dark\" id=\"basic-addon4\"><div className='text-white'>Month</div></span>\n                </div>\n\n                <select class=\"form-control selectinput\" type='select' onChange={OnChangeSetMonth}>\n                    {\n                    months.map(method => {\n                        return (\n                        <option value={method}> {method} </option>\n                        )\n                    })\n                    }\n                </select>\n\n                <div className=\"input-group-append\">\n                    <button\n                    className=\"btn btn-outline-dark\"\n                    type=\"button\"\n                    onClick={DisplayLineChart}\n                    >\n                    Analyze\n                    </button>\n                </div>\n            </div>\n            <div className='row py-4'></div>\n            <div className='container'>\n            {\n            dataForLineChart!=null ?(\n              <div>\n              <div class=\"jumbotron jumbotron-fluid\">\n              <div class=\"container\">\n                  <h1 class=\"display-6\">3. Monthly Revenue Chart for A store</h1> </div></div>  \n                  <Chart\n                  chartType=\"LineChart\"\n                  width=\"100%\"\n                  height=\"400px\"\n                  data={dataForLineChart}\n                  options={{\n                      title: `Revenue in ${storeToDisplay} in the month of ${months[monthToDisplay]}`,\n                      legend: { position: \"bottom\" },\n                      hAxis: {format: '0',\n                              viewWindow: {\n                                min: 0,\n                                max: 31\n                              }\n                            }\n                  }}\n                  /> \n              </div>\n            ):\n             noData ? (\n              <div class=\"jumbotron jumbotron-fluid\">\n              <div class=\"container\">\n                  <h1 class=\"display-6\">3. Monthly Revenue Chart for A store</h1>\n                  <p class=\"lead text-italics\">Select a Store and a Month</p>\n              </div>\n              </div> \n              ) : (\n                <div class=\"jumbotron jumbotron-fluid\">\n                <div class=\"container\">\n                    <h1 class=\"display-6\">3. Monthly Revenue Chart for A store</h1>\n                    <p class=\"lead text-italics\">No data found :(</p>\n                </div>\n                </div> \n              )\n            }\n            </div>\n        </div>\n    )\n}\n\nexport default Graph3","/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/components/graphs/graph1.component.js",["70","71","72","73","74","75","76"],"/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/components/graphs/graph2.component.js",["77","78","79","80","81","82","83"],"import React, { useEffect, useState } from 'react';\nimport SalesDataService from '../../services/sales.js' ;\nimport dayjs from 'dayjs' ;\nimport { Chart } from \"react-google-charts\";\nimport {Link,Routes,Route} from 'react-router-dom';\n\nconst Graph2 = props => {\n\n  const [sales, setSales] = React.useState([])\n  const [dataForAnnualPie, setDataForAnnualPie] = useState(null)\n  const [queryYear, setQueryYear] = useState(null)\n  const [yearToDisplay, setYearToDisplay] = useState(null)\n   \n  const calculateTotalRevenue = (items) => {\n    // console.log(items) ;\n    var totalRevenue = 0.0\n    items.map(item => {\n      totalRevenue+=(parseInt(item.quantity)*item.price['$numberDecimal']) \n    })\n    return totalRevenue\n  }\n\n  const DisplayPieForRevenueChart = () => {\n    // as pie chart comparing all stores\n    SalesDataService.getUnlimited()\n    .then(response => {       \n        setSales(response.data.Sales)\n    })\n    .catch(e => {\n        console.log(e);\n    })\n\n    var m = [[\"Store\",\"Annual Revenue\"]]\n    \n    sales.map((sale)=>{\n      const year = dayjs(sale.saleDate).year()\n      if(year == queryYear) {\n        const annualRevenue = calculateTotalRevenue(sale.items) \n        \n        var flag = 0\n        for(var i=1;i<m.length;i++) {\n          if(m[i][0] === sale.storeLocation) {\n            m[i][1]+=annualRevenue\n            flag = 1\n            break\n          }\n        }\n        if(!flag) {\n          m.push([sale.storeLocation, annualRevenue])\n        }\n      }\n    })\n\n    setDataForAnnualPie(m)\n    setYearToDisplay(queryYear)\n  }\n\n  const OnChangeSetYear = e => {\n    setQueryYear(e.target.value)\n  }\n\n    return (\n      <div className='wrapper'>\n        <div className=\"input-group mb-3 container\">\n                      <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text bg-dark\" id=\"basic-addon3\"><div className='text-white'>Year</div></span>\n                      </div>\n\n                      <input class=\"form-control numerical-input\" type=\"number\" min=\"2013\" max=\"2017\" onChange={OnChangeSetYear} >\n                      </input>\n\n                      <div className=\"input-group-append\">\n                          <button\n                          className=\"btn btn-outline-dark\"\n                          type=\"button\"\n                          onClick={DisplayPieForRevenueChart}\n                          >\n                          Analyze\n                          </button>\n                      </div>\n        </div>\n        <div className='container'>\n          {\n            dataForAnnualPie?(<div>\n              <div class=\"jumbotron jumbotron-fluid\">\n              <div class=\"container\">\n                <h1 class=\"display-6\">2. Comparison of Annual Sales in stores in {yearToDisplay}</h1>\n              </div></div>\n              <Chart\n              width={'800px'}\n              height={'600px'}\n              chartType=\"PieChart\"\n              loader={<div>Loading Chart</div>}\n              data={dataForAnnualPie}\n              options={{\n                title: `% Revenue per outlet in the year ${yearToDisplay}`,\n                // chartArea: { left: 15, top: 15, right: 0, bottom: 0 },\n                pieSliceText: \"label\",\n              }}\n              />\n            </div>) :\n            <div class=\"jumbotron jumbotron-fluid\">\n              <div class=\"container\">\n                <h1 class=\"display-6\">2. Comparison of Annual Sales in stores</h1>\n                <p class=\"lead text-italics\">Select a year</p>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n        \n    )\n}\n\nexport default Graph2","/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/services/sales.js",[],"/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/services/priceFormatter.js",[],"/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/services/stores.js",[],"/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/http-common.js",[],"/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/components/management.js",["84","85","86","87","88","89","90"],{"ruleId":"91","severity":1,"message":"92","line":40,"column":23,"nodeType":"93","endLine":40,"endColumn":48},{"ruleId":"91","severity":1,"message":"92","line":51,"column":25,"nodeType":"93","endLine":51,"endColumn":50},{"ruleId":"91","severity":1,"message":"92","line":62,"column":25,"nodeType":"93","endLine":62,"endColumn":50},{"ruleId":"91","severity":1,"message":"92","line":74,"column":19,"nodeType":"93","endLine":74,"endColumn":87},{"ruleId":"91","severity":1,"message":"92","line":82,"column":21,"nodeType":"93","endLine":82,"endColumn":45},{"ruleId":"94","severity":1,"message":"95","line":27,"column":19,"nodeType":"96","messageId":"97","endLine":27,"endColumn":29},{"ruleId":"94","severity":1,"message":"98","line":28,"column":19,"nodeType":"96","messageId":"97","endLine":28,"endColumn":29},{"ruleId":"99","severity":1,"message":"100","line":97,"column":20,"nodeType":"101","messageId":"102","endLine":97,"endColumn":22},{"ruleId":"99","severity":1,"message":"100","line":107,"column":28,"nodeType":"101","messageId":"102","endLine":107,"endColumn":30},{"ruleId":"103","severity":1,"message":"104","line":126,"column":33,"nodeType":"96","messageId":"105","endLine":126,"endColumn":46},{"ruleId":"103","severity":1,"message":"106","line":127,"column":39,"nodeType":"96","messageId":"105","endLine":127,"endColumn":58},{"ruleId":"94","severity":1,"message":"107","line":15,"column":18,"nodeType":"96","messageId":"97","endLine":15,"endColumn":27},{"ruleId":"99","severity":1,"message":"100","line":26,"column":20,"nodeType":"101","messageId":"102","endLine":26,"endColumn":22},{"ruleId":"99","severity":1,"message":"100","line":44,"column":21,"nodeType":"101","messageId":"102","endLine":44,"endColumn":23},{"ruleId":"94","severity":1,"message":"108","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":13},{"ruleId":"94","severity":1,"message":"109","line":5,"column":9,"nodeType":"96","messageId":"97","endLine":5,"endColumn":13},{"ruleId":"94","severity":1,"message":"110","line":5,"column":14,"nodeType":"96","messageId":"97","endLine":5,"endColumn":20},{"ruleId":"94","severity":1,"message":"111","line":5,"column":21,"nodeType":"96","messageId":"97","endLine":5,"endColumn":26},{"ruleId":"112","severity":1,"message":"113","line":18,"column":8,"nodeType":"114","endLine":18,"endColumn":16,"suggestions":"115"},{"ruleId":"99","severity":1,"message":"100","line":35,"column":27,"nodeType":"101","messageId":"102","endLine":35,"endColumn":29},{"ruleId":"99","severity":1,"message":"100","line":37,"column":36,"nodeType":"101","messageId":"102","endLine":37,"endColumn":38},{"ruleId":"94","severity":1,"message":"116","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"109","line":5,"column":9,"nodeType":"96","messageId":"97","endLine":5,"endColumn":13},{"ruleId":"94","severity":1,"message":"110","line":5,"column":14,"nodeType":"96","messageId":"97","endLine":5,"endColumn":20},{"ruleId":"94","severity":1,"message":"111","line":5,"column":21,"nodeType":"96","messageId":"97","endLine":5,"endColumn":26},{"ruleId":"99","severity":1,"message":"100","line":17,"column":20,"nodeType":"101","messageId":"102","endLine":17,"endColumn":22},{"ruleId":"99","severity":1,"message":"100","line":35,"column":21,"nodeType":"101","messageId":"102","endLine":35,"endColumn":23},{"ruleId":"117","severity":1,"message":"118","line":37,"column":15,"nodeType":"119","messageId":"120","endLine":37,"endColumn":17},{"ruleId":"94","severity":1,"message":"110","line":2,"column":14,"nodeType":"96","messageId":"97","endLine":2,"endColumn":20},{"ruleId":"94","severity":1,"message":"111","line":2,"column":21,"nodeType":"96","messageId":"97","endLine":2,"endColumn":26},{"ruleId":"94","severity":1,"message":"121","line":19,"column":12,"nodeType":"96","messageId":"97","endLine":19,"endColumn":17},{"ruleId":"94","severity":1,"message":"122","line":19,"column":19,"nodeType":"96","messageId":"97","endLine":19,"endColumn":27},{"ruleId":"94","severity":1,"message":"95","line":24,"column":21,"nodeType":"96","messageId":"97","endLine":24,"endColumn":31},{"ruleId":"94","severity":1,"message":"98","line":25,"column":21,"nodeType":"96","messageId":"97","endLine":25,"endColumn":31},{"ruleId":"112","severity":1,"message":"123","line":37,"column":6,"nodeType":"114","endLine":37,"endColumn":13,"suggestions":"124"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'setMinDate' is assigned a value but never used.","Identifier","unusedVar","'setMaxDate' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-const-assign","'queryLocation' is constant.","const","'queryPurchaseMethod' is constant.","'setNoData' is assigned a value but never used.","'dayjs' is defined but never used.","'Link' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'DisplayPieChart'. Either include it or remove the dependency array.","ArrayExpression",["125"],"'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ranks' is assigned a value but never used.","'setRanks' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'retrieveLocations' and 'retrieveSales'. Either include them or remove the dependency array.",["126"],{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [DisplayPieChart, noData]",{"range":"131","text":"132"},"Update the dependencies array to be: [retrieveLocations, retrieveSales, saved]",{"range":"133","text":"134"},[646,654],"[DisplayPieChart, noData]",[1513,1520],"[retrieveLocations, retrieveSales, saved]"]