{"ast":null,"code":"var _jsxFileName = \"/home/aarthi/fitgit/react/einduch-stop/frontend/src/components/prediction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport SalesDataService from '../services/sales.js';\nimport dayjs from 'dayjs';\nimport { Chart } from \"react-google-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PredictSales = props => {\n  _s();\n\n  // G1 : revenue from each all stores -> min & max = one graph has all stores \n  // G2 : percentage of different items sold from a given store - DONE\n  const [store, setStore] = React.useState(\"\");\n  const [locations, setLocations] = React.useState([]);\n  const [dataForPiePlot, setdataForPiePlot] = React.useState(null);\n  const [dataForLineChart, setdataForLineChart] = React.useState(null);\n  const [dataForBarChart, setdataForBarChart] = React.useState(null);\n  const [sales, setSales] = React.useState([]);\n  const [month, setMonth] = React.useState(\"\");\n  const months = ['Jan', 'Feb', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const [queryItem, setItem] = React.useState('');\n  const [queryYear, setQueryYear] = React.useState();\n  const [dataForAnnualPie, setDataForAnnualPie] = React.useState(null);\n  useEffect(() => {\n    retrieveLocations();\n  }, []);\n\n  const retrieveLocations = () => {\n    SalesDataService.getStoreLocations().then(response => {\n      // console.log(response.data);\n      setLocations(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }; // triggered setters\n\n\n  const OnChangeSetStore = e => {\n    setStore(e.target.value);\n  };\n\n  const OnChangeSetMonth = e => {\n    console.log(e.target.value);\n\n    for (var i = 0; i < 12; i++) {\n      if (months[i] === e.target.value) {\n        setMonth(i);\n        return;\n      }\n    }\n\n    return;\n  };\n\n  const OnChangeSetItem = e => {\n    setItem(e.target.value.toLowerCase());\n  };\n\n  const OnChangeSetYear = e => {\n    setQueryYear(e.target.value);\n  }; // helper functions\n\n\n  const calculateQuantityItems = () => {\n    var items = {}; // {'pencil':3, 'eraser':10}\n    // 13\n\n    sales.map(element => {\n      element.items.map(item => {\n        items[item.name] = items[item.name] ? items[item.name] + parseInt(item.quantity) : parseInt(item.quantity);\n      });\n    });\n    var ratios = [['Category', 'Quantity sold']];\n    var objectKeysArray = Object.keys(items);\n    objectKeysArray.forEach(objKey => {\n      var objValue = items[objKey]; // objVal holds quantity of each item\n\n      var ration = [objKey, objValue];\n      ratios.push(ration);\n    });\n    return ratios;\n  };\n\n  const calculateTotalRevenue = items => {\n    // console.log(items) ;\n    var totalRevenue = 0.0;\n    items.map(item => {\n      totalRevenue += parseInt(item.quantity) * item.price['$numberDecimal'];\n    });\n    return totalRevenue;\n  }; // display graphs\n\n\n  const DisplayLineChart = () => {\n    // choose a month -> display line chart from that month      \n    SalesDataService.getUnlimited(store, \"location\").then(response => {\n      setSales(response.data.Sales);\n    }).catch(e => {\n      console.log(e);\n    });\n    var m = [[\"Date\", \"Revenue\"]];\n    var monthlySaleExists = false;\n    sales.map(sale => {\n      const date = dayjs(sale.saleDate).month();\n\n      if (date === month) {\n        monthlySaleExists = true;\n        const d = dayjs(sale.saleDate).date();\n        const monthlyRevenue = calculateTotalRevenue(sale.items);\n        var flag = 0;\n\n        for (var i = 0; i < m.length; i++) {\n          if (m[i][0] === d) {\n            m[i][1] += monthlyRevenue;\n            flag = 1;\n            break;\n          }\n        }\n\n        if (!flag) {\n          m.push([d, monthlyRevenue]);\n        }\n      }\n    });\n    if (!monthlySaleExists) setdataForLineChart(null);else {\n      m.sort((a, b) => a[0] - b[0]);\n      setdataForLineChart(m);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row py-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-4\",\n        id: \"sticky-sidebar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"sticky-top \",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"nav flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"input-group-prepend\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"input-group-text\",\n                  id: \"basic-addon3\",\n                  children: \"Store Location\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                class: \"form-control\",\n                onChange: OnChangeSetStore,\n                children: locations.map(method => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: method,\n                    children: [\" \", method, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 31\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group-append\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-outline-secondary\",\n                  label: \"Analyze an outlet\",\n                  type: \"button\",\n                  onClick: DisplayPieChart,\n                  children: \"Analyze\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"input-group-prepend\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"input-group-text\",\n                  id: \"basic-addon3\",\n                  children: \"Month\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                class: \"form-control\",\n                onChange: OnChangeSetMonth,\n                children: months.map(method => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: method,\n                    children: [\" \", method, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 31\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group-append\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-outline-secondary\",\n                  type: \"button\",\n                  onClick: DisplayLineChart,\n                  children: \"Analyze\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"input-group-prepend\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"input-group-text\",\n                  id: \"basic-addon3\",\n                  children: \"Item\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                class: \"form-control\",\n                onChange: OnChangeSetItem\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group-append\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-outline-secondary\",\n                  type: \"button\",\n                  onClick: DisplayBarChart,\n                  children: \"Analyze\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"input-group-prepend\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"input-group-text\",\n                  id: \"basic-addon3\",\n                  children: \"Year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                class: \"form-control\",\n                type: \"number\",\n                min: \"2013\",\n                max: \"2017\",\n                onChange: OnChangeSetYear\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group-append\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-outline-secondary\",\n                  type: \"button\",\n                  onClick: DisplayPieForRevenueChart,\n                  children: \"Analyze\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          class: \"columns\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 7\n  }, this);\n};\n\n_s(PredictSales, \"E0K/SqZ4qplO5+8cxN3xqHEF37w=\");\n\n_c = PredictSales;\nexport default PredictSales;\n\nvar _c;\n\n$RefreshReg$(_c, \"PredictSales\");","map":{"version":3,"sources":["/home/aarthi/fitgit/react/einduch-stop/frontend/src/components/prediction.js"],"names":["React","useEffect","SalesDataService","dayjs","Chart","PredictSales","props","store","setStore","useState","locations","setLocations","dataForPiePlot","setdataForPiePlot","dataForLineChart","setdataForLineChart","dataForBarChart","setdataForBarChart","sales","setSales","month","setMonth","months","queryItem","setItem","queryYear","setQueryYear","dataForAnnualPie","setDataForAnnualPie","retrieveLocations","getStoreLocations","then","response","data","catch","e","console","log","OnChangeSetStore","target","value","OnChangeSetMonth","i","OnChangeSetItem","toLowerCase","OnChangeSetYear","calculateQuantityItems","items","map","element","item","name","parseInt","quantity","ratios","objectKeysArray","Object","keys","forEach","objKey","objValue","ration","push","calculateTotalRevenue","totalRevenue","price","DisplayLineChart","getUnlimited","Sales","m","monthlySaleExists","sale","date","saleDate","d","monthlyRevenue","flag","length","sort","a","b","method","DisplayPieChart","DisplayBarChart","DisplayPieForRevenueChart"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport SalesDataService from '../services/sales.js' ;\nimport dayjs from 'dayjs' ;\nimport { Chart } from \"react-google-charts\";\n\nconst PredictSales = (props) => {\n    // G1 : revenue from each all stores -> min & max = one graph has all stores \n\n    // G2 : percentage of different items sold from a given store - DONE\n     \n    const [store, setStore] = React.useState(\"\")\n    const [locations, setLocations] = React.useState([])\n    const [dataForPiePlot, setdataForPiePlot] = React.useState(null)\n    const [dataForLineChart, setdataForLineChart] = React.useState(null)\n    const [dataForBarChart, setdataForBarChart] = React.useState(null)\n    const [sales, setSales] = React.useState([])\n    const [month, setMonth] = React.useState(\"\")\n    const months = ['Jan', 'Feb','March','April','May','June','July','August','September','October','November','December'] \n    const [queryItem, setItem] = React.useState('')\n    const [queryYear, setQueryYear] = React.useState()\n    const [dataForAnnualPie, setDataForAnnualPie] = React.useState(null)\n        \n  useEffect(() => {\n    retrieveLocations();\n  }, []);\n\n    const retrieveLocations = () => {\n        SalesDataService.getStoreLocations()\n        .then(response => {\n        // console.log(response.data);\n        setLocations(response.data);\n        })\n        .catch(e => {\n        console.log(e);\n        });\n    }\n    // triggered setters\n    const OnChangeSetStore = e => {\n        setStore(e.target.value)\n    }\n\n    const OnChangeSetMonth = e => {\n      console.log(e.target.value)\n      for(var i=0;i<12;i++){\n        if(months[i] === e.target.value) {\n          setMonth(i) \n          return  \n        }\n      }\n      return \n    }\n\n    const OnChangeSetItem = (e) => {\n      setItem(e.target.value.toLowerCase())\n    }\n    \n    const OnChangeSetYear = e => {\n      setQueryYear(e.target.value)\n    }\n\n    // helper functions\n    const calculateQuantityItems = () => {\n               \n        var items = {}\n        // {'pencil':3, 'eraser':10}\n        // 13\n        sales.map(element => {\n\n            element.items.map(item => {\n              \n              items[item.name]=(items[item.name] ? items[item.name]+parseInt(item.quantity) : parseInt(item.quantity))\n\n            })\n        });\n        var ratios = [['Category','Quantity sold']]\n        var objectKeysArray = Object.keys(items)\n        objectKeysArray.forEach((objKey) => {\n            var objValue = items[objKey]\n            // objVal holds quantity of each item\n            var ration = [objKey, objValue]\n            ratios.push(ration)\n        })\n        \n        return ratios\n    }\n    \n    const calculateTotalRevenue = (items) => {\n      // console.log(items) ;\n      var totalRevenue = 0.0\n      items.map(item => {\n        totalRevenue+=(parseInt(item.quantity)*item.price['$numberDecimal']) \n      })\n      return totalRevenue\n    }\n\n    // display graphs\n    \n    const DisplayLineChart = () => {      \n      // choose a month -> display line chart from that month      \n      SalesDataService.getUnlimited(store, \"location\")\n      .then(response => {        \n          setSales(response.data.Sales)\n      })\n      .catch(e => {\n          console.log(e);\n      })\n\n      var m = [[\"Date\",\"Revenue\"]]\n      var monthlySaleExists = false \n      sales.map((sale)=>{\n        const date = dayjs(sale.saleDate).month()\n        if(date === month) {\n          monthlySaleExists = true ;\n          const d = dayjs(sale.saleDate).date()\n          const monthlyRevenue = calculateTotalRevenue(sale.items) \n          \n          var flag = 0\n          for(var i=0;i<m.length;i++) {\n            if(m[i][0] === d) {\n              m[i][1]+=monthlyRevenue\n              flag = 1\n              break\n            }\n          }\n          if(!flag) {\n            m.push([d,monthlyRevenue])\n          }\n        }\n      })\n      if(!monthlySaleExists)\n        setdataForLineChart(null)\n      else {\n        m.sort((a,b)=>a[0]-b[0])\n        setdataForLineChart(m)\n      }\n\n    }\n\n    return (\n      <div class=\"container\">\n        <div class=\"row py-3\">\n          <div class=\"col-4\" id=\"sticky-sidebar\">\n            <div class=\"sticky-top \">\n                <div class=\"nav flex-column\">      \n                  <div className=\"input-group mb-3\">\n                      <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\" id=\"basic-addon3\">Store Location</span>\n                      </div>\n\n                      <select class=\"form-control\" onChange={OnChangeSetStore}>\n                          {\n                          locations.map(method => {\n                              return (\n                              <option value={method}> {method} </option>\n                              )\n                          })\n                          }\n                      </select>\n\n                    <div className=\"input-group-append\">\n                      <button\n                        className=\"btn btn-outline-secondary\"\n                        label=\"Analyze an outlet\"\n                        type=\"button\"\n                        onClick={DisplayPieChart}\n                      > \n                      Analyze\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"input-group mb-3\">\n                      <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\" id=\"basic-addon3\">Month</span>\n                      </div>\n\n                      <select class=\"form-control\" onChange={OnChangeSetMonth}>\n                          {\n                          months.map(method => {\n                              return (\n                              <option value={method}> {method} </option>\n                              )\n                          })\n                          }\n                      </select>\n\n                      <div className=\"input-group-append\">\n                          <button\n                          className=\"btn btn-outline-secondary\"\n                          type=\"button\"\n                          onClick={DisplayLineChart}\n                          >\n                          Analyze\n                          </button>\n                      </div>\n                  </div>\n                  <div className=\"input-group mb-3\">\n                      <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\" id=\"basic-addon3\">Item</span>\n                      </div>\n\n                      <input class=\"form-control\"  onChange={OnChangeSetItem}>\n                      </input>\n\n                      <div className=\"input-group-append\">\n                          <button\n                          className=\"btn btn-outline-secondary\"\n                          type=\"button\"\n                          onClick={DisplayBarChart}\n                          >\n                          Analyze\n                          </button>\n                      </div>\n                  </div>\n                  <div className=\"input-group mb-3\">\n                      <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\" id=\"basic-addon3\">Year</span>\n                      </div>\n\n                      <input class=\"form-control\" type=\"number\" min=\"2013\" max=\"2017\" onChange={OnChangeSetYear} >\n                      </input>\n\n                      <div className=\"input-group-append\">\n                          <button\n                          className=\"btn btn-outline-secondary\"\n                          type=\"button\"\n                          onClick={DisplayPieForRevenueChart}\n                          >\n                          Analyze\n                          </button>\n                      </div>\n                  </div>   \n                </div>\n            </div>\n          </div>\n          <div class=\"col\">\n            <table class=\"columns\">\n            </table>\n          </div>\n        </div> \n      </div>\n    );\n\n}\n\nexport default PredictSales;\n"]},"metadata":{},"sourceType":"module"}