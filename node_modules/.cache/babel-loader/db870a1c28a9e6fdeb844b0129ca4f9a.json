{"ast":null,"code":"import { geometry as geom, drawing as draw } from '@progress/kendo-drawing';\nimport { Class, addClass, setDefaultOptions, deepExtend, defaultErrorHandler } from '../common';\nimport { Box } from '../core';\nimport { encodeData } from './encodings/encoding';\nimport { extend } from './utils';\nvar round = Math.round;\nvar crossPattern = [[0, 1], [1, 1], [1, 2], [2, 2], [2, 1], [3, 1], [3, 0], [2, 0], [2, -1], [1, -1], [1, 0]];\nvar squarePattern = [[0, 1], [1, 1], [1, 0]];\nvar QRCodeDefaults = {\n  DEFAULT_SIZE: 200,\n  QUIET_ZONE_LENGTH: 4,\n  DEFAULT_ERROR_CORRECTION_LEVEL: \"L\",\n  DEFAULT_BACKGROUND: \"#fff\",\n  DEFAULT_DARK_MODULE_COLOR: \"#000\",\n  MIN_BASE_UNIT_SIZE: 1,\n  DEFAULT_LOGO_SIZE: 7\n};\n\nvar QRCode = function (Class) {\n  function QRCode(element, options, errorHandler) {\n    if (errorHandler === void 0) errorHandler = defaultErrorHandler;\n    Class.call(this);\n    this.options = deepExtend({}, this.options, options);\n    this.element = element;\n    this.wrapper = this.element;\n    this.onError = errorHandler;\n\n    this._initElement();\n\n    this._initSurface();\n\n    this.setOptions(options);\n  }\n\n  if (Class) QRCode.__proto__ = Class;\n  QRCode.prototype = Object.create(Class && Class.prototype);\n  QRCode.prototype.constructor = QRCode;\n\n  QRCode.prototype.destroy = function destroy() {\n    this._destroySurface();\n  };\n\n  QRCode.prototype._initElement = function _initElement() {\n    addClass(this.element, \"k-qrcode\");\n  };\n\n  QRCode.prototype._initSurface = function _initSurface() {\n    var ref = this;\n    var options = ref.options;\n    var surface = ref.surface;\n\n    if (!surface || surface.options.type !== options.renderAs) {\n      this._destroySurface();\n\n      this._initSurfaceElement();\n\n      this.surface = this._createSurface();\n    }\n  };\n\n  QRCode.prototype._createSurface = function _createSurface() {\n    return draw.Surface.create(this.surfaceElement, {\n      type: this.options.renderAs\n    });\n  };\n\n  QRCode.prototype._destroySurface = function _destroySurface() {\n    if (this.surface) {\n      this.surface.destroy();\n      this.surface = null;\n\n      this._destroySurfaceElement();\n    }\n  };\n\n  QRCode.prototype._initSurfaceElement = function _initSurfaceElement() {\n    if (!this.surfaceElement) {\n      this.surfaceElement = document.createElement('div');\n      this.surfaceElement.style.position = \"relative\";\n      this.element.appendChild(this.surfaceElement);\n    }\n  };\n\n  QRCode.prototype._destroySurfaceElement = function _destroySurfaceElement() {\n    if (this.surfaceElement && this.surfaceElement.parentNode) {\n      this.surfaceElement.parentNode.removeChild(this.surfaceElement);\n      this.surfaceElement = null;\n    }\n  };\n\n  QRCode.prototype.redraw = function redraw() {\n    var size = this._getSize();\n\n    this.surface.clear();\n    this.surface.setSize({\n      width: size,\n      height: size\n    });\n    this.createVisual();\n    this.surface.draw(this.visual);\n  };\n\n  QRCode.prototype.getSize = function getSize() {\n    var element = this.element;\n    var elementWidth = element.clientWidth;\n    var elementHeight = element.clientHeight;\n    var size = {\n      width: 0,\n      height: 0\n    };\n\n    if (elementWidth > 0) {\n      size.width = elementWidth;\n    }\n\n    if (elementHeight) {\n      size.height = elementHeight;\n    }\n\n    return size;\n  };\n\n  QRCode.prototype._resize = function _resize() {\n    this.redraw();\n  };\n\n  QRCode.prototype.createVisual = function createVisual() {\n    this.visual = this._render();\n  };\n\n  QRCode.prototype.exportVisual = function exportVisual() {\n    return this._render();\n  };\n\n  QRCode.prototype._render = function _render() {\n    var value = this._value,\n        baseUnit,\n        border = this.options.border || {},\n        padding = this.options.padding || 0,\n        borderWidth = border.width || 0,\n        quietZoneSize,\n        matrix,\n        size,\n        dataSize,\n        contentSize;\n    border.width = borderWidth;\n    var visual = new draw.Group();\n\n    try {\n      if (value) {\n        matrix = encodeData(value, this.options.errorCorrection, this.options.encoding);\n        size = this._getSize();\n        contentSize = size - 2 * (borderWidth + padding);\n        baseUnit = this._calculateBaseUnit(contentSize, matrix.length);\n        dataSize = matrix.length * baseUnit;\n        quietZoneSize = borderWidth + padding + (contentSize - dataSize) / 2;\n        visual.append(this._renderBackground(size, border));\n        visual.append(this._renderMatrix(matrix, baseUnit, quietZoneSize));\n\n        if (this._hasCustomLogo()) {\n          visual.append(this._renderLogo(size, baseUnit));\n        } else if (this._isSwiss()) {\n          visual.append(this._renderSwissCode(size, baseUnit));\n        }\n      }\n    } catch (error) {\n      this.onError(error);\n    }\n\n    return visual;\n  };\n\n  QRCode.prototype._renderLogo = function _renderLogo(qrSize, baseUnit) {\n    var image;\n    var imageRect;\n    var center = round(qrSize / 2);\n\n    var logoSize = this._getLogoSize(baseUnit * QRCodeDefaults.DEFAULT_LOGO_SIZE);\n\n    var logoUrl = this.options.overlay.imageUrl;\n    var position = {\n      x: center - logoSize.width / 2,\n      y: center - logoSize.height / 2\n    };\n    imageRect = new geom.Rect(new geom.Point(position.x, position.y), new geom.Size(logoSize.width, logoSize.height));\n    image = new draw.Image(logoUrl, imageRect);\n    return image;\n  };\n\n  QRCode.prototype._renderSwissCode = function _renderSwissCode(qrSize, baseUnit) {\n    var logoSize = this._getLogoSize(baseUnit * QRCodeDefaults.DEFAULT_LOGO_SIZE);\n\n    logoSize = Math.max(logoSize.width, logoSize.height);\n    var crossSize = logoSize / 4;\n    var crossOffset = crossSize / 2;\n    var center = qrSize / 2;\n    var start = {};\n    var visual = new draw.Group();\n    start.x = start.y = Math.ceil(center - baseUnit - logoSize / 2);\n    visual.append(this._renderShape(start, Math.ceil(logoSize + baseUnit * 2), squarePattern, \"#fff\"));\n    start.x = start.y = center - logoSize / 2;\n    visual.append(this._renderShape(start, logoSize, squarePattern, this.options.color));\n    start.x = center + crossOffset - logoSize / 2;\n    start.y = center + crossOffset + crossSize - logoSize / 2;\n    visual.append(this._renderShape(start, crossSize, crossPattern, \"#fff\"));\n    return visual;\n  };\n\n  QRCode.prototype._renderShape = function _renderShape(start, step, pattern, color) {\n    var path = new draw.MultiPath({\n      fill: {\n        color: color\n      },\n      stroke: null\n    });\n    path.moveTo(start.x, start.y);\n\n    for (var i = 0; i < pattern.length; i++) {\n      path.lineTo(start.x + step * pattern[i][0], start.y + step * pattern[i][1]);\n    }\n\n    path.close();\n    return path;\n  };\n\n  QRCode.prototype._getSize = function _getSize() {\n    var size;\n\n    if (this.options.size) {\n      size = parseInt(this.options.size, 10);\n    } else {\n      var element = this.element;\n      var min = Math.min(element.clientWidth, element.clientHeight);\n\n      if (min > 0) {\n        size = min;\n      } else {\n        size = QRCodeDefaults.DEFAULT_SIZE;\n      }\n    }\n\n    return size;\n  };\n\n  QRCode.prototype._calculateBaseUnit = function _calculateBaseUnit(size, matrixSize) {\n    var baseUnit = Math.floor(size / matrixSize);\n\n    if (baseUnit < QRCodeDefaults.MIN_BASE_UNIT_SIZE) {\n      var minSize = Math.ceil(matrixSize * QRCodeDefaults.MIN_BASE_UNIT_SIZE);\n      this.onError(new Error(\"Insufficient size for QR Code: the current size is \" + size + \"px and the minimum size is \" + minSize + \"px.\"));\n    } else if (baseUnit * matrixSize >= size && baseUnit - 1 >= QRCodeDefaults.MIN_BASE_UNIT_SIZE) {\n      baseUnit--;\n    }\n\n    return baseUnit;\n  };\n\n  QRCode.prototype._renderMatrix = function _renderMatrix(matrix, baseUnit, quietZoneSize) {\n    var path = new draw.MultiPath({\n      fill: {\n        color: this.options.color\n      },\n      stroke: null\n    });\n\n    for (var row = 0; row < matrix.length; row++) {\n      var y = quietZoneSize + row * baseUnit;\n      var column = 0;\n\n      while (column < matrix.length) {\n        while (matrix[row][column] === 0 && column < matrix.length) {\n          column++;\n        }\n\n        if (column < matrix.length) {\n          var x = column;\n\n          while (matrix[row][column] === 1) {\n            column++;\n          }\n\n          var x1 = round(quietZoneSize + x * baseUnit);\n          var y1 = round(y);\n          var x2 = round(quietZoneSize + column * baseUnit);\n          var y2 = round(y + baseUnit);\n          path.moveTo(x1, y1).lineTo(x1, y2).lineTo(x2, y2).lineTo(x2, y1).close();\n        }\n      }\n    }\n\n    return path;\n  };\n\n  QRCode.prototype._renderBackground = function _renderBackground(size, border) {\n    var box = new Box(0, 0, size, size).unpad(border.width / 2);\n    var background = draw.Path.fromRect(box.toRect(), {\n      fill: {\n        color: this.options.background\n      },\n      stroke: {\n        color: border.color,\n        width: border.width\n      }\n    });\n    return background;\n  };\n\n  QRCode.prototype.setOptions = function setOptions(options) {\n    var newOptions = options || {};\n    this.options = extend(this.options, newOptions);\n\n    if (options.value !== undefined) {\n      this._value = String(this.options.value);\n    }\n\n    this.redraw();\n  };\n\n  QRCode.prototype.value = function value(value$1) {\n    if (value$1 === undefined) {\n      return this._value;\n    }\n\n    this._value = String(value$1);\n    this.redraw();\n  };\n\n  QRCode.prototype._hasCustomLogo = function _hasCustomLogo() {\n    return Boolean(this.options.overlay.imageUrl);\n  };\n\n  QRCode.prototype._isSwiss = function _isSwiss() {\n    return this.options.overlay.type === \"swiss\";\n  };\n\n  QRCode.prototype._getLogoSize = function _getLogoSize(defautLogoSize) {\n    var width = this.options.overlay.width;\n    var height = this.options.overlay.height;\n\n    if (!width && !height) {\n      width = height = defautLogoSize;\n    } else if (width && !height) {\n      height = width;\n    } else if (!width && height) {\n      width = height;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  };\n\n  return QRCode;\n}(Class);\n\nsetDefaultOptions(QRCode, {\n  name: \"QRCode\",\n  renderAs: \"svg\",\n  encoding: \"ISO_8859_1\",\n  value: \"\",\n  errorCorrection: QRCodeDefaults.DEFAULT_ERROR_CORRECTION_LEVEL,\n  background: QRCodeDefaults.DEFAULT_BACKGROUND,\n  color: QRCodeDefaults.DEFAULT_DARK_MODULE_COLOR,\n  size: \"\",\n  padding: 0,\n  border: {\n    color: \"\",\n    width: 0\n  },\n  overlay: {\n    type: \"image\",\n    imageUrl: \"\",\n    width: 0,\n    height: 0\n  }\n});\nexport default QRCode;","map":{"version":3,"sources":["/home/aarthi/fitgit/react/einduch-shop/frontend/node_modules/@progress/kendo-charts/dist/es/qrcode/qrcode.js"],"names":["geometry","geom","drawing","draw","Class","addClass","setDefaultOptions","deepExtend","defaultErrorHandler","Box","encodeData","extend","round","Math","crossPattern","squarePattern","QRCodeDefaults","DEFAULT_SIZE","QUIET_ZONE_LENGTH","DEFAULT_ERROR_CORRECTION_LEVEL","DEFAULT_BACKGROUND","DEFAULT_DARK_MODULE_COLOR","MIN_BASE_UNIT_SIZE","DEFAULT_LOGO_SIZE","QRCode","element","options","errorHandler","call","wrapper","onError","_initElement","_initSurface","setOptions","__proto__","prototype","Object","create","constructor","destroy","_destroySurface","ref","surface","type","renderAs","_initSurfaceElement","_createSurface","Surface","surfaceElement","_destroySurfaceElement","document","createElement","style","position","appendChild","parentNode","removeChild","redraw","size","_getSize","clear","setSize","width","height","createVisual","visual","getSize","elementWidth","clientWidth","elementHeight","clientHeight","_resize","_render","exportVisual","value","_value","baseUnit","border","padding","borderWidth","quietZoneSize","matrix","dataSize","contentSize","Group","errorCorrection","encoding","_calculateBaseUnit","length","append","_renderBackground","_renderMatrix","_hasCustomLogo","_renderLogo","_isSwiss","_renderSwissCode","error","qrSize","image","imageRect","center","logoSize","_getLogoSize","logoUrl","overlay","imageUrl","x","y","Rect","Point","Size","Image","max","crossSize","crossOffset","start","ceil","_renderShape","color","step","pattern","path","MultiPath","fill","stroke","moveTo","i","lineTo","close","parseInt","min","matrixSize","floor","minSize","Error","row","column","x1","y1","x2","y2","box","unpad","background","Path","fromRect","toRect","newOptions","undefined","String","value$1","Boolean","defautLogoSize","name"],"mappings":"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","sourcesContent":["import {\n    geometry as geom,\n    drawing as draw\n} from '@progress/kendo-drawing';\n\nimport {\n    Class,\n    addClass,\n    setDefaultOptions,\n    deepExtend,\n    defaultErrorHandler\n} from '../common';\n\nimport { Box } from '../core';\nimport { encodeData } from './encodings/encoding';\nimport { extend } from './utils';\n\nvar round = Math.round;\nvar crossPattern = [[0, 1], [1, 1], [1, 2], [2, 2], [2, 1], [3, 1], [3, 0], [2, 0], [2, -1], [1, -1], [1, 0]];\nvar squarePattern = [[0, 1], [1, 1], [1, 0]];\n\nvar QRCodeDefaults = {\n    DEFAULT_SIZE: 200,\n    QUIET_ZONE_LENGTH: 4,\n    DEFAULT_ERROR_CORRECTION_LEVEL: \"L\",\n    DEFAULT_BACKGROUND: \"#fff\",\n    DEFAULT_DARK_MODULE_COLOR: \"#000\",\n    MIN_BASE_UNIT_SIZE: 1,\n    DEFAULT_LOGO_SIZE: 7\n};\n\nvar QRCode = (function (Class) {\n    function QRCode(element, options, errorHandler) {\n        if ( errorHandler === void 0 ) errorHandler = defaultErrorHandler;\n\n        Class.call(this);\n\n        this.options = deepExtend({}, this.options, options);\n        this.element = element;\n        this.wrapper = this.element;\n        this.onError = errorHandler;\n\n        this._initElement();\n        this._initSurface();\n\n        this.setOptions(options);\n    }\n\n    if ( Class ) QRCode.__proto__ = Class;\n    QRCode.prototype = Object.create( Class && Class.prototype );\n    QRCode.prototype.constructor = QRCode;\n\n    QRCode.prototype.destroy = function destroy () {\n        this._destroySurface();\n    };\n\n    QRCode.prototype._initElement = function _initElement () {\n        addClass(this.element, \"k-qrcode\");\n    };\n\n    QRCode.prototype._initSurface = function _initSurface () {\n        var ref = this;\n        var options = ref.options;\n        var surface = ref.surface;\n\n        if (!surface || surface.options.type !== options.renderAs) {\n            this._destroySurface();\n            this._initSurfaceElement();\n            this.surface = this._createSurface();\n        }\n    };\n\n    QRCode.prototype._createSurface = function _createSurface () {\n        return draw.Surface.create(this.surfaceElement, {\n            type: this.options.renderAs\n        });\n    };\n\n    QRCode.prototype._destroySurface = function _destroySurface () {\n        if (this.surface) {\n            this.surface.destroy();\n            this.surface = null;\n            this._destroySurfaceElement();\n        }\n    };\n\n    QRCode.prototype._initSurfaceElement = function _initSurfaceElement () {\n        if (!this.surfaceElement) {\n            this.surfaceElement = document.createElement('div');\n            this.surfaceElement.style.position = \"relative\";\n            this.element.appendChild(this.surfaceElement);\n        }\n    };\n\n    QRCode.prototype._destroySurfaceElement = function _destroySurfaceElement () {\n        if (this.surfaceElement && this.surfaceElement.parentNode) {\n            this.surfaceElement.parentNode.removeChild(this.surfaceElement);\n            this.surfaceElement = null;\n        }\n    };\n\n    QRCode.prototype.redraw = function redraw () {\n        var size = this._getSize();\n\n        this.surface.clear();\n\n        this.surface.setSize({\n            width: size,\n            height: size\n        });\n\n        this.createVisual();\n\n        this.surface.draw(this.visual);\n    };\n\n    QRCode.prototype.getSize = function getSize () {\n        var element = this.element;\n        var elementWidth = element.clientWidth;\n        var elementHeight = element.clientHeight;\n        var size = { width: 0, height: 0 };\n\n        if (elementWidth > 0) {\n            size.width = elementWidth;\n        }\n\n        if (elementHeight) {\n            size.height = elementHeight;\n        }\n\n        return size;\n    };\n\n    QRCode.prototype._resize = function _resize () {\n        this.redraw();\n    };\n\n    QRCode.prototype.createVisual = function createVisual () {\n        this.visual = this._render();\n    };\n\n    QRCode.prototype.exportVisual = function exportVisual () {\n        return this._render();\n    };\n\n    QRCode.prototype._render = function _render () {\n        var value = this._value,\n            baseUnit,\n            border = this.options.border || {},\n            padding = this.options.padding || 0,\n            borderWidth = border.width || 0,\n            quietZoneSize,\n            matrix,\n            size,\n            dataSize,\n            contentSize;\n\n        border.width = borderWidth;\n\n        var visual = new draw.Group();\n\n        try {\n            if (value) {\n                matrix = encodeData(value, this.options.errorCorrection, this.options.encoding);\n                size = this._getSize();\n                contentSize = size - 2 * (borderWidth + padding);\n                baseUnit = this._calculateBaseUnit(contentSize, matrix.length);\n                dataSize = matrix.length * baseUnit;\n                quietZoneSize = borderWidth + padding + (contentSize - dataSize) / 2;\n\n                visual.append(this._renderBackground(size, border));\n                visual.append(this._renderMatrix(matrix, baseUnit, quietZoneSize));\n\n                if (this._hasCustomLogo()) {\n                    visual.append(this._renderLogo(size, baseUnit));\n                } else if (this._isSwiss()) {\n                    visual.append(this._renderSwissCode(size, baseUnit));\n                }\n            }\n        } catch (error) {\n            this.onError(error);\n        }\n\n        return visual;\n    };\n\n    QRCode.prototype._renderLogo = function _renderLogo (qrSize, baseUnit) {\n        var image;\n        var imageRect;\n        var center = round(qrSize / 2);\n        var logoSize = this._getLogoSize(baseUnit * QRCodeDefaults.DEFAULT_LOGO_SIZE);\n        var logoUrl = this.options.overlay.imageUrl;\n        var position = {\n            x: center - logoSize.width / 2,\n            y: center - logoSize.height / 2\n        };\n\n        imageRect = new geom.Rect(\n            new geom.Point(position.x, position.y),\n            new geom.Size(logoSize.width, logoSize.height)\n        );\n\n        image = new draw.Image(logoUrl, imageRect);\n\n        return image;\n    };\n\n    QRCode.prototype._renderSwissCode = function _renderSwissCode (qrSize, baseUnit) {\n        var logoSize = this._getLogoSize(baseUnit * QRCodeDefaults.DEFAULT_LOGO_SIZE);\n        logoSize = Math.max(logoSize.width, logoSize.height);\n        var crossSize = logoSize / 4;\n        var crossOffset = crossSize / 2;\n        var center = qrSize / 2;\n        var start = {};\n        var visual = new draw.Group();\n\n        start.x = start.y = Math.ceil(center - baseUnit - logoSize / 2);\n        visual.append(this._renderShape(start, Math.ceil(logoSize + baseUnit * 2), squarePattern, \"#fff\"));\n\n        start.x = start.y = center - logoSize / 2;\n        visual.append(this._renderShape(start, logoSize, squarePattern, this.options.color));\n\n        start.x = center + crossOffset - logoSize / 2;\n        start.y = center + crossOffset + crossSize - logoSize / 2;\n        visual.append(this._renderShape(start, crossSize, crossPattern, \"#fff\"));\n\n        return visual;\n    };\n\n    QRCode.prototype._renderShape = function _renderShape (start, step, pattern, color) {\n        var path = new draw.MultiPath({\n            fill: {\n                color: color\n            },\n            stroke: null\n        });\n\n        path.moveTo(start.x, start.y);\n\n        for (var i = 0; i < pattern.length; i++) {\n            path.lineTo(start.x + step * pattern[i][0], start.y + step * pattern[i][1]);\n        }\n\n        path.close();\n\n        return path;\n    };\n\n    QRCode.prototype._getSize = function _getSize () {\n        var size;\n\n        if (this.options.size) {\n            size = parseInt(this.options.size, 10);\n        } else {\n            var element = this.element;\n            var min = Math.min(element.clientWidth, element.clientHeight);\n\n            if (min > 0) {\n                size = min;\n            } else {\n                size = QRCodeDefaults.DEFAULT_SIZE;\n            }\n        }\n\n        return size;\n    };\n\n    QRCode.prototype._calculateBaseUnit = function _calculateBaseUnit (size, matrixSize) {\n        var baseUnit = Math.floor(size / matrixSize);\n\n        if (baseUnit < QRCodeDefaults.MIN_BASE_UNIT_SIZE) {\n            var minSize = Math.ceil(matrixSize * QRCodeDefaults.MIN_BASE_UNIT_SIZE);\n            this.onError(new Error(\n                (\"Insufficient size for QR Code: the current size is \" + size + \"px and the minimum size is \" + minSize + \"px.\")\n            ));\n        } else if (baseUnit * matrixSize >= size &&\n            baseUnit - 1 >= QRCodeDefaults.MIN_BASE_UNIT_SIZE) {\n            baseUnit--;\n        }\n\n        return baseUnit;\n    };\n\n    QRCode.prototype._renderMatrix = function _renderMatrix (matrix, baseUnit, quietZoneSize) {\n        var path = new draw.MultiPath({\n            fill: {\n                color: this.options.color\n            },\n            stroke: null\n        });\n\n        for (var row = 0; row < matrix.length; row++) {\n            var y = quietZoneSize + row * baseUnit;\n            var column = 0;\n\n            while (column < matrix.length) {\n                while (matrix[row][column] === 0 && column < matrix.length) {\n                    column++;\n                }\n\n                if (column < matrix.length) {\n                    var x = column;\n                    while (matrix[row][column] === 1) {\n                        column++;\n                    }\n\n                    var x1 = round(quietZoneSize + x * baseUnit);\n                    var y1 = round(y);\n                    var x2 = round(quietZoneSize + column * baseUnit);\n                    var y2 = round(y + baseUnit);\n\n                    path.moveTo(x1, y1)\n                        .lineTo(x1, y2)\n                        .lineTo(x2, y2)\n                        .lineTo(x2, y1)\n                        .close();\n                }\n            }\n        }\n\n        return path;\n    };\n\n    QRCode.prototype._renderBackground = function _renderBackground (size, border) {\n        var box = new Box(0, 0, size, size).unpad(border.width / 2);\n        var background = draw.Path.fromRect(box.toRect(), {\n            fill: {\n                color: this.options.background\n            },\n            stroke: {\n                color: border.color,\n                width: border.width\n            }\n        });\n\n        return background;\n    };\n\n    QRCode.prototype.setOptions = function setOptions (options) {\n        var newOptions = options || {};\n        this.options = extend(this.options, newOptions);\n\n        if (options.value !== undefined) {\n            this._value = String(this.options.value);\n        }\n\n        this.redraw();\n    };\n\n    QRCode.prototype.value = function value (value$1) {\n        if (value$1 === undefined) {\n            return this._value;\n        }\n\n        this._value = String(value$1);\n\n        this.redraw();\n    };\n\n    QRCode.prototype._hasCustomLogo = function _hasCustomLogo () {\n        return Boolean(this.options.overlay.imageUrl);\n    };\n\n    QRCode.prototype._isSwiss = function _isSwiss () {\n        return this.options.overlay.type === \"swiss\";\n    };\n\n    QRCode.prototype._getLogoSize = function _getLogoSize (defautLogoSize) {\n        var width = this.options.overlay.width;\n        var height = this.options.overlay.height;\n\n        if (!width && !height) {\n            width = height = defautLogoSize;\n        } else if (width && !height) {\n            height = width;\n        } else if (!width && height) {\n            width = height;\n        }\n\n        return {\n            width: width,\n            height: height\n        };\n    };\n\n    return QRCode;\n}(Class));\n\nsetDefaultOptions(QRCode, {\n    name: \"QRCode\",\n    renderAs: \"svg\",\n    encoding: \"ISO_8859_1\",\n    value: \"\",\n    errorCorrection: QRCodeDefaults.DEFAULT_ERROR_CORRECTION_LEVEL,\n    background: QRCodeDefaults.DEFAULT_BACKGROUND,\n    color: QRCodeDefaults.DEFAULT_DARK_MODULE_COLOR,\n    size: \"\",\n    padding: 0,\n    border: {\n        color: \"\",\n        width: 0\n    },\n    overlay: {\n        type: \"image\",\n        imageUrl: \"\",\n        width: 0,\n        height: 0\n    }\n});\n\nexport default QRCode;\n"]},"metadata":{},"sourceType":"module"}