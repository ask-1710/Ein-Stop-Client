{"ast":null,"code":"import _slicedToArray from\"/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import SalesDataService from'../../services/sales.js';import dayjs from'dayjs';import{Chart}from\"react-google-charts\";import{Link,Routes,Route}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Graph2=function Graph2(props){var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),sales=_React$useState2[0],setSales=_React$useState2[1];var _useState=useState(null),_useState2=_slicedToArray(_useState,2),dataForAnnualPie=_useState2[0],setDataForAnnualPie=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),queryYear=_useState4[0],setQueryYear=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),yearToDisplay=_useState6[0],setYearToDisplay=_useState6[1];var calculateTotalRevenue=function calculateTotalRevenue(items){// console.log(items) ;\nvar totalRevenue=0.0;items.map(function(item){totalRevenue+=parseInt(item.quantity)*item.price['$numberDecimal'];});return totalRevenue;};var DisplayPieForRevenueChart=function DisplayPieForRevenueChart(){// as pie chart comparing all stores\nSalesDataService.getUnlimited().then(function(response){setSales(response.data.Sales);}).catch(function(e){console.log(e);});var m=[[\"Store\",\"Annual Revenue\"]];sales.map(function(sale){var year=dayjs(sale.saleDate).year();if(year==queryYear){var annualRevenue=calculateTotalRevenue(sale.items);var flag=0;for(var i=1;i<m.length;i++){if(m[i][0]===sale.storeLocation){m[i][1]+=annualRevenue;flag=1;break;}}if(!flag){m.push([sale.storeLocation,annualRevenue]);}}});setDataForAnnualPie(m);setYearToDisplay(queryYear);};var OnChangeSetYear=function OnChangeSetYear(e){setQueryYear(e.target.value);};return/*#__PURE__*/_jsxs(\"div\",{className:\"wrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group mb-3 container\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"input-group-prepend\",children:/*#__PURE__*/_jsx(\"span\",{class:\"input-group-text bg-dark\",id:\"basic-addon3\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-white\",children:\"Year\"})})}),/*#__PURE__*/_jsx(\"input\",{class:\"form-control numerical-input\",type:\"number\",min:\"2013\",max:\"2017\",onChange:OnChangeSetYear}),/*#__PURE__*/_jsx(\"div\",{className:\"input-group-append\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline-dark\",type:\"button\",onClick:DisplayPieForRevenueChart,children:\"Analyze\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:dataForAnnualPie?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{class:\"jumbotron jumbotron-fluid\",children:/*#__PURE__*/_jsx(\"div\",{class:\"container\",children:/*#__PURE__*/_jsxs(\"h1\",{class:\"display-6\",children:[\"2. Comparison of Annual Sales in stores in \",yearToDisplay]})})}),/*#__PURE__*/_jsx(Chart,{width:'800px',height:'600px',chartType:\"PieChart\",loader:/*#__PURE__*/_jsx(\"div\",{children:\"Loading Chart\"}),data:dataForAnnualPie,options:{title:\"% Revenue per outlet in the year \".concat(yearToDisplay),// chartArea: { left: 15, top: 15, right: 0, bottom: 0 },\npieSliceText:\"label\"}})]}):/*#__PURE__*/_jsx(\"div\",{class:\"jumbotron jumbotron-fluid\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{class:\"display-6\",children:\"2. Comparison of Annual Sales in stores\"}),/*#__PURE__*/_jsx(\"p\",{class:\"lead text-italics\",children:\"Select a year\"})]})})})]});};export default Graph2;","map":{"version":3,"sources":["/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/components/graphs/graph2.component.js"],"names":["React","useEffect","useState","SalesDataService","dayjs","Chart","Link","Routes","Route","Graph2","props","sales","setSales","dataForAnnualPie","setDataForAnnualPie","queryYear","setQueryYear","yearToDisplay","setYearToDisplay","calculateTotalRevenue","items","totalRevenue","map","item","parseInt","quantity","price","DisplayPieForRevenueChart","getUnlimited","then","response","data","Sales","catch","e","console","log","m","sale","year","saleDate","annualRevenue","flag","i","length","storeLocation","push","OnChangeSetYear","target","value","title","pieSliceText"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport SalesDataService from '../../services/sales.js' ;\nimport dayjs from 'dayjs' ;\nimport { Chart } from \"react-google-charts\";\nimport {Link,Routes,Route} from 'react-router-dom';\n\nconst Graph2 = props => {\n\n  const [sales, setSales] = React.useState([])\n  const [dataForAnnualPie, setDataForAnnualPie] = useState(null)\n  const [queryYear, setQueryYear] = useState(null)\n  const [yearToDisplay, setYearToDisplay] = useState(null)\n   \n  const calculateTotalRevenue = (items) => {\n    // console.log(items) ;\n    var totalRevenue = 0.0\n    items.map(item => {\n      totalRevenue+=(parseInt(item.quantity)*item.price['$numberDecimal']) \n    })\n    return totalRevenue\n  }\n\n  const DisplayPieForRevenueChart = () => {\n    // as pie chart comparing all stores\n    SalesDataService.getUnlimited()\n    .then(response => {       \n        setSales(response.data.Sales)\n    })\n    .catch(e => {\n        console.log(e);\n    })\n\n    var m = [[\"Store\",\"Annual Revenue\"]]\n    \n    sales.map((sale)=>{\n      const year = dayjs(sale.saleDate).year()\n      if(year == queryYear) {\n        const annualRevenue = calculateTotalRevenue(sale.items) \n        \n        var flag = 0\n        for(var i=1;i<m.length;i++) {\n          if(m[i][0] === sale.storeLocation) {\n            m[i][1]+=annualRevenue\n            flag = 1\n            break\n          }\n        }\n        if(!flag) {\n          m.push([sale.storeLocation, annualRevenue])\n        }\n      }\n    })\n\n    setDataForAnnualPie(m)\n    setYearToDisplay(queryYear)\n  }\n\n  const OnChangeSetYear = e => {\n    setQueryYear(e.target.value)\n  }\n\n    return (\n      <div className='wrapper'>\n        <div className=\"input-group mb-3 container\">\n                      <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text bg-dark\" id=\"basic-addon3\"><div className='text-white'>Year</div></span>\n                      </div>\n\n                      <input class=\"form-control numerical-input\" type=\"number\" min=\"2013\" max=\"2017\" onChange={OnChangeSetYear} >\n                      </input>\n\n                      <div className=\"input-group-append\">\n                          <button\n                          className=\"btn btn-outline-dark\"\n                          type=\"button\"\n                          onClick={DisplayPieForRevenueChart}\n                          >\n                          Analyze\n                          </button>\n                      </div>\n        </div>\n        <div className='container'>\n          {\n            dataForAnnualPie?(<div>\n              <div class=\"jumbotron jumbotron-fluid\">\n              <div class=\"container\">\n                <h1 class=\"display-6\">2. Comparison of Annual Sales in stores in {yearToDisplay}</h1>\n              </div></div>\n              <Chart\n              width={'800px'}\n              height={'600px'}\n              chartType=\"PieChart\"\n              loader={<div>Loading Chart</div>}\n              data={dataForAnnualPie}\n              options={{\n                title: `% Revenue per outlet in the year ${yearToDisplay}`,\n                // chartArea: { left: 15, top: 15, right: 0, bottom: 0 },\n                pieSliceText: \"label\",\n              }}\n              />\n            </div>) :\n            <div class=\"jumbotron jumbotron-fluid\">\n              <div class=\"container\">\n                <h1 class=\"display-6\">2. Comparison of Annual Sales in stores</h1>\n                <p class=\"lead text-italics\">Select a year</p>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n        \n    )\n}\n\nexport default Graph2"]},"metadata":{},"sourceType":"module"}