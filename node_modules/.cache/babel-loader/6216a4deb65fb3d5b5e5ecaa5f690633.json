{"ast":null,"code":"var _jsxFileName = \"/home/aarthi/fitgit/react/einduch-stop/frontend/src/components/analyze.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport SalesDataService from '../services/sales.js';\nimport { Chart } from \"react-google-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnalyzeSales = props => {\n  _s();\n\n  // G1 : revenue from each all stores -> min & max = one graph has all stores\n  // G2 : percentage of different items sold from a given store\n  const [store, setStore] = React.useState(\"\");\n  const [locations, setLocations] = React.useState([]);\n  const [dataForPiePlot, setdataForPiePlot] = React.useState();\n  const [dataForBarChart, setDatForBarChart] = React.useState();\n  const [sales, setSales] = React.useState([]);\n  useEffect(() => {\n    retrieveLocations();\n  }, []);\n\n  const retrieveLocations = () => {\n    SalesDataService.getStoreLocations().then(response => {\n      // console.log(response.data);\n      setLocations(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const OnChangeSetStore = e => {\n    setStore(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-group-prepend\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"input-group-text\",\n            id: \"basic-addon3\",\n            children: \"@\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          class: \"form-control\",\n          onChange: OnChangeSetStore,\n          children: locations.map(method => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: method,\n              children: [\" \", method, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group-append\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary\",\n            type: \"button\",\n            onClick: DisplayPieChart,\n            children: \"Analyze\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      width: '800px',\n      height: '600px',\n      chartType: \"PieChart\",\n      loader: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this),\n      data: dataForPiePlot,\n      options: {\n        title: 'Items and Sales'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AnalyzeSales, \"cOzzIBzNuvIVdNlJl/4GqB4qXEQ=\");\n\n_c = AnalyzeSales;\nexport default AnalyzeSales; // <div>\n// {\n//       {dataToPlot} ? \n//         <div><Chart\n//           width={'800px'}\n//           height={'600px'}\n//           chartType=\"PieChart\"\n//           loader={<div>Loading Chart</div>}\n//           data={dataToPlot}\n//           options={{\n//             title: 'Items and Sales',\n//           }}\n//         /></div>\n//       :\n//       <div>'Nothing to Dsiplay'</div>\n// }\n// </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"AnalyzeSales\");","map":{"version":3,"sources":["/home/aarthi/fitgit/react/einduch-stop/frontend/src/components/analyze.js"],"names":["React","useEffect","SalesDataService","Chart","AnalyzeSales","props","store","setStore","useState","locations","setLocations","dataForPiePlot","setdataForPiePlot","dataForBarChart","setDatForBarChart","sales","setSales","retrieveLocations","getStoreLocations","then","response","data","catch","e","console","log","OnChangeSetStore","target","value","map","method","DisplayPieChart","title"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport SalesDataService from '../services/sales.js' ;\n\nimport { Chart } from \"react-google-charts\";\n\nconst AnalyzeSales = (props) => {\n    // G1 : revenue from each all stores -> min & max = one graph has all stores\n\n    // G2 : percentage of different items sold from a given store\n     \n    const [store, setStore] = React.useState(\"\")\n    const [locations, setLocations] = React.useState([])\n    const [dataForPiePlot, setdataForPiePlot] = React.useState()\n    const [dataForBarChart, setDatForBarChart] = React.useState()\n    const [sales, setSales] = React.useState([])\n    \n  useEffect(() => {\n    retrieveLocations();\n  }, []);\n\n    const retrieveLocations = () => {\n        SalesDataService.getStoreLocations()\n        .then(response => {\n        // console.log(response.data);\n        setLocations(response.data);\n        })\n        .catch(e => {\n        console.log(e);\n        });\n    }\n\n    const OnChangeSetStore = e => {\n        setStore(e.target.value)\n    }\n\n\n      return (\n        <div>\n            <div className=\"row form\">            \n                <div className=\"input-group mb-3\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\" id=\"basic-addon3\">@</span>\n                    </div>\n\n                    <select class=\"form-control\" onChange={OnChangeSetStore}>\n                        {\n                        locations.map(method => {\n                            return (\n                            <option value={method}> {method} </option>\n                            )\n                        })\n                        }\n                    </select>\n\n                    <div className=\"input-group-append\">\n                        <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={DisplayPieChart}\n                        >\n                        Analyze\n                        </button>\n                    </div>\n                </div>\n            </div>\n          \n          <Chart\n            width={'800px'}\n            height={'600px'}\n            chartType=\"PieChart\"\n            loader={<div>Loading Chart</div>}\n            data={dataForPiePlot}\n            options={{\n              title: 'Items and Sales',\n            }}\n          />\n\n          \n\n         </div> \n      \n      );\n\n}\n\nexport default AnalyzeSales;\n\n\n// <div>\n// {\n//       {dataToPlot} ? \n//         <div><Chart\n//           width={'800px'}\n//           height={'600px'}\n//           chartType=\"PieChart\"\n//           loader={<div>Loading Chart</div>}\n//           data={dataToPlot}\n//           options={{\n//             title: 'Items and Sales',\n//           }}\n//         /></div>\n//       :\n//       <div>'Nothing to Dsiplay'</div>\n// }\n// </div>"]},"metadata":{},"sourceType":"module"}