{"ast":null,"code":"import SalesDataService from './sales.js';\n\nclass SalesAnalysisDataService {\n  static async calculateRatioItems(store) {\n    var sales;\n    SalesDataService.find(store, \"location\").then(response => {\n      sales = response.data.Sales;\n    }).catch(e => {\n      console.log(e);\n    });\n    var items = {}; // {'pencil':3, 'eraser':10}\n\n    var totalNumber = 0; // 13\n\n    sales.foreach(element => {\n      element.items.foreach(item => {\n        if (items.some(x => x.hasOwnProperty(item.name))) {\n          items[item.name] += parseInt(item.quantity);\n        } else {\n          items[item.name] += parseInt(item.quantity);\n        }\n\n        totalNumber += parseInt(item.quantity);\n      });\n    });\n    var ratios = [];\n    var objectKeysArray = Object.keys(items);\n    objectKeysArray.map(objKey => {\n      var objValue = items[objKey]; // objVal holds quantity of each item\n\n      var ratio = objValue / totalNumber;\n      var newJsonObject = {\n        'category': objKey,\n        'value': ratio\n      };\n      ratios.push(newJsonObject);\n    });\n    console.log(ratios);\n    return ratios;\n  }\n\n} // var minRange = 999999999\n// var maxRange = 0\n// sales.forEach(element => {\n//     totalAmount = 0.0\n//     element.items.forEach(item => {\n//         totalAmount+=(parseInt(item.price) * parseInt(item.quantity)) ;\n//     })\n//     minRange = (minRange>totalAmount?totalAmount:minRange)\n//     maxRange = (maxRange<totalAmount?totalAmount:maxRange)\n// });\n\n\nexport default new SalesAnalysisDataService();","map":{"version":3,"sources":["/home/aarthi/fitgit/react/einduch-shop/frontend/src/services/analyze.js"],"names":["SalesDataService","SalesAnalysisDataService","calculateRatioItems","store","sales","find","then","response","data","Sales","catch","e","console","log","items","totalNumber","foreach","element","item","some","x","hasOwnProperty","name","parseInt","quantity","ratios","objectKeysArray","Object","keys","map","objKey","objValue","ratio","newJsonObject","push"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,YAA7B;;AAEA,MAAMC,wBAAN,CAA+B;AAEK,eAAnBC,mBAAmB,CAACC,KAAD,EAAQ;AAEpC,QAAIC,KAAJ;AAEAJ,IAAAA,gBAAgB,CAACK,IAAjB,CAAsBF,KAAtB,EAA6B,UAA7B,EACSG,IADT,CACcC,QAAQ,IAAI;AACdH,MAAAA,KAAK,GAAGG,QAAQ,CAACC,IAAT,CAAcC,KAAtB;AACH,KAHT,EAISC,KAJT,CAIeC,CAAC,IAAI;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,KANT;AAQA,QAAIG,KAAK,GAAG,EAAZ,CAZoC,CAapC;;AACA,QAAIC,WAAW,GAAG,CAAlB,CAdoC,CAepC;;AAEAX,IAAAA,KAAK,CAACY,OAAN,CAAcC,OAAO,IAAI;AACrBA,MAAAA,OAAO,CAACH,KAAR,CAAcE,OAAd,CAAsBE,IAAI,IAAI;AAC1B,YAAGJ,KAAK,CAACK,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACC,cAAF,CAAiBH,IAAI,CAACI,IAAtB,CAAhB,CAAH,EAAiD;AAC7CR,UAAAA,KAAK,CAACI,IAAI,CAACI,IAAN,CAAL,IAAkBC,QAAQ,CAACL,IAAI,CAACM,QAAN,CAA1B;AACH,SAFD,MAEO;AACHV,UAAAA,KAAK,CAACI,IAAI,CAACI,IAAN,CAAL,IAAkBC,QAAQ,CAACL,IAAI,CAACM,QAAN,CAA1B;AACH;;AACDT,QAAAA,WAAW,IAAEQ,QAAQ,CAACL,IAAI,CAACM,QAAN,CAArB;AACH,OAPD;AAQH,KATD;AAWA,QAAIC,MAAM,GAAG,EAAb;AAEA,QAAIC,eAAe,GAAGC,MAAM,CAACC,IAAP,CAAYd,KAAZ,CAAtB;AAEAY,IAAAA,eAAe,CAACG,GAAhB,CAAqBC,MAAD,IAAY;AAC5B,UAAIC,QAAQ,GAAGjB,KAAK,CAACgB,MAAD,CAApB,CAD4B,CAE5B;;AACA,UAAIE,KAAK,GAAGD,QAAQ,GAAChB,WAArB;AACA,UAAIkB,aAAa,GAAG;AAChB,oBAAYH,MADI;AAEhB,iBAASE;AAFO,OAApB;AAIAP,MAAAA,MAAM,CAACS,IAAP,CAAYD,aAAZ;AACH,KATD;AAWArB,IAAAA,OAAO,CAACC,GAAR,CAAYY,MAAZ;AAEA,WAAOA,MAAP;AACH;;AAhD0B,C,CAoD/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe,IAAIxB,wBAAJ,EAAf","sourcesContent":["import SalesDataService from './sales.js' ;\n\nclass SalesAnalysisDataService {\n    \n    static async calculateRatioItems(store) {\n\n        var sales\n\n        SalesDataService.find(store, \"location\")\n                .then(response => {\n                    sales = response.data.Sales ;\n                })\n                .catch(e => {\n                    console.log(e);\n                })\n                \n        var items = {}\n        // {'pencil':3, 'eraser':10}\n        var totalNumber = 0\n        // 13\n\n        sales.foreach(element => {\n            element.items.foreach(item => {\n                if(items.some(x => x.hasOwnProperty(item.name))) {\n                    items[item.name]+=parseInt(item.quantity)\n                } else {\n                    items[item.name]+=parseInt(item.quantity)\n                }\n                totalNumber+=parseInt(item.quantity)\n            })\n        });\n\n        var ratios = []\n\n        var objectKeysArray = Object.keys(items)\n\n        objectKeysArray.map((objKey) => {\n            var objValue = items[objKey]\n            // objVal holds quantity of each item\n            var ratio = objValue/totalNumber\n            var newJsonObject = {\n                'category': objKey,\n                'value': ratio\n            }\n            ratios.push(newJsonObject)\n        })\n\n        console.log(ratios)\n        \n        return ratios \n    }\n\n}\n\n// var minRange = 999999999\n// var maxRange = 0\n// sales.forEach(element => {\n//     totalAmount = 0.0\n//     element.items.forEach(item => {\n//         totalAmount+=(parseInt(item.price) * parseInt(item.quantity)) ;\n//     })\n//     minRange = (minRange>totalAmount?totalAmount:minRange)\n//     maxRange = (maxRange<totalAmount?totalAmount:maxRange)\n// });\nexport default new SalesAnalysisDataService();"]},"metadata":{},"sourceType":"module"}