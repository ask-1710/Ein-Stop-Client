{"ast":null,"code":"var _jsxFileName = \"/home/aarthi/fitgit/react/einduch-stop/frontend/src/components/graphs/graph3.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport SalesDataService from '../../services/sales.js';\nimport dayjs from 'dayjs';\nimport { Chart } from \"react-google-charts\";\nimport { Link, Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Graph3 = props => {\n  _s();\n\n  const [sales, setSales] = React.useState([]);\n  const [month, setMonth] = React.useState(\"\");\n  const [store, setStore] = React.useState(\"\");\n  const [locations, setLocations] = React.useState([]);\n\n  const DisplayLineChart = () => {\n    // choose a month -> display line chart from that month      \n    SalesDataService.getUnlimited(store, \"location\").then(response => {\n      setSales(response.data.Sales);\n    }).catch(e => {\n      console.log(e);\n    });\n    var m = [[\"Date\", \"Revenue\"]];\n    var monthlySaleExists = false;\n    sales.map(sale => {\n      const date = dayjs(sale.saleDate).month();\n\n      if (date === month) {\n        monthlySaleExists = true;\n        const d = dayjs(sale.saleDate).date();\n        const monthlyRevenue = calculateTotalRevenue(sale.items);\n        var flag = 0;\n\n        for (var i = 0; i < m.length; i++) {\n          if (m[i][0] === d) {\n            m[i][1] += monthlyRevenue;\n            flag = 1;\n            break;\n          }\n        }\n\n        if (!flag) {\n          m.push([d, monthlyRevenue]);\n        }\n      }\n    });\n    if (!monthlySaleExists) setdataForLineChart(null);else {\n      m.sort((a, b) => a[0] - b[0]);\n      setdataForLineChart(m);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper App container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"input-group-prepend\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"input-group-text\",\n          id: \"basic-addon3\",\n          children: \"Store Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        class: \"form-control\",\n        onChange: OnChangeSetStore,\n        children: locations.map(method => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: method,\n            children: [\" \", method, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group-append\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-dark\",\n          label: \"Analyze an outlet\",\n          type: \"button\",\n          onClick: DisplayPieChart,\n          children: \"Analyze\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"input-group-prepend\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"input-group-text\",\n          id: \"basic-addon3\",\n          children: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        class: \"form-control\",\n        onChange: OnChangeSetMonth,\n        children: months.map(method => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: method,\n            children: [\" \", method, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group-append\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-dark\",\n          type: \"button\",\n          onClick: DisplayLineChart,\n          children: \"Analyze\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.dataForLineChart != null ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"jumbotron jumbotron-fluid\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              class: \"display-6\",\n              children: \"3. Monthly Revenue Chart for A store\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          chartType: \"LineChart\",\n          width: \"100%\",\n          height: \"400px\",\n          data: dataForLineChart,\n          options: {\n            title: `Revenue in ${store} in the month of ${months[month]}`,\n            curveType: \"function\",\n            legend: {\n              position: \"bottom\"\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"jumbotron jumbotron-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            class: \"display-6\",\n            children: \"3. Monthly Revenue Chart for A store\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"lead text-italics\",\n            children: \"Select a Store and a Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Graph3, \"Sbveieu5SLcJEcejQHJC0O1lGdI=\");\n\n_c = Graph3;\nexport default Graph3;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph3\");","map":{"version":3,"sources":["/home/aarthi/fitgit/react/einduch-stop/frontend/src/components/graphs/graph3.component.js"],"names":["React","useEffect","SalesDataService","dayjs","Chart","Link","Routes","Route","Graph3","props","sales","setSales","useState","month","setMonth","store","setStore","locations","setLocations","DisplayLineChart","getUnlimited","then","response","data","Sales","catch","e","console","log","m","monthlySaleExists","map","sale","date","saleDate","d","monthlyRevenue","calculateTotalRevenue","items","flag","i","length","push","setdataForLineChart","sort","a","b","OnChangeSetStore","method","DisplayPieChart","OnChangeSetMonth","months","dataForLineChart","title","curveType","legend","position"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport SalesDataService from '../../services/sales.js' ;\nimport dayjs from 'dayjs' ;\nimport { Chart } from \"react-google-charts\";\nimport {Link,Routes,Route} from 'react-router-dom';\n\nconst Graph3 = props => {\n\n  const [sales, setSales] = React.useState([])\n  const [month, setMonth] = React.useState(\"\")\n  const [store, setStore] = React.useState(\"\")\n  const [locations, setLocations] = React.useState([])\n\n\n  const DisplayLineChart = () => {      \n    // choose a month -> display line chart from that month      \n    SalesDataService.getUnlimited(store, \"location\")\n    .then(response => {        \n        setSales(response.data.Sales)\n    })\n    .catch(e => {\n        console.log(e);\n    })\n\n    var m = [[\"Date\",\"Revenue\"]]\n    var monthlySaleExists = false \n    sales.map((sale)=>{\n      const date = dayjs(sale.saleDate).month()\n      if(date === month) {\n        monthlySaleExists = true ;\n        const d = dayjs(sale.saleDate).date()\n        const monthlyRevenue = calculateTotalRevenue(sale.items) \n        \n        var flag = 0\n        for(var i=0;i<m.length;i++) {\n          if(m[i][0] === d) {\n            m[i][1]+=monthlyRevenue\n            flag = 1\n            break\n          }\n        }\n        if(!flag) {\n          m.push([d,monthlyRevenue])\n        }\n      }\n    })\n    if(!monthlySaleExists)\n      setdataForLineChart(null)\n    else {\n      m.sort((a,b)=>a[0]-b[0])\n      setdataForLineChart(m)\n    }\n\n  }\n\n    return (\n        <div className='wrapper App container'>\n\n            <div className=\"input-group mb-3\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\" id=\"basic-addon3\">Store Location</span>\n                    </div>\n                    <select class=\"form-control\" onChange={OnChangeSetStore}>\n                    {\n                        locations.map(method => {\n                            return (\n                            <option value={method}> {method} </option>\n                            )\n                        })\n                    }\n                    </select>\n                <div className=\"input-group-append\">\n                    <button\n                    className=\"btn btn-outline-dark\"\n                    label=\"Analyze an outlet\"\n                    type=\"button\"\n                    onClick={DisplayPieChart}\n                    > \n                    Analyze\n                    </button>\n                </div>\n            </div>\n            <div className=\"input-group mb-3\">\n                <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\" id=\"basic-addon3\">Month</span>\n                </div>\n\n                <select class=\"form-control\" onChange={OnChangeSetMonth}>\n                    {\n                    months.map(method => {\n                        return (\n                        <option value={method}> {method} </option>\n                        )\n                    })\n                    }\n                </select>\n\n                <div className=\"input-group-append\">\n                    <button\n                    className=\"btn btn-outline-dark\"\n                    type=\"button\"\n                    onClick={DisplayLineChart}\n                    >\n                    Analyze\n                    </button>\n                </div>\n            </div>\n\n            <div>\n            {\n            props.dataForLineChart!=null ?(\n            <div>\n            <div class=\"jumbotron jumbotron-fluid\">\n            <div class=\"container\">\n                <h1 class=\"display-6\">3. Monthly Revenue Chart for A store</h1> </div></div>  \n                <Chart\n                chartType=\"LineChart\"\n                width=\"100%\"\n                height=\"400px\"\n                data={dataForLineChart}\n                options={{\n                    title: `Revenue in ${store} in the month of ${months[month]}`,\n                    curveType: \"function\",\n                    legend: { position: \"bottom\" },\n                }}\n                /> \n            </div>\n            ):\n            <div class=\"jumbotron jumbotron-fluid\">\n            <div class=\"container\">\n                <h1 class=\"display-6\">3. Monthly Revenue Chart for A store</h1>\n                <p class=\"lead text-italics\">Select a Store and a Month</p>\n            </div>\n            </div>\n            }\n            </div>\n        </div>\n        \n    )\n}\n\nexport default Graph3"]},"metadata":{},"sourceType":"module"}