{"ast":null,"code":"var _jsxFileName = \"/home/aarthi/fitgit/react/einduch-stop/frontend/src/components/graphs/graph1.component.js\";\nimport React, { useEffect } from 'react';\nimport SalesDataService from '../../services/sales.js';\nimport dayjs from 'dayjs';\nimport { Chart } from \"react-google-charts\";\nimport { Link, Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Graph1 = props => {\n  const calculateQuantityItems = () => {\n    var items = {}; // {'pencil':3, 'eraser':10}\n    // 13\n\n    sales.map(element => {\n      element.items.map(item => {\n        items[item.name] = items[item.name] ? items[item.name] + parseInt(item.quantity) : parseInt(item.quantity);\n      });\n    });\n    var ratios = [['Category', 'Quantity sold']];\n    var objectKeysArray = Object.keys(items);\n    objectKeysArray.forEach(objKey => {\n      var objValue = items[objKey]; // objVal holds quantity of each item\n\n      var ration = [objKey, objValue];\n      ratios.push(ration);\n    });\n    return ratios;\n  };\n\n  const DisplayPieChart = () => {\n    SalesDataService.find(store, \"location\").then(response => {\n      setSales(response.data.Sales);\n    }).catch(e => {\n      console.log(e);\n    });\n    const series = calculateQuantityItems();\n    setdataForPiePlot(series);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper App container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-outline form-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        class: \"form-control selectinput\",\n        type: \"select\",\n        onChange: onChangeQueryLocation,\n        children: locations.map(method => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: method,\n            children: [\" \", method, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"form-label\",\n        for: \"formWhite2\",\n        children: \"Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group-append\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-dark\",\n          onClick: findByLocation,\n          children: \"Analyse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.dataForPiePlot ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"jumbotron jumbotron-fluid\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              class: \"display-6\",\n              children: \"1. Sales % Of Items in A store\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          width: '800px',\n          height: '600px',\n          chartType: \"PieChart\",\n          loader: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 23\n          }, this),\n          data: dataForPiePlot,\n          options: {\n            title: `Percentage of items Sold in ${store}`,\n            pieSliceText: \"label\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"jumbotron jumbotron-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            class: \"display-6\",\n            children: \"1. Sales % Of Items in A store\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"lead text-italics\",\n            children: \"Select a store\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Graph1;\nexport default Graph1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph1\");","map":{"version":3,"sources":["/home/aarthi/fitgit/react/einduch-stop/frontend/src/components/graphs/graph1.component.js"],"names":["React","useEffect","SalesDataService","dayjs","Chart","Link","Routes","Route","Graph1","props","calculateQuantityItems","items","sales","map","element","item","name","parseInt","quantity","ratios","objectKeysArray","Object","keys","forEach","objKey","objValue","ration","push","DisplayPieChart","find","store","then","response","setSales","data","Sales","catch","e","console","log","series","setdataForPiePlot","onChangeQueryLocation","locations","method","findByLocation","dataForPiePlot","title","pieSliceText"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport SalesDataService from '../../services/sales.js' ;\nimport dayjs from 'dayjs' ;\nimport { Chart } from \"react-google-charts\";\nimport {Link,Routes,Route} from 'react-router-dom';\n\nconst Graph1 = props => {\n\n    const calculateQuantityItems = () => {\n               \n        var items = {}\n        // {'pencil':3, 'eraser':10}\n        // 13\n        sales.map(element => {\n\n            element.items.map(item => {\n              \n              items[item.name]=(items[item.name] ? items[item.name]+parseInt(item.quantity) : parseInt(item.quantity))\n\n            })\n        });\n        var ratios = [['Category','Quantity sold']]\n        var objectKeysArray = Object.keys(items)\n        objectKeysArray.forEach((objKey) => {\n            var objValue = items[objKey]\n            // objVal holds quantity of each item\n            var ration = [objKey, objValue]\n            ratios.push(ration)\n        })\n        \n        return ratios\n    }\n\n    const DisplayPieChart = () => {\n        SalesDataService.find(store, \"location\")\n                .then(response => {       \n                    setSales(response.data.Sales)\n                })\n                .catch(e => {\n                    console.log(e);\n                })\n        \n        const series = calculateQuantityItems()\n\n        setdataForPiePlot(series)\n    }\n\n\n    return (\n        <div className='wrapper App container'>\n        <div className=\"form-outline form-white\">\n        <select class=\"form-control selectinput\" type='select'  onChange={onChangeQueryLocation}>\n            {\n              locations.map(method => {\n                return (\n                  <option value={method}> {method} </option>\n                )\n              })\n            }\n          </select>\n          <label class=\"form-label\" for=\"formWhite2\">Location</label>\n          <div className=\"input-group-append\">\n              <button className=\"btn btn-outline-dark\" onClick={findByLocation}>Analyse</button>\n          </div>\n      </div>\n      <div>\n      {\n          props.dataForPiePlot?(\n        <div>\n            <div class=\"jumbotron jumbotron-fluid\">\n            <div class=\"container\">\n              <h1 class=\"display-6\">1. Sales % Of Items in A store</h1>\n            </div>\n          </div>\n          <Chart\n              width={'800px'}\n              height={'600px'}\n              chartType=\"PieChart\"\n              loader={<div>Loading Chart</div>}\n              data={dataForPiePlot}\n              options={{\n                title: `Percentage of items Sold in ${store}`,\n                pieSliceText: \"label\",\n              }}\n            />\n          </div>) :\n          <div class=\"jumbotron jumbotron-fluid\">\n            <div class=\"container\">\n              <h1 class=\"display-6\">1. Sales % Of Items in A store</h1>\n              <p class=\"lead text-italics\">Select a store</p>\n            </div>\n          </div>\n      }\n      </div>\n      </div>\n    )\n}\n\nexport default Graph1"]},"metadata":{},"sourceType":"module"}