{"ast":null,"code":"var _jsxFileName = \"/home/aarthi/fitgit/react/einduch-stop/frontend/src/components/graphs/graph3.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport SalesDataService from '../../services/sales.js';\nimport dayjs from 'dayjs';\nimport { Chart } from \"react-google-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Graph3 = props => {\n  _s();\n\n  const [sales, setSales] = React.useState([]);\n  const [month, setMonth] = React.useState(\"\");\n  const [store, setStore] = React.useState(\"\");\n  const [dataForLineChart, setdataForLineChart] = React.useState(null);\n  const [locations, setLocations] = React.useState([]);\n  const months = ['Jan', 'Feb', 'March', 'April', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n  const [noData, setNoData] = useState(null);\n  const [monthToDisplay, setMonthToDisplay] = useState();\n  useEffect(() => {\n    retrieveLocations();\n  }, []);\n\n  const calculateTotalRevenue = items => {\n    // console.log(items) ;\n    var totalRevenue = 0.0;\n    items.map(item => {\n      totalRevenue += parseInt(item.quantity) * item.price['$numberDecimal'];\n    });\n    return totalRevenue;\n  };\n\n  const DisplayLineChart = () => {\n    // choose a month -> display line chart from that month      \n    SalesDataService.getUnlimited(store, \"location\").then(response => {\n      setSales(response.data.Sales);\n    }).catch(e => {\n      console.log(e);\n    });\n    var m = [[\"Date\", \"Revenue\"]];\n    var monthlySaleExists = false;\n    sales.map(sale => {\n      const date = dayjs(sale.saleDate).month();\n\n      if (date === month) {\n        monthlySaleExists = true;\n        const d = dayjs(sale.saleDate).date();\n        const monthlyRevenue = calculateTotalRevenue(sale.items);\n        var flag = 0;\n\n        for (var i = 0; i < m.length; i++) {\n          if (m[i][0] === d) {\n            m[i][1] += monthlyRevenue;\n            flag = 1;\n            break;\n          }\n        }\n\n        if (!flag) {\n          m.push([d, monthlyRevenue]);\n        }\n      }\n    });\n    if (!monthlySaleExists) setdataForLineChart(null);else {\n      m.sort((a, b) => a[0] - b[0]);\n      setdataForLineChart(m);\n    }\n  };\n\n  const retrieveLocations = () => {\n    SalesDataService.getStoreLocations().then(response => {\n      // console.log(response.data);\n      setLocations(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }; // triggered setters\n\n\n  const OnChangeSetStore = e => {\n    setStore(e.target.value);\n  };\n\n  const OnChangeSetMonth = e => {\n    console.log(e.target.value);\n\n    for (var i = 0; i < 12; i++) {\n      if (months[i] === e.target.value) {\n        setMonth(i);\n        return;\n      }\n    }\n\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group mb-3 container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"input-group-prepend\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"input-group-text bg-dark\",\n          id: \"basic-addon1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-white\",\n            children: \"Store Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 82\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        class: \"form-control selectinput\",\n        type: \"select\",\n        onChange: OnChangeSetStore,\n        children: locations.map(method => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: method,\n            children: [\" \", method, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group mb-3 container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"input-group-prepend\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"input-group-text bg-dark\",\n          id: \"basic-addon4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-white\",\n            children: \"Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 78\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        class: \"form-control selectinput\",\n        type: \"select\",\n        onChange: OnChangeSetMonth,\n        children: months.map(method => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: method,\n            children: [\" \", method, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group-append\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-dark\",\n          type: \"button\",\n          onClick: DisplayLineChart,\n          children: \"Analyze\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row py-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: dataForLineChart != null ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"jumbotron jumbotron-fluid\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              class: \"display-6\",\n              children: \"3. Monthly Revenue Chart for A store\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          chartType: \"LineChart\",\n          width: \"100%\",\n          height: \"400px\",\n          data: dataForLineChart,\n          options: {\n            title: `Revenue in ${store} in the month of ${months[month]}`,\n            legend: {\n              position: \"bottom\"\n            },\n            hAxis: {\n              format: '0',\n              viewWindow: {\n                min: 0,\n                max: 31\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }, this) : noData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"jumbotron jumbotron-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            class: \"display-6\",\n            children: \"3. Monthly Revenue Chart for A store\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"lead text-italics\",\n            children: \"Select a Store and a Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"jumbotron jumbotron-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            class: \"display-6\",\n            children: \"3. Monthly Revenue Chart for A store\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"lead text-italics\",\n            children: \"No data found :(\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Graph3, \"pgEyrdHKSJYkebOH9mUE19JEK9U=\");\n\n_c = Graph3;\nexport default Graph3;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph3\");","map":{"version":3,"sources":["/home/aarthi/fitgit/react/einduch-stop/frontend/src/components/graphs/graph3.component.js"],"names":["React","useEffect","useState","SalesDataService","dayjs","Chart","Graph3","props","sales","setSales","month","setMonth","store","setStore","dataForLineChart","setdataForLineChart","locations","setLocations","months","noData","setNoData","monthToDisplay","setMonthToDisplay","retrieveLocations","calculateTotalRevenue","items","totalRevenue","map","item","parseInt","quantity","price","DisplayLineChart","getUnlimited","then","response","data","Sales","catch","e","console","log","m","monthlySaleExists","sale","date","saleDate","d","monthlyRevenue","flag","i","length","push","sort","a","b","getStoreLocations","OnChangeSetStore","target","value","OnChangeSetMonth","method","title","legend","position","hAxis","format","viewWindow","min","max"],"mappings":"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","sourcesContent":["import React, { useEffect , useState} from 'react';\nimport SalesDataService from '../../services/sales.js' ;\nimport dayjs from 'dayjs' ;\nimport { Chart } from \"react-google-charts\";\n\n\nconst Graph3 = props => {\n\n  const [sales, setSales] = React.useState([])\n  const [month, setMonth] = React.useState(\"\")\n  const [store, setStore] = React.useState(\"\")\n  const [dataForLineChart, setdataForLineChart] = React.useState(null)\n  const [locations, setLocations] = React.useState([])\n  const months = ['Jan', 'Feb','March','April','May','June','July','Aug','Sept','Oct','Nov','Dec'] \n  const [noData, setNoData] = useState(null)\n  const [monthToDisplay, setMonthToDisplay]=useState()\n\n  useEffect(() => {\n    retrieveLocations();\n  }, []);\n  \n  const calculateTotalRevenue = (items) => {\n    // console.log(items) ;\n    var totalRevenue = 0.0\n    items.map(item => {\n      totalRevenue+=(parseInt(item.quantity)*item.price['$numberDecimal']) \n    })\n    return totalRevenue\n  }\n\n  const DisplayLineChart = () => {      \n    // choose a month -> display line chart from that month      \n    SalesDataService.getUnlimited(store, \"location\")\n    .then(response => {        \n        setSales(response.data.Sales)\n    })\n    .catch(e => {\n        console.log(e);\n    })\n\n    var m = [[\"Date\",\"Revenue\"]]\n    var monthlySaleExists = false \n    sales.map((sale)=>{\n      const date = dayjs(sale.saleDate).month()\n      if(date === month) {\n        monthlySaleExists = true ;\n        const d = dayjs(sale.saleDate).date()\n        const monthlyRevenue = calculateTotalRevenue(sale.items) \n        \n        var flag = 0\n        for(var i=0;i<m.length;i++) {\n          if(m[i][0] === d) {\n            m[i][1]+=monthlyRevenue\n            flag = 1\n            break\n          }\n        }\n        if(!flag) {\n          m.push([d,monthlyRevenue])\n        }\n      }\n    })\n    if(!monthlySaleExists)\n      setdataForLineChart(null)\n    else {\n      m.sort((a,b)=>a[0]-b[0])\n      setdataForLineChart(m)\n    }\n\n  }\n\n  const retrieveLocations = () => {\n      SalesDataService.getStoreLocations()\n      .then(response => {\n      // console.log(response.data);\n      setLocations(response.data);\n      })\n      .catch(e => {\n      console.log(e);\n      });\n  }\n  // triggered setters\n  const OnChangeSetStore = e => {\n      setStore(e.target.value)\n  }\n\n  const OnChangeSetMonth = e => {\n    console.log(e.target.value)\n    for(var i=0;i<12;i++){\n      if(months[i] === e.target.value) {\n        setMonth(i) \n        return  \n      }\n    }\n    return \n  }\n\n    return (\n        <div className='wrapper'>\n            <div className=\"input-group mb-3 container\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text bg-dark\" id=\"basic-addon1\"><div className='text-white'>Store Location</div></span>\n                    </div>\n                    <select class=\"form-control selectinput\" type='select' onChange={OnChangeSetStore}>\n                    {\n                        locations.map(method => {\n                            return (\n                            <option value={method}> {method} </option>\n                            )\n                        })\n                    }\n                    </select>\n            </div>\n            <div className=\"input-group mb-3 container\">\n                <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text bg-dark\" id=\"basic-addon4\"><div className='text-white'>Month</div></span>\n                </div>\n\n                <select class=\"form-control selectinput\" type='select' onChange={OnChangeSetMonth}>\n                    {\n                    months.map(method => {\n                        return (\n                        <option value={method}> {method} </option>\n                        )\n                    })\n                    }\n                </select>\n\n                <div className=\"input-group-append\">\n                    <button\n                    className=\"btn btn-outline-dark\"\n                    type=\"button\"\n                    onClick={DisplayLineChart}\n                    >\n                    Analyze\n                    </button>\n                </div>\n            </div>\n            <div className='row py-4'></div>\n            <div className='container'>\n            {\n            dataForLineChart!=null ?(\n              <div>\n              <div class=\"jumbotron jumbotron-fluid\">\n              <div class=\"container\">\n                  <h1 class=\"display-6\">3. Monthly Revenue Chart for A store</h1> </div></div>  \n                  <Chart\n                  chartType=\"LineChart\"\n                  width=\"100%\"\n                  height=\"400px\"\n                  data={dataForLineChart}\n                  options={{\n                      title: `Revenue in ${store} in the month of ${months[month]}`,\n                      legend: { position: \"bottom\" },\n                      hAxis: {format: '0',\n                              viewWindow: {\n                                min: 0,\n                                max: 31\n                              }\n                            }\n                  }}\n                  /> \n              </div>\n            ):\n             noData ? (\n              <div class=\"jumbotron jumbotron-fluid\">\n              <div class=\"container\">\n                  <h1 class=\"display-6\">3. Monthly Revenue Chart for A store</h1>\n                  <p class=\"lead text-italics\">Select a Store and a Month</p>\n              </div>\n              </div> \n              ) : (\n                <div class=\"jumbotron jumbotron-fluid\">\n                <div class=\"container\">\n                    <h1 class=\"display-6\">3. Monthly Revenue Chart for A store</h1>\n                    <p class=\"lead text-italics\">No data found :(</p>\n                </div>\n                </div> \n              )\n            }\n            </div>\n        </div>\n    )\n}\n\nexport default Graph3"]},"metadata":{},"sourceType":"module"}