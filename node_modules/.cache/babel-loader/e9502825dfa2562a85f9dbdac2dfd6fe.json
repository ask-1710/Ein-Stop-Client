{"ast":null,"code":"import _slicedToArray from\"/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import SalesDataService from'../../services/sales.js';import dayjs from'dayjs';import{Chart}from\"react-google-charts\";import{Link,Routes,Route}from'react-router-dom';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Graph1=function Graph1(props){var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),sales=_React$useState2[0],setSales=_React$useState2[1];var _useState=useState(null),_useState2=_slicedToArray(_useState,2),dataForPiePlot=_useState2[0],setdataForPiePlot=_useState2[1];var _useState3=useState('Austin'),_useState4=_slicedToArray(_useState3,2),store=_useState4[0],setStore=_useState4[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),locations=_React$useState4[0],setLocations=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),noData=_React$useState6[0],setNoData=_React$useState6[1];var _useState5=useState('Austin'),_useState6=_slicedToArray(_useState5,2),storeToDisplay=_useState6[0],setStoreToDisplay=_useState6[1];useEffect(function(){retrieveLocations();},[]);var retrieveLocations=function retrieveLocations(){SalesDataService.getStoreLocations().then(function(response){// console.log(response.data);\nsetLocations(response.data);}).catch(function(e){console.log(e);});};var calculateQuantityItems=function calculateQuantityItems(){var items={};sales.map(function(element){element.items.map(function(item){items[item.name]=items[item.name]?items[item.name]+parseInt(item.quantity):parseInt(item.quantity);});});var ratios=[['Category','Quantity sold']];var objectKeysArray=Object.keys(items);objectKeysArray.forEach(function(objKey){var objValue=items[objKey];// objVal holds quantity of each item\nvar ration=[objKey,objValue];ratios.push(ration);});return ratios;};var DisplayPieChart=function DisplayPieChart(){SalesDataService.find(store,\"location\").then(function(response){setSales(response.data.Sales);setNoData(false);}).catch(function(e){setNoData(true);console.log(e);});var series=calculateQuantityItems();setdataForPiePlot(series);setStoreToDisplay(store);};var OnChangeSetStore=function OnChangeSetStore(e){setStore(e.target.value);};return/*#__PURE__*/_jsxs(\"div\",{className:\"wrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group container\",children:[/*#__PURE__*/_jsx(\"select\",{class:\"form-control selectinput centre\",type:\"select\",onChange:OnChangeSetStore,children:locations.map(function(method){return/*#__PURE__*/_jsxs(\"option\",{value:method,children:[\" \",method,\" \"]});})}),/*#__PURE__*/_jsx(\"button\",{className:\"input-group-addon btn btn-outline-dark\",onClick:DisplayPieChart,children:\"Analyse\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"row py-4\"}),/*#__PURE__*/_jsx(\"div\",{children:dataForPiePlot?/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"jumbotron jumbotron-fluid\",children:/*#__PURE__*/_jsx(\"div\",{class:\"container\",children:/*#__PURE__*/_jsxs(\"h1\",{class:\"display-6\",children:[\"Sales % Of Items in \",storeToDisplay]})})}),/*#__PURE__*/_jsx(Chart,{className:\"centre-chart\",width:'800px',height:'600px',chartType:\"PieChart\",loader:/*#__PURE__*/_jsx(\"div\",{children:\"Loading Chart\"}),data:dataForPiePlot,options:{title:\"Percentage of items Sold in \".concat(storeToDisplay),pieSliceText:\"label\"}})]}):noData?/*#__PURE__*/_jsx(\"div\",{children:\"No Data yet\"}):/*#__PURE__*/_jsx(\"div\",{class:\"jumbotron jumbotron-fluid centre-text\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{class:\"display-6\",children:\"Sales % Of Items in A store\"}),/*#__PURE__*/_jsx(\"p\",{class:\"lead text-italics\",children:\"Select a store\"})]})})})]});};export default Graph1;","map":{"version":3,"sources":["/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/components/graphs/graph1.component.js"],"names":["React","useEffect","useState","SalesDataService","dayjs","Chart","Link","Routes","Route","Graph1","props","sales","setSales","dataForPiePlot","setdataForPiePlot","store","setStore","locations","setLocations","noData","setNoData","storeToDisplay","setStoreToDisplay","retrieveLocations","getStoreLocations","then","response","data","catch","e","console","log","calculateQuantityItems","items","map","element","item","name","parseInt","quantity","ratios","objectKeysArray","Object","keys","forEach","objKey","objValue","ration","push","DisplayPieChart","find","Sales","series","OnChangeSetStore","target","value","method","title","pieSliceText"],"mappings":"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","sourcesContent":["import React, { useEffect , useState } from 'react';\nimport SalesDataService from '../../services/sales.js' ;\nimport dayjs from 'dayjs' ;\nimport { Chart } from \"react-google-charts\";\nimport {Link,Routes,Route} from 'react-router-dom';\n\nconst Graph1 = props => {\n\n  const [sales, setSales] = React.useState([])\n  const [dataForPiePlot, setdataForPiePlot] = useState(null)\n  const [store, setStore] = useState('Austin')\n  const [locations, setLocations] = React.useState([])\n  const [noData, setNoData] = React.useState(false)\n  const [storeToDisplay, setStoreToDisplay] = useState('Austin')\n\n    useEffect(() => {\n      retrieveLocations();\n    }, []);\n    \n    const retrieveLocations = () => {\n        SalesDataService.getStoreLocations()\n        .then(response => {\n        // console.log(response.data);\n        setLocations(response.data);\n        })\n        .catch(e => {\n        console.log(e);\n        });\n    }\n\n    const calculateQuantityItems = () => {\n               \n        var items = {}\n        \n        sales.map(element => {\n\n            element.items.map(item => {\n              \n              items[item.name]=(items[item.name] ? items[item.name]+parseInt(item.quantity) : parseInt(item.quantity))\n\n            })\n        });\n\n        var ratios = [['Category','Quantity sold']]\n        var objectKeysArray = Object.keys(items)\n        objectKeysArray.forEach((objKey) => {\n            var objValue = items[objKey]\n            // objVal holds quantity of each item\n            var ration = [objKey, objValue]\n            ratios.push(ration)\n        })\n        \n        return ratios\n    }\n\n    const DisplayPieChart = () => {\n        SalesDataService.find(store, \"location\")\n        .then(response => {       \n            setSales(response.data.Sales) \n            setNoData(false);     \n        })\n        .catch(e => {\n            setNoData(true);\n            console.log(e);\n        })\n        const series = calculateQuantityItems()\n        setdataForPiePlot(series)\n        setStoreToDisplay(store)             \n    }\n\n    const OnChangeSetStore = e => {\n        setStore(e.target.value)\n    }\n\n    return (\n        <div className='wrapper'>\n            <div className=\"input-group container\">\n            {/* <label class=\"input-group-prepend black-border centre col-1\" for=\"formWhite2\">Location</label> */}\n            <select class=\"form-control selectinput centre\" type='select'  onChange={OnChangeSetStore}>\n                {\n                  locations.map(method => {\n                    return (\n                      <option value={method}> {method} </option>\n                    )\n                  })\n                }\n              </select>\n              <button className=\"input-group-addon btn btn-outline-dark\" onClick={DisplayPieChart}>Analyse</button>          \n          </div>\n        <div className='row py-4'></div>\n        <div>\n        {\n          dataForPiePlot?(\n          <div className='container'>\n              <div class=\"jumbotron jumbotron-fluid\">\n              <div class=\"container\">\n                <h1 class=\"display-6\">Sales % Of Items in {storeToDisplay}</h1>\n              </div>\n            </div>\n            <Chart\n              className='centre-chart'\n                width={'800px'}\n                height={'600px'}\n                chartType=\"PieChart\"\n                loader={<div>Loading Chart</div>}\n                data={dataForPiePlot}\n                options={{\n                  title: `Percentage of items Sold in ${storeToDisplay}`,\n                  pieSliceText: \"label\"\n                }}\n              />\n            </div> ) : (\n            noData? <div>No Data yet</div> :\n            <div class=\"jumbotron jumbotron-fluid centre-text\">\n              <div class=\"container\">\n                <h1 class=\"display-6\">Sales % Of Items in A store</h1>\n                <p class=\"lead text-italics\">Select a store</p>\n              </div>\n            </div>\n            )\n        }\n        </div>\n      </div>\n    )\n}\n\nexport default Graph1"]},"metadata":{},"sourceType":"module"}