{"ast":null,"code":"var _jsxFileName = \"/home/aarthi/fitgit/react/einduch-stop/frontend/src/components/graphs/graph2.component.js\";\nimport React, { useEffect } from 'react';\nimport SalesDataService from '../../services/sales.js';\nimport dayjs from 'dayjs';\nimport { Chart } from \"react-google-charts\";\nimport { Link, Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Graph2 = props => {\n  const calculateTotalRevenue = items => {\n    // console.log(items) ;\n    var totalRevenue = 0.0;\n    items.map(item => {\n      totalRevenue += parseInt(item.quantity) * item.price['$numberDecimal'];\n    });\n    return totalRevenue;\n  };\n\n  const DisplayPieForRevenueChart = () => {\n    // as pie chart comparing all stores\n    SalesDataService.getUnlimited().then(response => {\n      setSales(response.data.Sales);\n    }).catch(e => {\n      console.log(e);\n    });\n    var m = [[\"Store\", \"Annual Revenue\"]];\n    sales.map(sale => {\n      const year = dayjs(sale.saleDate).year();\n\n      if (year == queryYear) {\n        const annualRevenue = calculateTotalRevenue(sale.items);\n        var flag = 0;\n\n        for (var i = 1; i < m.length; i++) {\n          if (m[i][0] === sale.storeLocation) {\n            m[i][1] += annualRevenue;\n            flag = 1;\n            break;\n          }\n        }\n\n        if (!flag) {\n          m.push([sale.storeLocation, annualRevenue]);\n        }\n      }\n    });\n    setDataForAnnualPie(m);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper App container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"input-group-prepend\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"input-group-text\",\n          id: \"basic-addon3\",\n          children: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"form-control\",\n        type: \"number\",\n        min: \"2013\",\n        max: \"2017\",\n        onChange: OnChangeSetYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group-append\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-dark\",\n          type: \"button\",\n          onClick: DisplayPieForRevenueChart,\n          children: \"Analyze\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.dataForAnnualPie ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"jumbotron jumbotron-fluid\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              class: \"display-6\",\n              children: \"2. Comparison of Annual Sales in stores\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          width: '800px',\n          height: '600px',\n          chartType: \"PieChart\",\n          loader: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 23\n          }, this),\n          data: dataForAnnualPie,\n          options: {\n            title: `% Revenue per outlet in the year ${queryYear}`,\n            // chartArea: { left: 15, top: 15, right: 0, bottom: 0 },\n            pieSliceText: \"label\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 37\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"jumbotron jumbotron-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            class: \"display-6\",\n            children: \"2. Comparison of Annual Sales in stores\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"lead text-italics\",\n            children: \"Select a year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Graph2;\nexport default Graph2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph2\");","map":{"version":3,"sources":["/home/aarthi/fitgit/react/einduch-stop/frontend/src/components/graphs/graph2.component.js"],"names":["React","useEffect","SalesDataService","dayjs","Chart","Link","Routes","Route","Graph2","props","calculateTotalRevenue","items","totalRevenue","map","item","parseInt","quantity","price","DisplayPieForRevenueChart","getUnlimited","then","response","setSales","data","Sales","catch","e","console","log","m","sales","sale","year","saleDate","queryYear","annualRevenue","flag","i","length","storeLocation","push","setDataForAnnualPie","OnChangeSetYear","dataForAnnualPie","title","pieSliceText"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport SalesDataService from '../../services/sales.js' ;\nimport dayjs from 'dayjs' ;\nimport { Chart } from \"react-google-charts\";\nimport {Link,Routes,Route} from 'react-router-dom';\n\nconst Graph2 = props => {\n\n\n   \n  const calculateTotalRevenue = (items) => {\n    // console.log(items) ;\n    var totalRevenue = 0.0\n    items.map(item => {\n      totalRevenue+=(parseInt(item.quantity)*item.price['$numberDecimal']) \n    })\n    return totalRevenue\n  }\n  \n\n  const DisplayPieForRevenueChart = () => {\n    // as pie chart comparing all stores\n    SalesDataService.getUnlimited()\n    .then(response => {       \n        setSales(response.data.Sales)\n    })\n    .catch(e => {\n        console.log(e);\n    })\n\n    var m = [[\"Store\",\"Annual Revenue\"]]\n    \n    sales.map((sale)=>{\n      const year = dayjs(sale.saleDate).year()\n      if(year == queryYear) {\n        const annualRevenue = calculateTotalRevenue(sale.items) \n        \n        var flag = 0\n        for(var i=1;i<m.length;i++) {\n          if(m[i][0] === sale.storeLocation) {\n            m[i][1]+=annualRevenue\n            flag = 1\n            break\n          }\n        }\n        if(!flag) {\n          m.push([sale.storeLocation, annualRevenue])\n        }\n      }\n    })\n\n    setDataForAnnualPie(m)\n  }\n\n    return (\n      <div className='wrapper App container'>\n        <div className=\"input-group mb-3\">\n                      <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\" id=\"basic-addon3\">Year</span>\n                      </div>\n\n                      <input class=\"form-control\" type=\"number\" min=\"2013\" max=\"2017\" onChange={OnChangeSetYear} >\n                      </input>\n\n                      <div className=\"input-group-append\">\n                          <button\n                          className=\"btn btn-outline-dark\"\n                          type=\"button\"\n                          onClick={DisplayPieForRevenueChart}\n                          >\n                          Analyze\n                          </button>\n                      </div>\n        </div>\n        <div>\n          {\n            props.dataForAnnualPie?(<div>\n              <div class=\"jumbotron jumbotron-fluid\">\n              <div class=\"container\">\n                <h1 class=\"display-6\">2. Comparison of Annual Sales in stores</h1>\n              </div></div>\n              <Chart\n              width={'800px'}\n              height={'600px'}\n              chartType=\"PieChart\"\n              loader={<div>Loading Chart</div>}\n              data={dataForAnnualPie}\n              options={{\n                title: `% Revenue per outlet in the year ${queryYear}`,\n                // chartArea: { left: 15, top: 15, right: 0, bottom: 0 },\n                pieSliceText: \"label\",\n              }}\n              />\n            </div>) :\n            <div class=\"jumbotron jumbotron-fluid\">\n              <div class=\"container\">\n                <h1 class=\"display-6\">2. Comparison of Annual Sales in stores</h1>\n                <p class=\"lead text-italics\">Select a year</p>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n        \n    )\n}\n\nexport default Graph2"]},"metadata":{},"sourceType":"module"}