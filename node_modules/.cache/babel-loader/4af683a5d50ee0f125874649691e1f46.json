{"ast":null,"code":"var _jsxFileName = \"/home/aarthi/fitgit/react/einduch-stop/frontend/src/components/sales-list.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport SalesDataService from '../services/sales.js';\nimport { useEffect } from 'react';\nimport '../App.css';\nimport DatePicker from 'react-date-picker';\nimport { Chart } from \"react-google-charts\";\nimport dayjs from 'dayjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SalesList = props => {\n  _s();\n\n  const [sales, setSales] = React.useState([]);\n  const [queryLocation, setQueryLocation] = React.useState(\"\");\n  const [queryCoupons, setQueryCoupons] = React.useState();\n  const [queryPurchaseMethod, setQueryPurchaseMethod] = React.useState(\"\");\n  const [purchaseMethods, setPurchaseMethods] = React.useState([\"Any\"]);\n  const [pages, setQueryPage] = React.useState(0);\n  const [locations, setLocations] = React.useState([\"All\"]);\n  const [fromDate, setFromDate] = React.useState(new Date());\n  const [toDate, setToDate] = React.useState();\n  const [NoSalesFlag, setNoSalesFlag] = React.useState(false);\n  const [modifiedSales, setModifiedSales] = React.useState([]);\n  useEffect(() => {\n    retrieveSales();\n    retrievePurchaseMethod();\n    retrieveLocations();\n    setQueryCoupons(false);\n  }, []);\n\n  const onChangeQueryLocation = e => {\n    const searchLocation = e.target.value;\n    setQueryLocation(searchLocation);\n  };\n\n  const onChangeQueryCoupons = e => {\n    const searchCoupons = e.target.checked ? true : false;\n    setQueryCoupons(searchCoupons);\n  };\n\n  const onChangeQueryPurchaseMethod = e => {\n    const searchPurchaseMethod = e.target.value;\n    setQueryPurchaseMethod(searchPurchaseMethod);\n  };\n\n  const onChangePages = e => {\n    const page = e.target.value;\n    setQueryPage(page);\n  };\n\n  const onChangeSetFromDate = e => {\n    setFromDate(e);\n  };\n\n  const retrieveSales = () => {\n    SalesDataService.getAll().then(response => {\n      setSales(response.data.Sales);\n    }).catch(e => {\n      console.log(e);\n    });\n    setNoSalesFlag(true);\n  };\n\n  const retrievePurchaseMethod = () => {\n    SalesDataService.getPurchaseMethod().then(response => {\n      setPurchaseMethods([\"Any\"].concat(response.data));\n      setNoSalesFlag(true);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const retrieveLocations = () => {\n    SalesDataService.getStoreLocations().then(response => {\n      setLocations([\"All\"].concat(response.data));\n      setNoSalesFlag(true);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const refreshList = () => {\n    retrieveSales();\n    setNoSalesFlag(true);\n  };\n\n  const find = (query, by) => {\n    SalesDataService.find(query, by).then(response => {\n      setSales(response.data.Sales);\n      modifySalesFormat();\n      setNoSalesFlag(true);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const modifySalesFormat = () => {\n    var modified = [['Location', 'Date', 'Customer', 'Rating', 'Purchase Method', 'Coupon used']];\n    sales.map(sale => {\n      var m = [];\n      m.push(sale.storeLocation);\n      m.push(dayjs(sale.saleDate).format('YYYY-MM-DD'));\n      m.push(sale.customer.email);\n      m.push(sale.customer.satisfaction);\n      m.push(sale.purchaseMethod);\n      m.push(sale.couponUsed);\n      modified.push(m);\n    });\n    modified.sort((a, b) => dayjs(b[1]).toDate() - dayjs(a[1]).toDate());\n    setModifiedSales(modified);\n  };\n\n  const findAll = () => {\n    SalesDataService.getAll(pages).then(response => {\n      setSales(response.data.Sales);\n    });\n  };\n\n  const findByLocation = () => {\n    if (queryPurchaseMethod === \"All\") {\n      refreshList();\n    } else {\n      find(queryLocation, \"location\");\n    }\n  };\n\n  const findByCoupons = () => {\n    find(queryCoupons, \"couponUsed\");\n  };\n\n  const findByPurchaseMethod = () => {\n    if (queryPurchaseMethod === \"Any\") {\n      refreshList();\n    } else {\n      find(queryPurchaseMethod, \"purchaseMethod\");\n    }\n  };\n\n  const findByFromDate = () => {\n    if (!sales) {\n      SalesDataService.getUnlimited().then(response => {\n        setSales(response.data.Sales);\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n\n    let toDisplay = [];\n    sales.map(sale => {\n      const to = toDate || dayjs();\n\n      if (dayjs(sale.saleDate).inbetween(fromDate, to)) {\n        toDisplay.push(sale);\n      }\n    });\n\n    if (toDisplay.length > 0) {\n      setNoSalesFlag(false);\n      setSales(toDisplay);\n    } else {\n      setNoSalesFlag(true);\n    }\n  };\n\n  const findAllFilters = () => {\n    if (queryLocation === \"Any\") queryLocation = null;\n    if (queryPurchaseMethod === \"All\") queryPurchaseMethod = null;\n    SalesDataService.findAll(queryLocation, queryPurchaseMethod, queryCoupons).then(response => {\n      setSales(response.data.Sales);\n      modifySalesFormat(sales);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"input-group-prepend\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"input-group-text\",\n              id: \"basic-addon2\",\n              children: \"Purchase Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            class: \"form-control\",\n            type: \"custom-select\",\n            onChange: onChangeQueryPurchaseMethod,\n            children: purchaseMethods.map(method => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: method,\n                children: [\" \", method, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group-append\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-secondary\",\n              onClick: findByPurchaseMethod,\n              children: \"Apply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"input-group-prepend\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"input-group-text\",\n              id: \"basic-addon3\",\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            class: \"form-control\",\n            onChange: onChangeQueryLocation,\n            children: locations.map(method => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: method,\n                children: [\" \", method, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group-append\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-secondary\",\n              onClick: findByLocation,\n              children: \"Apply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-secondary gray-200\",\n          type: \"button\",\n          onClick: findAllFilters,\n          children: \"Apply All Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"from-date\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"input-group-text\",\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          id: \"from-date\",\n          selected: fromDate,\n          onChange: onChangeSetFromDate,\n          isClearable: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-secondary\",\n          onClick: findByFromDate,\n          children: \"Apply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: NoSalesFlag ? /*#__PURE__*/_jsxDEV(Chart, {\n        chartType: \"Table\",\n        width: \"100%\",\n        height: \"100%\",\n        data: modifiedSales,\n        options: {\n          allowHtml: true,\n          title: \"Sales\",\n          legend: {\n            position: \"top\"\n          },\n          pageSize: 50,\n          width: \"100%\",\n          height: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"alert alert-danger\",\n        role: \"alert\",\n        children: \"No such sales exist :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SalesList, \"cpSTFxu19HYQB+BVmW3asi6RI0U=\");\n\n_c = SalesList;\nexport default SalesList;\n/*\n\nexport const formatters = [\n  {\n    type: \"DateFormat\" as const,\n    column: 1,\n    options: {\n      formatType: \"long\",\n    },\n  },\n  {\n    type: \"DateFormat\" as const,\n    column: 2,\n    options: {\n      formatType: \"medium\",\n    },\n  },\n  {\n    type: \"DateFormat\" as const,\n    column: 3,\n    options: {\n      formatType: \"short\",\n    },\n  },\n];\n\n{\n        \n        sales.map((sale) => {\n          return (\n            <div className=\"col-lg-4 pb-1\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{sale.storeLocation}</h5>\n                  <p className=\"card-text\">\n                    <strong>Customer :  </strong>{sale.customer.email}<br/>\n                    <strong>Ratings : </strong>{sale.customer.satisfaction}<br/>\n                    <strong>Purchase Method : </strong>{sale.purchaseMethod}<br/>\n                    <strong>Coupon Used :</strong>{\n                      sale.couponUsed?\" YES\":\" NO\"\n                    }<br/>\n                    <strong>Date :</strong>{\" \" +dayjs(sale.saleDate).format('DD/MM/YYYY')}<br/>\n                  </p>\n                </div>\n              </div>\n            </div>\n          );\n        })\n        \n} \n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"SalesList\");","map":{"version":3,"sources":["/home/aarthi/fitgit/react/einduch-stop/frontend/src/components/sales-list.js"],"names":["React","SalesDataService","useEffect","DatePicker","Chart","dayjs","SalesList","props","sales","setSales","useState","queryLocation","setQueryLocation","queryCoupons","setQueryCoupons","queryPurchaseMethod","setQueryPurchaseMethod","purchaseMethods","setPurchaseMethods","pages","setQueryPage","locations","setLocations","fromDate","setFromDate","Date","toDate","setToDate","NoSalesFlag","setNoSalesFlag","modifiedSales","setModifiedSales","retrieveSales","retrievePurchaseMethod","retrieveLocations","onChangeQueryLocation","e","searchLocation","target","value","onChangeQueryCoupons","searchCoupons","checked","onChangeQueryPurchaseMethod","searchPurchaseMethod","onChangePages","page","onChangeSetFromDate","getAll","then","response","data","Sales","catch","console","log","getPurchaseMethod","concat","getStoreLocations","refreshList","find","query","by","modifySalesFormat","modified","map","sale","m","push","storeLocation","saleDate","format","customer","email","satisfaction","purchaseMethod","couponUsed","sort","a","b","findAll","findByLocation","findByCoupons","findByPurchaseMethod","findByFromDate","getUnlimited","toDisplay","to","inbetween","length","findAllFilters","method","allowHtml","title","legend","position","pageSize","width","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SalesDataService from '../services/sales.js'\nimport { useEffect } from 'react';\nimport '../App.css'\n\nimport DatePicker from 'react-date-picker';\nimport { Chart } from \"react-google-charts\";\nimport dayjs from 'dayjs' ;\n\n\nconst SalesList = props => {\n  const [sales, setSales] = React.useState([])\n  const [queryLocation, setQueryLocation] = React.useState(\"\")\n  const [queryCoupons, setQueryCoupons] = React.useState()\n  const [queryPurchaseMethod, setQueryPurchaseMethod] = React.useState(\"\")\n  const [purchaseMethods, setPurchaseMethods] = React.useState([\"Any\"]);\n  const [pages, setQueryPage] = React.useState(0) \n  const [locations,  setLocations] = React.useState([\"All\"])\n  const [fromDate, setFromDate] = React.useState(new Date())\n  const [toDate, setToDate] = React.useState()\n  const [NoSalesFlag, setNoSalesFlag] = React.useState(false)\n\n  const [modifiedSales, setModifiedSales] = React.useState([])\n\n  useEffect(() => {\n    retrieveSales();\n    retrievePurchaseMethod();\n    retrieveLocations();\n    setQueryCoupons(false);\n  }, []);\n\n  const onChangeQueryLocation = e => {\n    const searchLocation = e.target.value;\n    setQueryLocation(searchLocation);\n  };\n\n  const onChangeQueryCoupons = e => {\n    const searchCoupons = (e.target.checked?true:false)\n    setQueryCoupons(searchCoupons);\n  };\n\n  const onChangeQueryPurchaseMethod = e => {\n    const searchPurchaseMethod = e.target.value;\n    setQueryPurchaseMethod(searchPurchaseMethod);\n  };\n\n  const onChangePages = e => {\n    const page = e.target.value \n    setQueryPage(page) \n  }\n\n  const onChangeSetFromDate = e => {\n    setFromDate(e)\n  }\n\n  const retrieveSales = () => {\n    SalesDataService.getAll()\n      .then(response => {\n        setSales(response.data.Sales);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n      setNoSalesFlag(true)\n  };\n\n  const retrievePurchaseMethod = () => {\n    SalesDataService.getPurchaseMethod()\n      .then(response => {\n        setPurchaseMethods([\"Any\"].concat(response.data));\n        setNoSalesFlag(true)\n      })\n      .catch(e => {\n        console.log(e);\n      });\n      \n  };\n\n  const retrieveLocations = () => {\n    SalesDataService.getStoreLocations()\n    .then(response => {\n      setLocations([\"All\"].concat(response.data));\n      setNoSalesFlag(true)\n    })\n    .catch(e => {\n      console.log(e);\n    });\n  }\n\n  const refreshList = () => {\n    retrieveSales();\n    setNoSalesFlag(true)\n  };\n\n  const find = (query, by) => {\n    SalesDataService.find(query, by)\n      .then(response => {\n        \n        setSales(response.data.Sales);\n\n        modifySalesFormat() \n        setNoSalesFlag(true)\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const modifySalesFormat = () => {\n    var modified = [['Location','Date','Customer','Rating','Purchase Method','Coupon used']]\n    sales.map(sale => {\n      var m = []\n      m.push(sale.storeLocation)\n      m.push(dayjs(sale.saleDate).format('YYYY-MM-DD'))\n      m.push(sale.customer.email)\n      m.push(sale.customer.satisfaction)\n      m.push(sale.purchaseMethod)\n      m.push(sale.couponUsed)\n      modified.push(m)\n    })\n\n\n    modified.sort((a,b) => (dayjs(b[1]).toDate())-(dayjs(a[1]).toDate()))\n\n    setModifiedSales(modified)\n\n  }\n\n  const findAll = () => {\n    SalesDataService.getAll(pages)\n      .then(response => {\n          setSales(response.data.Sales)\n      })\n  \n  }\n\n  const findByLocation = () => {\n    if (queryPurchaseMethod === \"All\") {\n      refreshList();\n    }\n    else {\n      find(queryLocation, \"location\")\n    }\n  };\n\n  const findByCoupons = () => {\n    find(queryCoupons, \"couponUsed\")\n  };\n\n  const findByPurchaseMethod = () => {\n    if (queryPurchaseMethod === \"Any\") {\n      refreshList();\n    } else {\n      find(queryPurchaseMethod, \"purchaseMethod\")\n    }\n  };\n\n  const findByFromDate = () => {\n    if(!sales) {\n      SalesDataService.getUnlimited()\n      .then(response=>{\n        setSales(response.data.Sales)\n      })\n      .catch(e=>{\n        console.log(e)\n      })\n    }\n    let toDisplay = []\n    sales.map(sale=> {\n      const to = toDate || dayjs() ;\n      if(dayjs(sale.saleDate).inbetween(fromDate, to)) {\n        toDisplay.push(sale)\n      }\n    })\n    if(toDisplay.length > 0) {\n      setNoSalesFlag(false)\n      setSales(toDisplay)\n    }\n    else {\n      setNoSalesFlag(true)\n    }\n  }\n\n  const findAllFilters = () => {\n    if(queryLocation === \"Any\") queryLocation = null\n    if(queryPurchaseMethod === \"All\") queryPurchaseMethod = null\n    SalesDataService.findAll(queryLocation, queryPurchaseMethod, queryCoupons)\n    .then(response => {\n      setSales(response.data.Sales)\n      modifySalesFormat(sales)\n    })\n    .catch(e => {\n        console.log(e)\n    })\n  }\n\n  return (\n    \n    <div className='App'>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group mb-3\">\n              <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\" id=\"basic-addon2\">Purchase Method</span>\n              </div>\n              <select class=\"form-control\" type=\"custom-select\" onChange={onChangeQueryPurchaseMethod}>\n                {\n                  purchaseMethods.map(method => {\n                    return (\n                      <option value={method}> {method} </option>\n                    )\n                  })\n                }\n              </select>\n              <div className=\"input-group-append\">\n                <button className=\"btn btn-outline-secondary\" onClick={findByPurchaseMethod}>Apply</button>\n              </div>\n          </div>\n        </div>\n        <div className=\"col\">\n        <div className=\"input-group mb-3\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\" id=\"basic-addon3\">Location</span>\n          </div>\n          <select class=\"form-control\" onChange={onChangeQueryLocation}>\n              {\n                locations.map(method => {\n                  return (\n                    <option value={method}> {method} </option>\n                  )\n                })\n              }\n            </select>\n            <div className=\"input-group-append\">\n                <button className=\"btn btn-outline-secondary\" onClick={findByLocation}>Apply</button>\n            </div>\n        </div>\n        </div>\n        <div className=\"col-2\">\n          <button\n            className=\"btn btn-outline-secondary gray-200\"\n            type=\"button\"\n            onClick={findAllFilters}\n          >\n            Apply All Filters\n          </button>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\"> \n            <label for=\"from-date\"><span class=\"input-group-text\">From</span></label>\n            <DatePicker\n              id=\"from-date\"\n              selected={fromDate}\n              onChange={onChangeSetFromDate}\n              isClearable\n            />\n          <button className=\"btn btn-outline-secondary\" onClick={findByFromDate}>Apply</button>\n        </div>\n        {/* // add couponUsed filter */}\n      </div>\n      <br/>\n      <br/>\n      <div className=\"row\">\n      { \n        NoSalesFlag?\n        <Chart\n            chartType=\"Table\"\n            width=\"100%\"\n            height=\"100%\"\n            data={modifiedSales}\n            options={{\n              allowHtml: true,\n              title: \"Sales\",\n              legend: { position: \"top\" },\n              pageSize: 50,\n              width:\"100%\",\n              height:\"100%\"\n            }}\n        /> :\n        <div class=\"alert alert-danger\" role=\"alert\">\n          No such sales exist :(\n        </div>\n      } \n      \n      </div>\n    </div>\n\n  );\n}\n\nexport default SalesList;\n\n/*\n\nexport const formatters = [\n  {\n    type: \"DateFormat\" as const,\n    column: 1,\n    options: {\n      formatType: \"long\",\n    },\n  },\n  {\n    type: \"DateFormat\" as const,\n    column: 2,\n    options: {\n      formatType: \"medium\",\n    },\n  },\n  {\n    type: \"DateFormat\" as const,\n    column: 3,\n    options: {\n      formatType: \"short\",\n    },\n  },\n];\n\n{\n        \n        sales.map((sale) => {\n          return (\n            <div className=\"col-lg-4 pb-1\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{sale.storeLocation}</h5>\n                  <p className=\"card-text\">\n                    <strong>Customer :  </strong>{sale.customer.email}<br/>\n                    <strong>Ratings : </strong>{sale.customer.satisfaction}<br/>\n                    <strong>Purchase Method : </strong>{sale.purchaseMethod}<br/>\n                    <strong>Coupon Used :</strong>{\n                      sale.couponUsed?\" YES\":\" NO\"\n                    }<br/>\n                    <strong>Date :</strong>{\" \" +dayjs(sale.saleDate).format('DD/MM/YYYY')}<br/>\n                  </p>\n                </div>\n              </div>\n            </div>\n          );\n        })\n        \n} \n\n*/\n"]},"metadata":{},"sourceType":"module"}