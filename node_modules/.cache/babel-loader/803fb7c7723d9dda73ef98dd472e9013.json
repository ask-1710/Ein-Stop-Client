{"ast":null,"code":"var _jsxFileName = \"/home/aarthi/fitgit/react/einduch-shop/frontend/src/components/analyze.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport SalesDataService from '../services/sales.js';\nimport SalesAnalysisDataService from '../services/analyze.js';\nimport { Chart, ChartSeries, ChartSeriesItem, ChartCategoryAxis, ChartCategoryAxisItem, ChartTitle, ChartLegend } from '@progress/kendo-react-charts';\nimport \"hammerjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnalyzeSales = props => {\n  _s();\n\n  // G1 : revenue from each all stores -> min & max = one graph has all stores\n  // G2 : percentage of different items sold from a given store\n  const [store, setStore] = React.useState(\"\");\n  const [locations, setLocations] = React.useState([]);\n  const [dataToPlot, setdataToPlot] = React.useState([]);\n  useEffect(() => {\n    retrieveLocations();\n  }, []);\n\n  const retrieveLocations = () => {\n    SalesDataService.getStoreLocations().then(response => {\n      // console.log(response.data);\n      setLocations(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const OnChangeSetStore = e => {\n    setStore(e.target.value);\n  };\n\n  const labelContent = props => {\n    let formatedNumber = Number(props.dataItem.value).toLocaleString(undefined, {\n      style: \"percent\",\n      minimumFractionDigits: 2\n    });\n    return `${props.dataItem.category} item: ${formatedNumber}`;\n  };\n\n  const ChartContainer = () => /*#__PURE__*/_jsxDEV(Chart, {\n    children: [/*#__PURE__*/_jsxDEV(ChartTitle, {\n      text: \"Ratios of Items Sold\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ChartLegend, {\n      position: \"bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ChartSeries, {\n      children: /*#__PURE__*/_jsxDEV(ChartSeriesItem, {\n        type: \"pie\",\n        data: dataToPlot,\n        field: \"value\",\n        categoryField: \"category\",\n        labels: {\n          visible: true,\n          content: labelContent\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n\n  const DisplayPieChart = () => {\n    // alert(store)\n    SalesAnalysisDataService.calculateRatioItems(store).then(response => {\n      setdataToPlot(response.data);\n    }).catch(error => {\n      console.log(error);\n    }); // return (\n    //     <div>\n    //         <ChartContainer/>\n    //     </div>\n    // )\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-group-prepend\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"input-group-text\",\n            id: \"basic-addon3\",\n            children: \"@\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          class: \"form-control\",\n          onChange: OnChangeSetStore,\n          children: locations.map(method => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: method,\n              children: [\" \", method, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group-append\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary\",\n            type: \"button\" // onClick={DisplayPieChart}\n            ,\n            children: \"Analyze\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-4 pb-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: \"Series\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Category :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 27\n              }, this), data.category, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 69\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Value : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 27\n              }, this), data.value, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 64\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AnalyzeSales, \"D/WhLCASZstl78TYEquwoETrneQ=\");\n\n_c = AnalyzeSales;\nexport default AnalyzeSales;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnalyzeSales\");","map":{"version":3,"sources":["/home/aarthi/fitgit/react/einduch-shop/frontend/src/components/analyze.js"],"names":["React","useEffect","SalesDataService","SalesAnalysisDataService","Chart","ChartSeries","ChartSeriesItem","ChartCategoryAxis","ChartCategoryAxisItem","ChartTitle","ChartLegend","AnalyzeSales","props","store","setStore","useState","locations","setLocations","dataToPlot","setdataToPlot","retrieveLocations","getStoreLocations","then","response","data","catch","e","console","log","OnChangeSetStore","target","value","labelContent","formatedNumber","Number","dataItem","toLocaleString","undefined","style","minimumFractionDigits","category","ChartContainer","visible","content","DisplayPieChart","calculateRatioItems","error","map","method"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport SalesDataService from '../services/sales.js' ;\nimport SalesAnalysisDataService from '../services/analyze.js' ;\nimport {\n    Chart,\n    ChartSeries,\n    ChartSeriesItem,\n    ChartCategoryAxis,\n    ChartCategoryAxisItem,\n    ChartTitle,\n    ChartLegend\n} from '@progress/kendo-react-charts';\nimport \"hammerjs\";\n\nconst AnalyzeSales = (props) => {\n    // G1 : revenue from each all stores -> min & max = one graph has all stores\n\n    // G2 : percentage of different items sold from a given store\n     \n    const [store, setStore] = React.useState(\"\")\n    const [locations, setLocations] = React.useState([])\n    const [dataToPlot, setdataToPlot] = React.useState([])\n    \n  useEffect(() => {\n    retrieveLocations();\n  }, []);\n\n    const retrieveLocations = () => {\n        SalesDataService.getStoreLocations()\n        .then(response => {\n        // console.log(response.data);\n        setLocations(response.data);\n        })\n        .catch(e => {\n        console.log(e);\n        });\n    }\n\n    const OnChangeSetStore = e => {\n        setStore(e.target.value)\n    }\n\n    const labelContent = (props) => {\n        let formatedNumber = Number(props.dataItem.value).toLocaleString(undefined, {\n          style: \"percent\",\n          minimumFractionDigits: 2,\n        });\n        return `${props.dataItem.category} item: ${formatedNumber}`;\n      };\n      \n      const ChartContainer = () => (\n        <Chart>\n          <ChartTitle text=\"Ratios of Items Sold\" />\n          <ChartLegend position=\"bottom\" />\n          <ChartSeries>\n            <ChartSeriesItem\n              type=\"pie\"\n              data={dataToPlot}\n              field=\"value\"\n              categoryField=\"category\"\n              labels={{ visible: true, content: labelContent }}\n            />\n          </ChartSeries>\n        </Chart>\n      );\n\n      const DisplayPieChart = () => {\n        // alert(store)\n        SalesAnalysisDataService.calculateRatioItems(store)\n            .then(response => {\n                setdataToPlot(response.data)\n            })\n            .catch(error => {\n                console.log(error)\n            }) \n        \n        // return (\n        //     <div>\n        //         <ChartContainer/>\n        //     </div>\n        // )\n    }\n\n      return (\n        <div>\n            <div className=\"row form\">            \n                <div className=\"input-group mb-3\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\" id=\"basic-addon3\">@</span>\n                    </div>\n\n                    <select class=\"form-control\" onChange={OnChangeSetStore}>\n                        {\n                        locations.map(method => {\n                            return (\n                            <option value={method}> {method} </option>\n                            )\n                        })\n                        }\n                    </select>\n\n                    <div className=\"input-group-append\">\n                        <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        // onClick={DisplayPieChart}\n                        >\n                        Analyze\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n\n            <div className=\"row\">\n            {\n              \n                  <div className=\"col-lg-4 pb-1\">\n                    <div className=\"card\">\n                      <div className=\"card-body\">\n                        <h5 className=\"card-title\">Series</h5>\n                        <p className=\"card-text\">\n                          <strong>Category :</strong>{data.category}<br/>\n                          <strong>Value : </strong>{data.value}<br/>\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n              \n            }\n            </div>\n\n            {/* <Chart>\n                <ChartTitle text=\"Ratios of Items Sold\" />\n                <ChartLegend position=\"bottom\" />\n                    <ChartSeries>\n                        <ChartSeriesItem\n                        type=\"pie\"\n                        data={dataToPlot}\n                        field=\"value\"\n                        categoryField=\"category\"\n                        labels={{ visible: true, content: labelContent }}\n                        />\n                    </ChartSeries>\n                </Chart>\n                 */}\n\n         </div> \n      \n      );\n\n}\n\nexport default AnalyzeSales;\n"]},"metadata":{},"sourceType":"module"}