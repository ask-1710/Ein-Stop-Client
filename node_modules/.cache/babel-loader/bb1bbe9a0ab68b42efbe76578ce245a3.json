{"ast":null,"code":"var _jsxFileName = \"/home/aarthi/fitgit/react/einduch-stop/frontend/src/components/analyze.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport SalesDataService from '../services/sales.js'; // import SalesAnalysisDataService from '../services/analyze.js' ;\n\nimport { Chart, ChartSeries, ChartSeriesItem, ChartCategoryAxis, ChartCategoryAxisItem, ChartTitle, ChartLegend } from '@progress/kendo-react-charts';\nimport \"hammerjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnalyzeSales = props => {\n  _s();\n\n  // G1 : revenue from each all stores -> min & max = one graph has all stores\n  // G2 : percentage of different items sold from a given store\n  const [store, setStore] = React.useState(\"\");\n  const [locations, setLocations] = React.useState([]);\n  const [dataToPlot, setdataToPlot] = React.useState([]);\n  const [sales, setSales] = React.useState([]);\n  useEffect(() => {\n    retrieveLocations();\n  }, []);\n\n  const retrieveLocations = () => {\n    SalesDataService.getStoreLocations().then(response => {\n      // console.log(response.data);\n      setLocations(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const OnChangeSetStore = e => {\n    setStore(e.target.value);\n  };\n\n  const labelContent = props => {\n    let formatedNumber = Number(props.dataItem.value);\n    return `${props.dataItem.category} item: ${formatedNumber}`;\n  };\n\n  const ChartContainer = () => /*#__PURE__*/_jsxDEV(Chart, {\n    children: [/*#__PURE__*/_jsxDEV(ChartTitle, {\n      text: \"Ratios of Items Sold\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ChartLegend, {\n      position: \"bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ChartSeries, {\n      children: /*#__PURE__*/_jsxDEV(ChartSeriesItem, {\n        type: \"pie\",\n        data: dataToPlot,\n        field: \"value\",\n        categoryField: \"category\",\n        labels: {\n          visible: true,\n          content: labelContent\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n\n  const calculateRatioItems = () => {\n    var items = {}; // {'pencil':3, 'eraser':10}\n\n    var totalNumber = 0; // 13\n\n    sales.map(element => {\n      element.items.map(item => {\n        var itemNames = Object.keys(items);\n        var contains = itemNames.some(x => x.hasOwnProperty(item.name));\n\n        if (contains) {\n          items[item.name] += parseInt(item.quantity);\n        } else {\n          items[item.name] = parseInt(item.quantity);\n        }\n\n        totalNumber += parseInt(item.quantity);\n      });\n    });\n    console.log(items);\n    var ratios = [];\n    var objectKeysArray = Object.keys(items);\n    objectKeysArray.forEach(objKey => {\n      var objValue = items[objKey]; // objVal holds quantity of each item\n\n      var ratio = objValue;\n      var newJsonObject = {\n        'category': objKey,\n        'value': ratio\n      };\n      ratios.push(newJsonObject);\n    });\n    console.log(ratios); // console.log(totalNumber)\n\n    return ratios;\n  };\n\n  const DisplayPieChart = e => {\n    SalesDataService.find(store, \"location\").then(response => {\n      setSales(response.data.Sales);\n    }).catch(e => {\n      console.log(e);\n    });\n    const series = calculateRatioItems();\n    setdataToPlot(series);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-group-prepend\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"input-group-text\",\n            id: \"basic-addon3\",\n            children: \"@\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          class: \"form-control\",\n          onChange: OnChangeSetStore,\n          children: locations.map(method => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: method,\n              children: [\" \", method, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group-append\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary\",\n            type: \"button\",\n            onClick: DisplayPieChart,\n            children: \"Analyze\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AnalyzeSales, \"2cUJ2Hitf7oYgf9HBXHDBSSMHw4=\");\n\n_c = AnalyzeSales;\nexport default AnalyzeSales;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnalyzeSales\");","map":{"version":3,"sources":["/home/aarthi/fitgit/react/einduch-stop/frontend/src/components/analyze.js"],"names":["React","useEffect","SalesDataService","Chart","ChartSeries","ChartSeriesItem","ChartCategoryAxis","ChartCategoryAxisItem","ChartTitle","ChartLegend","AnalyzeSales","props","store","setStore","useState","locations","setLocations","dataToPlot","setdataToPlot","sales","setSales","retrieveLocations","getStoreLocations","then","response","data","catch","e","console","log","OnChangeSetStore","target","value","labelContent","formatedNumber","Number","dataItem","category","ChartContainer","visible","content","calculateRatioItems","items","totalNumber","map","element","item","itemNames","Object","keys","contains","some","x","hasOwnProperty","name","parseInt","quantity","ratios","objectKeysArray","forEach","objKey","objValue","ratio","newJsonObject","push","DisplayPieChart","find","Sales","series","method"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport SalesDataService from '../services/sales.js' ;\n// import SalesAnalysisDataService from '../services/analyze.js' ;\nimport {\n    Chart,\n    ChartSeries,\n    ChartSeriesItem,\n    ChartCategoryAxis,\n    ChartCategoryAxisItem,\n    ChartTitle,\n    ChartLegend\n} from '@progress/kendo-react-charts';\nimport \"hammerjs\";\n\nconst AnalyzeSales = (props) => {\n    // G1 : revenue from each all stores -> min & max = one graph has all stores\n\n    // G2 : percentage of different items sold from a given store\n     \n    const [store, setStore] = React.useState(\"\")\n    const [locations, setLocations] = React.useState([])\n    const [dataToPlot, setdataToPlot] = React.useState([])\n    const [sales, setSales] = React.useState([])\n    \n  useEffect(() => {\n    retrieveLocations();\n  }, []);\n\n    const retrieveLocations = () => {\n        SalesDataService.getStoreLocations()\n        .then(response => {\n        // console.log(response.data);\n        setLocations(response.data);\n        })\n        .catch(e => {\n        console.log(e);\n        });\n    }\n\n    const OnChangeSetStore = e => {\n        setStore(e.target.value)\n    }\n\n    const labelContent = (props) => {\n        let formatedNumber = Number(props.dataItem.value)        \n        return `${props.dataItem.category} item: ${formatedNumber}`;\n      };\n      \n      const ChartContainer = () => (\n        <Chart>\n          <ChartTitle text=\"Ratios of Items Sold\" />\n          <ChartLegend position=\"bottom\" />\n          <ChartSeries>\n            <ChartSeriesItem\n              type=\"pie\"\n              data={dataToPlot}\n              field=\"value\"\n              categoryField=\"category\"\n              labels={{ visible: true, content: labelContent }}\n            />\n          </ChartSeries>\n        </Chart>\n      );\n\n      const calculateRatioItems = () => {\n               \n        var items = {}\n        // {'pencil':3, 'eraser':10}\n        var totalNumber = 0\n        // 13\n\n        sales.map(element => {\n\n            element.items.map(item => {\n              var itemNames = Object.keys(items) ;\n              var contains = itemNames.some(x => x.hasOwnProperty(item.name)) ;\n\n                if(contains) {                  \n                    items[item.name]+=parseInt(item.quantity)\n                } else {\n                    items[item.name]=parseInt(item.quantity)\n                }\n\n                totalNumber+=parseInt(item.quantity)\n            })\n\n        });\n\n        console.log(items)\n\n        var ratios = []\n\n        var objectKeysArray = Object.keys(items)\n\n        objectKeysArray.forEach((objKey) => {\n            var objValue = items[objKey]\n            // objVal holds quantity of each item\n            var ratio = objValue\n            var newJsonObject = {\n                'category': objKey,\n                'value': ratio\n            }\n            ratios.push(newJsonObject)\n        })\n\n        console.log(ratios)\n        // console.log(totalNumber)\n\n        return ratios\n    }\n    \n      const DisplayPieChart = (e) => {\n        SalesDataService.find(store, \"location\")\n                .then(response => {\n                  \n                    setSales(response.data.Sales)\n                })\n                .catch(e => {\n                    console.log(e);\n                })\n        \n        const series = calculateRatioItems()\n\n        setdataToPlot(series)\n        \n    }\n\n      return (\n        <div>\n            <div className=\"row form\">            \n                <div className=\"input-group mb-3\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\" id=\"basic-addon3\">@</span>\n                    </div>\n\n                    <select class=\"form-control\" onChange={OnChangeSetStore}>\n                        {\n                        locations.map(method => {\n                            return (\n                            <option value={method}> {method} </option>\n                            )\n                        })\n                        }\n                    </select>\n\n                    <div className=\"input-group-append\">\n                        <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={DisplayPieChart}\n                        >\n                        Analyze\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n{/*                       \n             <Chart>\n                <ChartTitle text=\"Percentage of Items Sold\" />\n                <ChartLegend position=\"bottom\" />\n                    <ChartSeries>\n                        <ChartSeriesItem\n                        type=\"pie\"\n                        data={dataToPlot}\n                        field=\"value\"\n                        categoryField=\"category\"\n                        labels={{ visible: true, content: labelContent }}\n                        />\n                    </ChartSeries>\n              </Chart>\n                  */}\n\n\n\n         </div> \n      \n      );\n\n}\n\nexport default AnalyzeSales;\n"]},"metadata":{},"sourceType":"module"}