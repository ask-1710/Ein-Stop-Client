{"ast":null,"code":"var _jsxFileName = \"/home/aarthi/fitgit/react/einduch-stop/frontend/src/components/analyze.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport SalesDataService from '../services/sales.js';\nimport dayjs from 'dayjs';\nimport { Chart } from \"react-google-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnalyzeSales = props => {\n  _s();\n\n  // G1 : revenue from each all stores -> min & max = one graph has all stores\n  // G2 : percentage of different items sold from a given store\n  const [store, setStore] = React.useState(\"\");\n  const [locations, setLocations] = React.useState([]);\n  const [dataForPiePlot, setdataForPiePlot] = React.useState();\n  const [dataForBarChart, setDatForBarChart] = React.useState();\n  const [sales, setSales] = React.useState([]);\n  const [month, setMonth] = React.useState(\"\");\n  const months = ['Jan', 'Feb', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  useEffect(() => {\n    retrieveLocations();\n  }, []);\n\n  const retrieveLocations = () => {\n    SalesDataService.getStoreLocations().then(response => {\n      // console.log(response.data);\n      setLocations(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const OnChangeSetStore = e => {\n    setStore(e.target.value);\n  };\n\n  const OnChangeSetMonth = e => {\n    setMonth(e.target.value);\n  };\n\n  const calculateQuantityItems = () => {\n    var items = {}; // {'pencil':3, 'eraser':10}\n\n    var totalNumber = 0; // 13\n\n    sales.map(element => {\n      element.items.map(item => {\n        items[item.name] = items[item.name] ? items[item.name] + parseInt(item.quantity) : parseInt(item.quantity);\n        totalNumber += parseInt(item.quantity);\n      });\n    });\n    var ratios = [['Category', 'Quantity sold']];\n    var objectKeysArray = Object.keys(items);\n    objectKeysArray.forEach(objKey => {\n      var objValue = items[objKey]; // objVal holds quantity of each item\n\n      var ration = [objKey, objValue];\n      ratios.push(ration);\n    });\n    return ratios;\n  };\n\n  const DisplayPieChart = () => {\n    SalesDataService.find(store, \"location\").then(response => {\n      setSales(response.data.Sales);\n    }).catch(e => {\n      console.log(e);\n    });\n    const series = calculateQuantityItems();\n    setdataForPiePlot(series);\n  };\n\n  const DisplayBarChart = () => {\n    // choose a month\n    const monthIdx = months.findIndex(month) + 1;\n    SalesDataService.find(store, \"location\").then(response => {\n      setSales(response.data.Sales);\n    }).catch(e => {\n      console.log(e);\n    });\n    sales.map(sale => {\n      sale.map;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-group-prepend\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"input-group-text\",\n            id: \"basic-addon3\",\n            children: \"@\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          class: \"form-control\",\n          onChange: OnChangeSetStore,\n          children: locations.map(method => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: method,\n              children: [\" \", method, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 27\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group-append\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary\",\n            type: \"button\",\n            onClick: DisplayPieChart,\n            children: \"Analyze\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-group-prepend\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"input-group-text\",\n            id: \"basic-addon3\",\n            children: \"Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          class: \"form-control\",\n          onChange: OnChangeSetMonth,\n          children: months.map(method => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: method,\n              children: [\" \", method, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 27\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group-append\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary\",\n            type: \"button\",\n            onClick: DisplayBarChart,\n            children: \"Analyze\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          width: '800px',\n          height: '600px',\n          chartType: \"PieChart\",\n          loader: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 23\n          }, this),\n          data: dataForPiePlot,\n          options: {\n            title: 'Items and Sales'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(Chart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AnalyzeSales, \"9ZldfxiytI5C+FWprPKcIdMhgPc=\");\n\n_c = AnalyzeSales;\nexport default AnalyzeSales; // <div>\n// {\n//       {dataToPlot} ? \n//         <div><Chart\n//           width={'800px'}\n//           height={'600px'}\n//           chartType=\"PieChart\"\n//           loader={<div>Loading Chart</div>}\n//           data={dataToPlot}\n//           options={{\n//             title: 'Items and Sales',\n//           }}\n//         /></div>\n//       :\n//       <div>'Nothing to Dsiplay'</div>\n// }\n// </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"AnalyzeSales\");","map":{"version":3,"sources":["/home/aarthi/fitgit/react/einduch-stop/frontend/src/components/analyze.js"],"names":["React","useEffect","SalesDataService","dayjs","Chart","AnalyzeSales","props","store","setStore","useState","locations","setLocations","dataForPiePlot","setdataForPiePlot","dataForBarChart","setDatForBarChart","sales","setSales","month","setMonth","months","retrieveLocations","getStoreLocations","then","response","data","catch","e","console","log","OnChangeSetStore","target","value","OnChangeSetMonth","calculateQuantityItems","items","totalNumber","map","element","item","name","parseInt","quantity","ratios","objectKeysArray","Object","keys","forEach","objKey","objValue","ration","push","DisplayPieChart","find","Sales","series","DisplayBarChart","monthIdx","findIndex","sale","method","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,qBAAtB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B;AAEA;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,KAAK,CAACS,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsCb,KAAK,CAACS,QAAN,EAA5C;AACA,QAAM,CAACK,eAAD,EAAkBC,iBAAlB,IAAuCf,KAAK,CAACS,QAAN,EAA7C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBjB,KAAK,CAACS,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBnB,KAAK,CAACS,QAAN,CAAe,EAAf,CAA1B;AACA,QAAMW,MAAM,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAc,OAAd,EAAsB,OAAtB,EAA8B,KAA9B,EAAoC,MAApC,EAA2C,MAA3C,EAAkD,QAAlD,EAA2D,WAA3D,EAAuE,SAAvE,EAAiF,UAAjF,EAA4F,UAA5F,CAAf;AAEFnB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT;;AAIE,QAAMA,iBAAiB,GAAG,MAAM;AAC5BnB,IAAAA,gBAAgB,CAACoB,iBAAjB,GACCC,IADD,CACMC,QAAQ,IAAI;AAClB;AACAb,MAAAA,YAAY,CAACa,QAAQ,CAACC,IAAV,CAAZ;AACC,KAJD,EAKCC,KALD,CAKOC,CAAC,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACC,KAPD;AAQH,GATD;;AAWA,QAAMG,gBAAgB,GAAGH,CAAC,IAAI;AAC1BnB,IAAAA,QAAQ,CAACmB,CAAC,CAACI,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAGN,CAAC,IAAI;AAC5BR,IAAAA,QAAQ,CAACQ,CAAC,CAACI,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAIA,QAAME,sBAAsB,GAAG,MAAM;AAEjC,QAAIC,KAAK,GAAG,EAAZ,CAFiC,CAGjC;;AACA,QAAIC,WAAW,GAAG,CAAlB,CAJiC,CAKjC;;AAEApB,IAAAA,KAAK,CAACqB,GAAN,CAAUC,OAAO,IAAI;AAEjBA,MAAAA,OAAO,CAACH,KAAR,CAAcE,GAAd,CAAkBE,IAAI,IAAI;AAExBJ,QAAAA,KAAK,CAACI,IAAI,CAACC,IAAN,CAAL,GAAkBL,KAAK,CAACI,IAAI,CAACC,IAAN,CAAL,GAAmBL,KAAK,CAACI,IAAI,CAACC,IAAN,CAAL,GAAiBC,QAAQ,CAACF,IAAI,CAACG,QAAN,CAA5C,GAA8DD,QAAQ,CAACF,IAAI,CAACG,QAAN,CAAxF;AAEAN,QAAAA,WAAW,IAAEK,QAAQ,CAACF,IAAI,CAACG,QAAN,CAArB;AACD,OALD;AAOH,KATD;AAWA,QAAIC,MAAM,GAAG,CAAC,CAAC,UAAD,EAAY,eAAZ,CAAD,CAAb;AAEA,QAAIC,eAAe,GAAGC,MAAM,CAACC,IAAP,CAAYX,KAAZ,CAAtB;AAEAS,IAAAA,eAAe,CAACG,OAAhB,CAAyBC,MAAD,IAAY;AAChC,UAAIC,QAAQ,GAAGd,KAAK,CAACa,MAAD,CAApB,CADgC,CAEhC;;AACA,UAAIE,MAAM,GAAG,CAACF,MAAD,EAASC,QAAT,CAAb;AAEAN,MAAAA,MAAM,CAACQ,IAAP,CAAYD,MAAZ;AACH,KAND;AAQA,WAAOP,MAAP;AACH,GA/BD;;AAiCA,QAAMS,eAAe,GAAG,MAAM;AAC1BlD,IAAAA,gBAAgB,CAACmD,IAAjB,CAAsB9C,KAAtB,EAA6B,UAA7B,EACSgB,IADT,CACcC,QAAQ,IAAI;AAEdP,MAAAA,QAAQ,CAACO,QAAQ,CAACC,IAAT,CAAc6B,KAAf,CAAR;AACH,KAJT,EAKS5B,KALT,CAKeC,CAAC,IAAI;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,KAPT;AASA,UAAM4B,MAAM,GAAGrB,sBAAsB,EAArC;AAEArB,IAAAA,iBAAiB,CAAC0C,MAAD,CAAjB;AAEH,GAdD;;AAgBA,QAAMC,eAAe,GAAG,MAAM;AAC5B;AAEA,UAAMC,QAAQ,GAAGrC,MAAM,CAACsC,SAAP,CAAiBxC,KAAjB,IAA0B,CAA3C;AAEAhB,IAAAA,gBAAgB,CAACmD,IAAjB,CAAsB9C,KAAtB,EAA6B,UAA7B,EACCgB,IADD,CACMC,QAAQ,IAAI;AACdP,MAAAA,QAAQ,CAACO,QAAQ,CAACC,IAAT,CAAc6B,KAAf,CAAR;AACH,KAHD,EAIC5B,KAJD,CAIOC,CAAC,IAAI;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,KAND;AAQAX,IAAAA,KAAK,CAACqB,GAAN,CAAWsB,IAAD,IAAQ;AAChBA,MAAAA,IAAI,CAACtB,GAAL;AACD,KAFD;AAID,GAjBD;;AAmBA,sBACE;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BAEI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACI;AAAK,UAAA,KAAK,EAAC,qBAAX;AAAA,iCACI;AAAM,YAAA,KAAK,EAAC,kBAAZ;AAA+B,YAAA,EAAE,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAQ,UAAA,KAAK,EAAC,cAAd;AAA6B,UAAA,QAAQ,EAAEP,gBAAvC;AAAA,oBAEIpB,SAAS,CAAC2B,GAAV,CAAcuB,MAAM,IAAI;AACpB,gCACA;AAAQ,cAAA,KAAK,EAAEA,MAAf;AAAA,8BAAyBA,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA;AAGH,WAJD;AAFJ;AAAA;AAAA;AAAA;AAAA,gBALJ,eAeI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,iCACI;AACA,YAAA,SAAS,EAAC,2BADV;AAEA,YAAA,IAAI,EAAC,QAFL;AAGA,YAAA,OAAO,EAAER,eAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eA4BI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACI;AAAK,UAAA,KAAK,EAAC,qBAAX;AAAA,iCACI;AAAM,YAAA,KAAK,EAAC,kBAAZ;AAA+B,YAAA,EAAE,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAQ,UAAA,KAAK,EAAC,cAAd;AAA6B,UAAA,QAAQ,EAAEnB,gBAAvC;AAAA,oBAEIb,MAAM,CAACiB,GAAP,CAAWuB,MAAM,IAAI;AACjB,gCACA;AAAQ,cAAA,KAAK,EAAEA,MAAf;AAAA,8BAAyBA,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA;AAGH,WAJD;AAFJ;AAAA;AAAA;AAAA;AAAA,gBALJ,eAeI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,iCACI;AACA,YAAA,SAAS,EAAC,2BADV;AAEA,YAAA,IAAI,EAAC,QAFL;AAGA,YAAA,OAAO,EAAEJ,eAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAwDE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BAEE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,KAAK,EAAE,OADT;AAEE,UAAA,MAAM,EAAE,OAFV;AAGE,UAAA,SAAS,EAAC,UAHZ;AAIE,UAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJV;AAKE,UAAA,IAAI,EAAE5C,cALR;AAME,UAAA,OAAO,EAAE;AACPiD,YAAAA,KAAK,EAAE;AADA;AANX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAcE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAxDF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiFH,CAzLD;;GAAMxD,Y;;KAAAA,Y;AA2LN,eAAeA,YAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect } from 'react';\nimport SalesDataService from '../services/sales.js' ;\nimport dayjs from 'dayjs' ;\n\nimport { Chart } from \"react-google-charts\";\n\nconst AnalyzeSales = (props) => {\n    // G1 : revenue from each all stores -> min & max = one graph has all stores\n\n    // G2 : percentage of different items sold from a given store\n     \n    const [store, setStore] = React.useState(\"\")\n    const [locations, setLocations] = React.useState([])\n    const [dataForPiePlot, setdataForPiePlot] = React.useState()\n    const [dataForBarChart, setDatForBarChart] = React.useState()\n    const [sales, setSales] = React.useState([])\n    const [month, setMonth] = React.useState(\"\")\n    const months = ['Jan', 'Feb','March','April','May','June','July','August','September','October','November','December'] \n        \n  useEffect(() => {\n    retrieveLocations();\n  }, []);\n\n    const retrieveLocations = () => {\n        SalesDataService.getStoreLocations()\n        .then(response => {\n        // console.log(response.data);\n        setLocations(response.data);\n        })\n        .catch(e => {\n        console.log(e);\n        });\n    }\n\n    const OnChangeSetStore = e => {\n        setStore(e.target.value)\n    }\n\n    const OnChangeSetMonth = e => {\n      setMonth(e.target.value)\n    }\n\n    const calculateQuantityItems = () => {\n               \n        var items = {}\n        // {'pencil':3, 'eraser':10}\n        var totalNumber = 0\n        // 13\n\n        sales.map(element => {\n\n            element.items.map(item => {\n              \n              items[item.name]=(items[item.name] ? items[item.name]+parseInt(item.quantity) : parseInt(item.quantity)) \n\n              totalNumber+=parseInt(item.quantity)\n            })\n\n        });\n\n        var ratios = [['Category','Quantity sold']]\n\n        var objectKeysArray = Object.keys(items)\n\n        objectKeysArray.forEach((objKey) => {\n            var objValue = items[objKey]\n            // objVal holds quantity of each item\n            var ration = [objKey, objValue]\n\n            ratios.push(ration)\n        })\n        \n        return ratios\n    }\n    \n    const DisplayPieChart = () => {\n        SalesDataService.find(store, \"location\")\n                .then(response => {\n                  \n                    setSales(response.data.Sales)\n                })\n                .catch(e => {\n                    console.log(e);\n                })\n        \n        const series = calculateQuantityItems()\n\n        setdataForPiePlot(series)\n\n    }\n\n    const DisplayBarChart = () => {\n      // choose a month\n\n      const monthIdx = months.findIndex(month) + 1 \n      \n      SalesDataService.find(store, \"location\")\n      .then(response => {        \n          setSales(response.data.Sales)\n      })\n      .catch(e => {\n          console.log(e);\n      })\n\n      sales.map((sale)=>{\n        sale.map\n      })\n\n    }\n\n    return (\n      <div>\n          <div className=\"row form\">            \n              \n              <div className=\"input-group mb-3\">\n                  <div class=\"input-group-prepend\">\n                      <span class=\"input-group-text\" id=\"basic-addon3\">@</span>\n                  </div>\n\n                  <select class=\"form-control\" onChange={OnChangeSetStore}>\n                      {\n                      locations.map(method => {\n                          return (\n                          <option value={method}> {method} </option>\n                          )\n                      })\n                      }\n                  </select>\n\n                  <div className=\"input-group-append\">\n                      <button\n                      className=\"btn btn-outline-secondary\"\n                      type=\"button\"\n                      onClick={DisplayPieChart}\n                      >\n                      Analyze\n                      </button>\n                  </div>\n              </div>\n\n              <div className=\"input-group mb-3\">\n                  <div class=\"input-group-prepend\">\n                      <span class=\"input-group-text\" id=\"basic-addon3\">Month</span>\n                  </div>\n\n                  <select class=\"form-control\" onChange={OnChangeSetMonth}>\n                      {\n                      months.map(method => {\n                          return (\n                          <option value={method}> {method} </option>\n                          )\n                      })\n                      }\n                  </select>\n\n                  <div className=\"input-group-append\">\n                      <button\n                      className=\"btn btn-outline-secondary\"\n                      type=\"button\"\n                      onClick={DisplayBarChart}\n                      >\n                      Analyze\n                      </button>\n                  </div>\n              </div>\n          </div>\n        \n        <div className=\"row\">\n\n          <div className=\"col\">\n            <Chart\n              width={'800px'}\n              height={'600px'}\n              chartType=\"PieChart\"\n              loader={<div>Loading Chart</div>}\n              data={dataForPiePlot}\n              options={{\n                title: 'Items and Sales',\n              }}\n            />\n          </div>\n          <div className=\"col\">\n            <Chart/>\n          </div>\n          \n        </div>\n\n      </div> \n    \n    );\n\n}\n\nexport default AnalyzeSales;\n\n\n// <div>\n// {\n//       {dataToPlot} ? \n//         <div><Chart\n//           width={'800px'}\n//           height={'600px'}\n//           chartType=\"PieChart\"\n//           loader={<div>Loading Chart</div>}\n//           data={dataToPlot}\n//           options={{\n//             title: 'Items and Sales',\n//           }}\n//         /></div>\n//       :\n//       <div>'Nothing to Dsiplay'</div>\n// }\n// </div>"]},"metadata":{},"sourceType":"module"}