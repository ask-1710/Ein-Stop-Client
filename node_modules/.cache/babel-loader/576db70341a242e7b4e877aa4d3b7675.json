{"ast":null,"code":"import http from \"../http-common\";\n\nclass SalesDataService {\n  getAll() {\n    let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return http.get(`/sales?page=${page}`);\n  }\n\n  find(query) {\n    let by = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"location\";\n    let page = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    return http.get(`sales?${by}=${query}&page=${page}`);\n  }\n\n  get(id) {\n    return http.get(`/sale/${id}`);\n  }\n\n  createSale(data) {\n    return http.post(\"/sale\", data);\n  }\n\n  deleteSale(id) {\n    return http.delete(`/sale/${id}`);\n  }\n\n  getPurchaseMethod() {\n    return http.get('/purchaseMethods');\n  }\n\n}\n\nexport default new SalesDataService();","map":{"version":3,"sources":["/home/aarthi/fitgit/react/einduch-shop/frontend/src/services/sales.js"],"names":["http","SalesDataService","getAll","page","get","find","query","by","id","createSale","data","post","deleteSale","delete","getPurchaseMethod"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,gBAAjB;;AAEA,MAAMC,gBAAN,CAAuB;AACrBC,EAAAA,MAAM,GAAW;AAAA,QAAVC,IAAU,uEAAH,CAAG;AACf,WAAOH,IAAI,CAACI,GAAL,CAAU,eAAcD,IAAK,EAA7B,CAAP;AACD;;AAEDE,EAAAA,IAAI,CAACC,KAAD,EAAmC;AAAA,QAA3BC,EAA2B,uEAAtB,UAAsB;AAAA,QAAVJ,IAAU,uEAAH,CAAG;AACrC,WAAOH,IAAI,CAACI,GAAL,CAAU,SAAQG,EAAG,IAAGD,KAAM,SAAQH,IAAK,EAA3C,CAAP;AACD;;AAEDC,EAAAA,GAAG,CAACI,EAAD,EAAK;AACN,WAAOR,IAAI,CAACI,GAAL,CAAU,SAAQI,EAAG,EAArB,CAAP;AACD;;AAEDC,EAAAA,UAAU,CAACC,IAAD,EAAO;AACf,WAAOV,IAAI,CAACW,IAAL,CAAU,OAAV,EAAmBD,IAAnB,CAAP;AACD;;AAEDE,EAAAA,UAAU,CAACJ,EAAD,EAAK;AACb,WAAOR,IAAI,CAACa,MAAL,CAAa,SAAQL,EAAG,EAAxB,CAAP;AACD;;AAEDM,EAAAA,iBAAiB,GAAG;AAClB,WAAOd,IAAI,CAACI,GAAL,CAAS,kBAAT,CAAP;AACD;;AAvBoB;;AA2BvB,eAAe,IAAIH,gBAAJ,EAAf","sourcesContent":["import http from \"../http-common\";\n\nclass SalesDataService {\n  getAll(page = 0) {\n    return http.get(`/sales?page=${page}`);\n  }\n\n  find(query, by = \"location\", page = 0) {\n    return http.get(`sales?${by}=${query}&page=${page}`);\n  } \n\n  get(id) {\n    return http.get(`/sale/${id}`);\n  }\n\n  createSale(data) {\n    return http.post(\"/sale\", data);\n  }\n\n  deleteSale(id) {\n    return http.delete(`/sale/${id}`);\n  }\n\n  getPurchaseMethod() { \n    return http.get('/purchaseMethods') ;\n  }\n\n}\n\nexport default new SalesDataService();"]},"metadata":{},"sourceType":"module"}