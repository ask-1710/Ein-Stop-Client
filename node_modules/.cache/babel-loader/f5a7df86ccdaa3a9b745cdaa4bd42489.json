{"ast":null,"code":"import http from \"../http-common\";\n\nclass SalesDataService {\n  getAll() {\n    let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return http.get(`/sales?page=${page}`);\n  }\n\n  find(query) {\n    let by = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"location\";\n    let page = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    return http.get(`/sales?${by}=${query}&page=${page}`);\n  }\n\n  findAll() {\n    let location = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"All\";\n    let purchaseMethod = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Any\";\n    let couponUsed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n    let page = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    queryLocation = location == \"All\" ? null : location;\n    queryPurchaseMethod = purchaseMethod;\n  }\n\n  get(id) {\n    return http.get(`/sale/${id}`);\n  }\n\n  createSale(data) {\n    return http.post(\"/sale\", data);\n  }\n\n  deleteSale(id) {\n    return http.delete(`/sale/${id}`);\n  }\n\n  getPurchaseMethod() {\n    return http.get('/purchaseMethods');\n  }\n\n  getStoreLocations() {\n    return http.get('/storeLocations');\n  }\n\n  getUnlimited(query, by) {\n    let page = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    return http.get(`/sales?${by}=${query}&page=${page}&SalesPerPage=1000`);\n  }\n\n}\n\nexport default new SalesDataService();","map":{"version":3,"sources":["/home/aarthi/fitgit/react/einduch-stop/frontend/src/services/sales.js"],"names":["http","SalesDataService","getAll","page","get","find","query","by","findAll","location","purchaseMethod","couponUsed","queryLocation","queryPurchaseMethod","id","createSale","data","post","deleteSale","delete","getPurchaseMethod","getStoreLocations","getUnlimited"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,gBAAjB;;AAEA,MAAMC,gBAAN,CAAuB;AACrBC,EAAAA,MAAM,GAAW;AAAA,QAAVC,IAAU,uEAAH,CAAG;AACf,WAAOH,IAAI,CAACI,GAAL,CAAU,eAAcD,IAAK,EAA7B,CAAP;AACD;;AAEDE,EAAAA,IAAI,CAACC,KAAD,EAAmC;AAAA,QAA3BC,EAA2B,uEAAtB,UAAsB;AAAA,QAAVJ,IAAU,uEAAH,CAAG;AACrC,WAAOH,IAAI,CAACI,GAAL,CAAU,UAASG,EAAG,IAAGD,KAAM,SAAQH,IAAK,EAA5C,CAAP;AACD;;AAEDK,EAAAA,OAAO,GAA8D;AAAA,QAA7DC,QAA6D,uEAApD,KAAoD;AAAA,QAA7CC,cAA6C,uEAA9B,KAA8B;AAAA,QAAvBC,UAAuB,uEAAZ,EAAY;AAAA,QAARR,IAAQ,uEAAH,CAAG;AACnES,IAAAA,aAAa,GAAIH,QAAQ,IAAE,KAAV,GAAgB,IAAhB,GAAqBA,QAAtC;AACAI,IAAAA,mBAAmB,GAAIH,cAAvB;AACD;;AAEDN,EAAAA,GAAG,CAACU,EAAD,EAAK;AACN,WAAOd,IAAI,CAACI,GAAL,CAAU,SAAQU,EAAG,EAArB,CAAP;AACD;;AAEDC,EAAAA,UAAU,CAACC,IAAD,EAAO;AACf,WAAOhB,IAAI,CAACiB,IAAL,CAAU,OAAV,EAAmBD,IAAnB,CAAP;AACD;;AAEDE,EAAAA,UAAU,CAACJ,EAAD,EAAK;AACb,WAAOd,IAAI,CAACmB,MAAL,CAAa,SAAQL,EAAG,EAAxB,CAAP;AACD;;AAEDM,EAAAA,iBAAiB,GAAG;AAClB,WAAOpB,IAAI,CAACI,GAAL,CAAS,kBAAT,CAAP;AACD;;AAEDiB,EAAAA,iBAAiB,GAAG;AAClB,WAAOrB,IAAI,CAACI,GAAL,CAAS,iBAAT,CAAP;AACD;;AAEDkB,EAAAA,YAAY,CAAChB,KAAD,EAAQC,EAAR,EAAoB;AAAA,QAARJ,IAAQ,uEAAH,CAAG;AAC9B,WAAOH,IAAI,CAACI,GAAL,CAAU,UAASG,EAAG,IAAGD,KAAM,SAAQH,IAAK,oBAA5C,CAAP;AACD;;AApCoB;;AA0CvB,eAAe,IAAIF,gBAAJ,EAAf","sourcesContent":["import http from \"../http-common\";\n\nclass SalesDataService {\n  getAll(page = 0) {\n    return http.get(`/sales?page=${page}`);\n  }\n\n  find(query, by = \"location\", page = 0) {\n    return http.get(`/sales?${by}=${query}&page=${page}`);\n  } \n\n  findAll(location=\"All\", purchaseMethod=\"Any\", couponUsed=\"\", page=0) {\n    queryLocation = (location==\"All\"?null:location)\n    queryPurchaseMethod = (purchaseMethod)\n  }\n\n  get(id) {\n    return http.get(`/sale/${id}`);\n  }\n\n  createSale(data) {\n    return http.post(\"/sale\", data);\n  }\n\n  deleteSale(id) {\n    return http.delete(`/sale/${id}`);\n  }\n\n  getPurchaseMethod() { \n    return http.get('/purchaseMethods') ;\n  }\n\n  getStoreLocations() {\n    return http.get('/storeLocations') ;\n  }\n\n  getUnlimited(query, by, page=0) {\n    return http.get(`/sales?${by}=${query}&page=${page}&SalesPerPage=1000`)\n  }\n\n  \n\n}\n\nexport default new SalesDataService();"]},"metadata":{},"sourceType":"module"}