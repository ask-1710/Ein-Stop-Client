{"ast":null,"code":"import _slicedToArray from\"/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import SalesDataService from'../../services/sales.js';import dayjs from'dayjs';import{Chart}from\"react-google-charts\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Graph3=function Graph3(props){var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),sales=_React$useState2[0],setSales=_React$useState2[1];var _React$useState3=React.useState(\"\"),_React$useState4=_slicedToArray(_React$useState3,2),month=_React$useState4[0],setMonth=_React$useState4[1];var _React$useState5=React.useState(\"\"),_React$useState6=_slicedToArray(_React$useState5,2),store=_React$useState6[0],setStore=_React$useState6[1];var _React$useState7=React.useState(null),_React$useState8=_slicedToArray(_React$useState7,2),dataForLineChart=_React$useState8[0],setdataForLineChart=_React$useState8[1];var _React$useState9=React.useState([]),_React$useState10=_slicedToArray(_React$useState9,2),locations=_React$useState10[0],setLocations=_React$useState10[1];var months=['Jan','Feb','March','April','May','June','July','Aug','Sept','Oct','Nov','Dec'];var _useState=useState(null),_useState2=_slicedToArray(_useState,2),noData=_useState2[0],setNoData=_useState2[1];var _useState3=useState('Jan'),_useState4=_slicedToArray(_useState3,2),monthToDisplay=_useState4[0],setMonthToDisplay=_useState4[1];var _useState5=useState('Austin'),_useState6=_slicedToArray(_useState5,2),storeToDisplay=_useState6[0],setStoreToDisplay=_useState6[1];useEffect(function(){retrieveLocations();},[]);var calculateTotalRevenue=function calculateTotalRevenue(items){// console.log(items) ;\nvar totalRevenue=0.0;items.map(function(item){totalRevenue+=parseInt(item.quantity)*item.price['$numberDecimal'];});return totalRevenue;};var DisplayLineChart=function DisplayLineChart(){// choose a month -> display line chart from that month      \nSalesDataService.getUnlimited(store,\"location\").then(function(response){setSales(response.data.Sales);}).catch(function(e){console.log(e);});var m=[[\"Date\",\"Revenue\"]];var monthlySaleExists=false;sales.map(function(sale){var date=dayjs(sale.saleDate).month();if(date===month){monthlySaleExists=true;var d=dayjs(sale.saleDate).date();var monthlyRevenue=calculateTotalRevenue(sale.items);var flag=0;for(var i=0;i<m.length;i++){if(m[i][0]===d){m[i][1]+=monthlyRevenue;flag=1;break;}}if(!flag){m.push([d,monthlyRevenue]);}}});if(!monthlySaleExists)setdataForLineChart(null);else{m.sort(function(a,b){return a[0]-b[0];});setdataForLineChart(m);}setStoreToDisplay(store);setMonthToDisplay(month);};var retrieveLocations=function retrieveLocations(){SalesDataService.getStoreLocations().then(function(response){// console.log(response.data);\nsetLocations(response.data);}).catch(function(e){console.log(e);});};// triggered setters\nvar OnChangeSetStore=function OnChangeSetStore(e){setStore(e.target.value);};var OnChangeSetMonth=function OnChangeSetMonth(e){console.log(e.target.value);for(var i=0;i<12;i++){if(months[i]===e.target.value){setMonth(i);return;}}return;};return/*#__PURE__*/_jsxs(\"div\",{className:\"wrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group mb-3 container\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"input-group-prepend\",children:/*#__PURE__*/_jsx(\"span\",{class:\"input-group-text bg-dark\",id:\"basic-addon1\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-white\",children:\"Store Location\"})})}),/*#__PURE__*/_jsx(\"select\",{class:\"form-control selectinput\",type:\"select\",onChange:OnChangeSetStore,children:locations.map(function(method){return/*#__PURE__*/_jsxs(\"option\",{value:method,children:[\" \",method,\" \"]});})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group mb-3 container\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"input-group-prepend\",children:/*#__PURE__*/_jsx(\"span\",{class:\"input-group-text bg-dark\",id:\"basic-addon4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-white\",children:\"Month\"})})}),/*#__PURE__*/_jsx(\"select\",{class:\"form-control selectinput\",type:\"select\",onChange:OnChangeSetMonth,children:months.map(function(method){return/*#__PURE__*/_jsxs(\"option\",{value:method,children:[\" \",method,\" \"]});})}),/*#__PURE__*/_jsx(\"div\",{className:\"input-group-append\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline-dark\",type:\"button\",onClick:DisplayLineChart,children:\"Analyze\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"row py-4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:dataForLineChart!=null?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{class:\"jumbotron jumbotron-fluid\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{class:\"display-6\",children:\"3. Monthly Revenue Chart for A store\"}),\" \"]})}),/*#__PURE__*/_jsx(Chart,{chartType:\"LineChart\",width:\"100%\",height:\"400px\",data:dataForLineChart,options:{title:\"Revenue in \".concat(storeToDisplay,\" in the month of \").concat(months[monthToDisplay]),legend:{position:\"bottom\"},hAxis:{format:'0',viewWindow:{min:0,max:31}}}})]}):noData?/*#__PURE__*/_jsx(\"div\",{class:\"jumbotron jumbotron-fluid\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{class:\"display-6\",children:\"3. Monthly Revenue Chart for A store\"}),/*#__PURE__*/_jsx(\"p\",{class:\"lead text-italics\",children:\"Select a Store and a Month\"})]})}):/*#__PURE__*/_jsx(\"div\",{class:\"jumbotron jumbotron-fluid\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{class:\"display-6\",children:\"3. Monthly Revenue Chart for A store\"}),/*#__PURE__*/_jsx(\"p\",{class:\"lead text-italics\",children:\"No data found :(\"})]})})})]});};export default Graph3;","map":{"version":3,"sources":["/home/aarthi/fitgit/react/einstop-sales-management-system/frontend/src/components/graphs/graph3.component.js"],"names":["React","useEffect","useState","SalesDataService","dayjs","Chart","Graph3","props","sales","setSales","month","setMonth","store","setStore","dataForLineChart","setdataForLineChart","locations","setLocations","months","noData","setNoData","monthToDisplay","setMonthToDisplay","storeToDisplay","setStoreToDisplay","retrieveLocations","calculateTotalRevenue","items","totalRevenue","map","item","parseInt","quantity","price","DisplayLineChart","getUnlimited","then","response","data","Sales","catch","e","console","log","m","monthlySaleExists","sale","date","saleDate","d","monthlyRevenue","flag","i","length","push","sort","a","b","getStoreLocations","OnChangeSetStore","target","value","OnChangeSetMonth","method","title","legend","position","hAxis","format","viewWindow","min","max"],"mappings":"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","sourcesContent":["import React, { useEffect , useState} from 'react';\nimport SalesDataService from '../../services/sales.js' ;\nimport dayjs from 'dayjs' ;\nimport { Chart } from \"react-google-charts\";\n\n\nconst Graph3 = props => {\n\n  const [sales, setSales] = React.useState([])\n  const [month, setMonth] = React.useState(\"\")\n  const [store, setStore] = React.useState(\"\")\n  const [dataForLineChart, setdataForLineChart] = React.useState(null)\n  const [locations, setLocations] = React.useState([])\n  const months = ['Jan', 'Feb','March','April','May','June','July','Aug','Sept','Oct','Nov','Dec'] \n  const [noData, setNoData] = useState(null)\n  const [monthToDisplay, setMonthToDisplay]=useState('Jan')\n  const [storeToDisplay, setStoreToDisplay]=useState('Austin')\n\n  useEffect(() => {\n    retrieveLocations();\n  }, []);\n  \n  const calculateTotalRevenue = (items) => {\n    // console.log(items) ;\n    var totalRevenue = 0.0\n    items.map(item => {\n      totalRevenue+=(parseInt(item.quantity)*item.price['$numberDecimal']) \n    })\n    return totalRevenue\n  }\n\n  const DisplayLineChart = () => {      \n    // choose a month -> display line chart from that month      \n    SalesDataService.getUnlimited(store, \"location\")\n    .then(response => {        \n        setSales(response.data.Sales)\n    })\n    .catch(e => {\n        console.log(e);\n    })\n\n    var m = [[\"Date\",\"Revenue\"]]\n    var monthlySaleExists = false \n    sales.map((sale)=>{\n      const date = dayjs(sale.saleDate).month()\n      if(date === month) {\n        monthlySaleExists = true ;\n        const d = dayjs(sale.saleDate).date()\n        const monthlyRevenue = calculateTotalRevenue(sale.items) \n        \n        var flag = 0\n        for(var i=0;i<m.length;i++) {\n          if(m[i][0] === d) {\n            m[i][1]+=monthlyRevenue\n            flag = 1\n            break\n          }\n        }\n        if(!flag) {\n          m.push([d,monthlyRevenue])\n        }\n      }\n    })\n    if(!monthlySaleExists)\n      setdataForLineChart(null)\n    else {\n      m.sort((a,b)=>a[0]-b[0])\n      setdataForLineChart(m)\n    }\n\n    setStoreToDisplay(store)\n    setMonthToDisplay(month)\n\n  }\n\n  const retrieveLocations = () => {\n      SalesDataService.getStoreLocations()\n      .then(response => {\n      // console.log(response.data);\n      setLocations(response.data);\n      })\n      .catch(e => {\n      console.log(e);\n      });\n  }\n  // triggered setters\n  const OnChangeSetStore = e => {\n      setStore(e.target.value)\n  }\n\n  const OnChangeSetMonth = e => {\n    console.log(e.target.value)\n    for(var i=0;i<12;i++){\n      if(months[i] === e.target.value) {\n        setMonth(i) \n        return  \n      }\n    }\n    return \n  }\n\n    return (\n        <div className='wrapper'>\n            <div className=\"input-group mb-3 container\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text bg-dark\" id=\"basic-addon1\"><div className='text-white'>Store Location</div></span>\n                    </div>\n                    <select class=\"form-control selectinput\" type='select' onChange={OnChangeSetStore}>\n                    {\n                        locations.map(method => {\n                            return (\n                            <option value={method}> {method} </option>\n                            )\n                        })\n                    }\n                    </select>\n            </div>\n            <div className=\"input-group mb-3 container\">\n                <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text bg-dark\" id=\"basic-addon4\"><div className='text-white'>Month</div></span>\n                </div>\n\n                <select class=\"form-control selectinput\" type='select' onChange={OnChangeSetMonth}>\n                    {\n                    months.map(method => {\n                        return (\n                        <option value={method}> {method} </option>\n                        )\n                    })\n                    }\n                </select>\n\n                <div className=\"input-group-append\">\n                    <button\n                    className=\"btn btn-outline-dark\"\n                    type=\"button\"\n                    onClick={DisplayLineChart}\n                    >\n                    Analyze\n                    </button>\n                </div>\n            </div>\n            <div className='row py-4'></div>\n            <div className='container'>\n            {\n            dataForLineChart!=null ?(\n              <div>\n              <div class=\"jumbotron jumbotron-fluid\">\n              <div class=\"container\">\n                  <h1 class=\"display-6\">3. Monthly Revenue Chart for A store</h1> </div></div>  \n                  <Chart\n                  chartType=\"LineChart\"\n                  width=\"100%\"\n                  height=\"400px\"\n                  data={dataForLineChart}\n                  options={{\n                      title: `Revenue in ${storeToDisplay} in the month of ${months[monthToDisplay]}`,\n                      legend: { position: \"bottom\" },\n                      hAxis: {format: '0',\n                              viewWindow: {\n                                min: 0,\n                                max: 31\n                              }\n                            }\n                  }}\n                  /> \n              </div>\n            ):\n             noData ? (\n              <div class=\"jumbotron jumbotron-fluid\">\n              <div class=\"container\">\n                  <h1 class=\"display-6\">3. Monthly Revenue Chart for A store</h1>\n                  <p class=\"lead text-italics\">Select a Store and a Month</p>\n              </div>\n              </div> \n              ) : (\n                <div class=\"jumbotron jumbotron-fluid\">\n                <div class=\"container\">\n                    <h1 class=\"display-6\">3. Monthly Revenue Chart for A store</h1>\n                    <p class=\"lead text-italics\">No data found :(</p>\n                </div>\n                </div> \n              )\n            }\n            </div>\n        </div>\n    )\n}\n\nexport default Graph3"]},"metadata":{},"sourceType":"module"}