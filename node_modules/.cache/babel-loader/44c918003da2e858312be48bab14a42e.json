{"ast":null,"code":"var _jsxFileName = \"/home/aarthi/fitgit/react/einduch-stop/frontend/src/components/graphs/graph4.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport SalesDataService from '../../services/sales.js';\nimport dayjs from 'dayjs';\nimport { Chart } from \"react-google-charts\";\nimport { Link, Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Graph4 = props => {\n  _s();\n\n  const [dataForBarChart, setdataForBarChart] = React.useState(null);\n  const [sales, setSales] = React.useState([]);\n  const [month, setMonth] = React.useState(\"\");\n  const months = ['Jan', 'Feb', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const [queryItem, setItem] = React.useState('');\n  const [queryYear, setQueryYear] = React.useState();\n  const [dataForAnnualPie, setDataForAnnualPie] = React.useState(null);\n\n  const OnChangeSetYear = e => {\n    setQueryYear(e.target.value);\n  };\n\n  const calculateTotalRevenue = items => {\n    // console.log(items) ;\n    var totalRevenue = 0.0;\n    items.map(item => {\n      totalRevenue += parseInt(item.quantity) * item.price['$numberDecimal'];\n    });\n    return totalRevenue;\n  };\n\n  const DisplayPieForRevenueChart = () => {\n    // as pie chart comparing all stores\n    SalesDataService.getUnlimited().then(response => {\n      setSales(response.data.Sales);\n    }).catch(e => {\n      console.log(e);\n    });\n    var m = [[\"Store\", \"Annual Revenue\"]];\n    sales.map(sale => {\n      const year = dayjs(sale.saleDate).year();\n\n      if (year == queryYear) {\n        const annualRevenue = calculateTotalRevenue(sale.items);\n        var flag = 0;\n\n        for (var i = 1; i < m.length; i++) {\n          if (m[i][0] === sale.storeLocation) {\n            m[i][1] += annualRevenue;\n            flag = 1;\n            break;\n          }\n        }\n\n        if (!flag) {\n          m.push([sale.storeLocation, annualRevenue]);\n        }\n      }\n    });\n    setDataForAnnualPie(m);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper App container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.dataForBarChart != null ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"jumbotron jumbotron-fluid\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              class: \"display-6\",\n              children: \"4. Comparison of product demand in stores\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          chartType: \"BarChart\",\n          width: \"100%\",\n          height: \"400px\",\n          data: dataForBarChart,\n          options: {\n            title: `Demand for ${queryItem}`,\n            curveType: \"function\",\n            legend: {\n              position: \"bottom\"\n            },\n            hAxis: {\n              title: `Total Sales of ${queryItem}`,\n              minValue: 0\n            },\n            vAxis: {\n              title: \"City\"\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 45\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"jumbotron jumbotron-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            class: \"display-6\",\n            children: \"4. Comparison of product demand in stores\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"lead text-italics\",\n            children: \"Enter an Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Graph4, \"aNQAklP5TfXpcBbnKouUB1eUIpg=\");\n\n_c = Graph4;\nexport default Graph4;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph4\");","map":{"version":3,"sources":["/home/aarthi/fitgit/react/einduch-stop/frontend/src/components/graphs/graph4.component.js"],"names":["React","useEffect","SalesDataService","dayjs","Chart","Link","Routes","Route","Graph4","props","dataForBarChart","setdataForBarChart","useState","sales","setSales","month","setMonth","months","queryItem","setItem","queryYear","setQueryYear","dataForAnnualPie","setDataForAnnualPie","OnChangeSetYear","e","target","value","calculateTotalRevenue","items","totalRevenue","map","item","parseInt","quantity","price","DisplayPieForRevenueChart","getUnlimited","then","response","data","Sales","catch","console","log","m","sale","year","saleDate","annualRevenue","flag","i","length","storeLocation","push","title","curveType","legend","position","hAxis","minValue","vAxis"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport SalesDataService from '../../services/sales.js' ;\nimport dayjs from 'dayjs' ;\nimport { Chart } from \"react-google-charts\";\nimport {Link,Routes,Route} from 'react-router-dom';\n\nconst Graph4 = props => {   \n  \n  const [dataForBarChart, setdataForBarChart] = React.useState(null)\n  const [sales, setSales] = React.useState([])\n  const [month, setMonth] = React.useState(\"\")\n  const months = ['Jan', 'Feb','March','April','May','June','July','August','September','October','November','December'] \n  const [queryItem, setItem] = React.useState('')\n  const [queryYear, setQueryYear] = React.useState()\n  const [dataForAnnualPie, setDataForAnnualPie] = React.useState(null)\n\n  const OnChangeSetYear = e => {\n    setQueryYear(e.target.value)\n  }\n   \n  const calculateTotalRevenue = (items) => {\n    // console.log(items) ;\n    var totalRevenue = 0.0\n    items.map(item => {\n      totalRevenue+=(parseInt(item.quantity)*item.price['$numberDecimal']) \n    })\n    return totalRevenue\n  }\n\n\n  const DisplayPieForRevenueChart = () => {\n    // as pie chart comparing all stores\n    SalesDataService.getUnlimited()\n    .then(response => {       \n        setSales(response.data.Sales)\n    })\n    .catch(e => {\n        console.log(e);\n    })\n\n    var m = [[\"Store\",\"Annual Revenue\"]]\n    \n    sales.map((sale)=>{\n      const year = dayjs(sale.saleDate).year()\n      if(year == queryYear) {\n        const annualRevenue = calculateTotalRevenue(sale.items) \n        \n        var flag = 0\n        for(var i=1;i<m.length;i++) {\n          if(m[i][0] === sale.storeLocation) {\n            m[i][1]+=annualRevenue\n            flag = 1\n            break\n          }\n        }\n        if(!flag) {\n          m.push([sale.storeLocation, annualRevenue])\n        }\n      }\n    })\n\n    setDataForAnnualPie(m)\n  }\n\n\n    return (\n      <div className='wrapper App container'>\n          \n        <div>\n            {\n              props.dataForBarChart!=null?( <div>\n                <div class=\"jumbotron jumbotron-fluid\">\n                <div class=\"container\">\n                <h1 class=\"display-6\">4. Comparison of product demand in stores</h1>\n                </div></div>                \n                <Chart\n                  chartType=\"BarChart\"\n                  width=\"100%\"\n                  height=\"400px\"\n                  data={dataForBarChart}\n                  options={{\n                    title: `Demand for ${queryItem}`,\n                    curveType: \"function\",\n                    legend: { position: \"bottom\" } ,\n                    hAxis: {\n                      title: `Total Sales of ${queryItem}`,\n                      minValue: 0,\n                    },\n                    vAxis: {\n                      title: \"City\",\n                    },\n                  }}\n                /> \n                </div>) :\n                <div class=\"jumbotron jumbotron-fluid\">\n                  <div class=\"container\">\n                    <h1 class=\"display-6\">4. Comparison of product demand in stores</h1>\n                    <p class=\"lead text-italics\">Enter an Item</p>\n                  </div>\n                </div>\n            }\n        </div>\n      </div>\n        \n    )\n}\n\nexport default Graph4"]},"metadata":{},"sourceType":"module"}