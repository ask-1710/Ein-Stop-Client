{"ast":null,"code":"import SalesDataService from './sales.js';\n\nclass SalesAnalysisDataService {\n  constructor() {\n    this.calculateQuantityItems = store => {\n      var items = {}; // {'pencil':3, 'eraser':10}\n\n      var totalNumber = 0; // 13\n\n      sales.map(element => {\n        element.items.map(item => {\n          items[item.name] = items[item.name] ? items[item.name] + parseInt(item.quantity) : parseInt(item.quantity);\n          totalNumber += parseInt(item.quantity);\n        });\n      });\n      var ratios = [['Category', 'Quantity sold']];\n      var objectKeysArray = Object.keys(items);\n      objectKeysArray.forEach(objKey => {\n        var objValue = items[objKey]; // objVal holds quantity of each item\n\n        var ration = [objKey, objValue];\n        ratios.push(ration);\n      });\n      return ratios;\n    };\n  }\n\n} // var minRange = 999999999\n// var maxRange = 0\n// sales.forEach(element => {\n//     totalAmount = 0.0\n//     element.items.forEach(item => {\n//         totalAmount+=(parseInt(item.price) * parseInt(item.quantity)) ;\n//     })\n//     minRange = (minRange>totalAmount?totalAmount:minRange)\n//     maxRange = (maxRange<totalAmount?totalAmount:maxRange)\n// });\n\n\nexport default new SalesAnalysisDataService();","map":{"version":3,"sources":["/home/aarthi/fitgit/react/einduch-stop/frontend/src/services/analyze.js"],"names":["SalesDataService","SalesAnalysisDataService","calculateQuantityItems","store","items","totalNumber","sales","map","element","item","name","parseInt","quantity","ratios","objectKeysArray","Object","keys","forEach","objKey","objValue","ration","push"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,YAA7B;;AAEA,MAAMC,wBAAN,CAA+B;AAAA;AAAA,SAE3BC,sBAF2B,GAEDC,KAAD,IAAW;AAEhC,UAAIC,KAAK,GAAG,EAAZ,CAFgC,CAGhC;;AACA,UAAIC,WAAW,GAAG,CAAlB,CAJgC,CAKhC;;AAEAC,MAAAA,KAAK,CAACC,GAAN,CAAUC,OAAO,IAAI;AAEjBA,QAAAA,OAAO,CAACJ,KAAR,CAAcG,GAAd,CAAkBE,IAAI,IAAI;AAExBL,UAAAA,KAAK,CAACK,IAAI,CAACC,IAAN,CAAL,GAAkBN,KAAK,CAACK,IAAI,CAACC,IAAN,CAAL,GAAmBN,KAAK,CAACK,IAAI,CAACC,IAAN,CAAL,GAAiBC,QAAQ,CAACF,IAAI,CAACG,QAAN,CAA5C,GAA8DD,QAAQ,CAACF,IAAI,CAACG,QAAN,CAAxF;AAEAP,UAAAA,WAAW,IAAEM,QAAQ,CAACF,IAAI,CAACG,QAAN,CAArB;AACD,SALD;AAOH,OATD;AAWA,UAAIC,MAAM,GAAG,CAAC,CAAC,UAAD,EAAY,eAAZ,CAAD,CAAb;AAEA,UAAIC,eAAe,GAAGC,MAAM,CAACC,IAAP,CAAYZ,KAAZ,CAAtB;AAEAU,MAAAA,eAAe,CAACG,OAAhB,CAAyBC,MAAD,IAAY;AAChC,YAAIC,QAAQ,GAAGf,KAAK,CAACc,MAAD,CAApB,CADgC,CAEhC;;AACA,YAAIE,MAAM,GAAG,CAACF,MAAD,EAASC,QAAT,CAAb;AAEAN,QAAAA,MAAM,CAACQ,IAAP,CAAYD,MAAZ;AACH,OAND;AAQA,aAAOP,MAAP;AACH,KAjC0B;AAAA;;AAAA,C,CAqC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe,IAAIZ,wBAAJ,EAAf","sourcesContent":["import SalesDataService from './sales.js' ;\n\nclass SalesAnalysisDataService {\n\n    calculateQuantityItems = (store) => {\n               \n        var items = {}\n        // {'pencil':3, 'eraser':10}\n        var totalNumber = 0\n        // 13\n\n        sales.map(element => {\n\n            element.items.map(item => {\n              \n              items[item.name]=(items[item.name] ? items[item.name]+parseInt(item.quantity) : parseInt(item.quantity)) \n\n              totalNumber+=parseInt(item.quantity)\n            })\n\n        });\n\n        var ratios = [['Category','Quantity sold']]\n\n        var objectKeysArray = Object.keys(items)\n\n        objectKeysArray.forEach((objKey) => {\n            var objValue = items[objKey]\n            // objVal holds quantity of each item\n            var ration = [objKey, objValue]\n\n            ratios.push(ration)\n        })\n        \n        return ratios\n    }\n    \n}\n   \n// var minRange = 999999999\n// var maxRange = 0\n// sales.forEach(element => {\n//     totalAmount = 0.0\n//     element.items.forEach(item => {\n//         totalAmount+=(parseInt(item.price) * parseInt(item.quantity)) ;\n//     })\n//     minRange = (minRange>totalAmount?totalAmount:minRange)\n//     maxRange = (maxRange<totalAmount?totalAmount:maxRange)\n// });\nexport default new SalesAnalysisDataService();"]},"metadata":{},"sourceType":"module"}