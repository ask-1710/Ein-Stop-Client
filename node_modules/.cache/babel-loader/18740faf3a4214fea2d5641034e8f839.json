{"ast":null,"code":"var _jsxFileName = \"/home/aarthi/fitgit/react/einduch-stop/frontend/src/components/analyze.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport SalesDataService from '../services/sales.js'; // import SalesAnalysisDataService from '../services/analyze.js' ;\n\nimport { Chart, ChartSeries, ChartSeriesItem, ChartCategoryAxis, ChartCategoryAxisItem, ChartTitle, ChartLegend } from '@progress/kendo-react-charts';\nimport \"hammerjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnalyzeSales = props => {\n  _s();\n\n  // G1 : revenue from each all stores -> min & max = one graph has all stores\n  // G2 : percentage of different items sold from a given store\n  const [store, setStore] = React.useState(\"\");\n  const [locations, setLocations] = React.useState([]);\n  const [dataToPlot, setdataToPlot] = React.useState();\n  const [sales, setSales] = React.useState();\n  useEffect(() => {\n    retrieveLocations();\n  }, []);\n\n  const retrieveLocations = () => {\n    SalesDataService.getStoreLocations().then(response => {\n      // console.log(response.data);\n      setLocations(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const OnChangeSetStore = e => {\n    setStore(e.target.value);\n  };\n\n  const labelContent = props => {\n    let formatedNumber = Number(props.dataItem.value).toLocaleString(undefined, {\n      style: \"percent\",\n      minimumFractionDigits: 2\n    });\n    return `${props.dataItem.category} item: ${formatedNumber}`;\n  };\n\n  const ChartContainer = () => /*#__PURE__*/_jsxDEV(Chart, {\n    children: [/*#__PURE__*/_jsxDEV(ChartTitle, {\n      text: \"Ratios of Items Sold\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ChartLegend, {\n      position: \"bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ChartSeries, {\n      children: /*#__PURE__*/_jsxDEV(ChartSeriesItem, {\n        type: \"pie\",\n        data: dataToPlot,\n        field: \"value\",\n        categoryField: \"category\",\n        labels: {\n          visible: true,\n          content: labelContent\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n\n  const calculateRatioItems = () => {\n    var items = {}; // {'pencil':3, 'eraser':10}\n\n    var totalNumber = 0; // 13\n\n    sales.map(element => {\n      element.items.map(item => {\n        var itemNames = Object.keys(items);\n        var contains = itemNames.some(x => x.hasOwnProperty(item.name));\n\n        if (contains) {\n          items[item.name] += parseInt(item.quantity);\n        } else {\n          items[item.name] = parseInt(item.quantity);\n        }\n\n        totalNumber += parseInt(item.quantity);\n      });\n    });\n    var ratios = [];\n    var objectKeysArray = Object.keys(items);\n    objectKeysArray.forEach(objKey => {\n      var objValue = items[objKey]; // objVal holds quantity of each item\n\n      var ratio = objValue / totalNumber;\n      var newJsonObject = {\n        'category': objKey,\n        'value': ratio\n      };\n      ratios.push(newJsonObject);\n    });\n    return ratios;\n  };\n\n  const DisplayPieChart = e => {\n    SalesDataService.find(store, \"location\").then(response => {\n      setSales(response.data.Sales);\n    }).catch(e => {\n      console.log(e);\n    }); // const series = calculateRatioItems()\n    // setdataToPlot(series)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-group-prepend\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"input-group-text\",\n            id: \"basic-addon3\",\n            children: \"@\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          class: \"form-control\",\n          onChange: OnChangeSetStore,\n          children: locations.map(method => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: method,\n              children: [\" \", method, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group-append\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary\",\n            type: \"button\",\n            onClick: DisplayPieChart,\n            children: \"Analyze\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: sales.map(sale => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-4 pb-1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: sale.storeLocation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Customer :  \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this), sale.customer.email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 71\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Ratings : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this), sale.customer.satisfaction, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 76\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Purchase Method : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, this), sale.purchaseMethod, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 77\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Coupon Used :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this), sale.couponUsed ? \" YES\" : \" NO\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 22\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AnalyzeSales, \"sqSdnrII1FmXwzadPxGKpw/46vE=\");\n\n_c = AnalyzeSales;\nexport default AnalyzeSales;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnalyzeSales\");","map":{"version":3,"sources":["/home/aarthi/fitgit/react/einduch-stop/frontend/src/components/analyze.js"],"names":["React","useEffect","SalesDataService","Chart","ChartSeries","ChartSeriesItem","ChartCategoryAxis","ChartCategoryAxisItem","ChartTitle","ChartLegend","AnalyzeSales","props","store","setStore","useState","locations","setLocations","dataToPlot","setdataToPlot","sales","setSales","retrieveLocations","getStoreLocations","then","response","data","catch","e","console","log","OnChangeSetStore","target","value","labelContent","formatedNumber","Number","dataItem","toLocaleString","undefined","style","minimumFractionDigits","category","ChartContainer","visible","content","calculateRatioItems","items","totalNumber","map","element","item","itemNames","Object","keys","contains","some","x","hasOwnProperty","name","parseInt","quantity","ratios","objectKeysArray","forEach","objKey","objValue","ratio","newJsonObject","push","DisplayPieChart","find","Sales","method","sale","storeLocation","customer","email","satisfaction","purchaseMethod","couponUsed"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport SalesDataService from '../services/sales.js' ;\n// import SalesAnalysisDataService from '../services/analyze.js' ;\nimport {\n    Chart,\n    ChartSeries,\n    ChartSeriesItem,\n    ChartCategoryAxis,\n    ChartCategoryAxisItem,\n    ChartTitle,\n    ChartLegend\n} from '@progress/kendo-react-charts';\nimport \"hammerjs\";\n\nconst AnalyzeSales = (props) => {\n    // G1 : revenue from each all stores -> min & max = one graph has all stores\n\n    // G2 : percentage of different items sold from a given store\n     \n    const [store, setStore] = React.useState(\"\")\n    const [locations, setLocations] = React.useState([])\n    const [dataToPlot, setdataToPlot] = React.useState()\n    const [sales, setSales] = React.useState()\n    \n  useEffect(() => {\n    retrieveLocations();\n  }, []);\n\n    const retrieveLocations = () => {\n        SalesDataService.getStoreLocations()\n        .then(response => {\n        // console.log(response.data);\n        setLocations(response.data);\n        })\n        .catch(e => {\n        console.log(e);\n        });\n    }\n\n    const OnChangeSetStore = e => {\n        setStore(e.target.value)\n    }\n\n    const labelContent = (props) => {\n        let formatedNumber = Number(props.dataItem.value).toLocaleString(undefined, {\n          style: \"percent\",\n          minimumFractionDigits: 2,\n        });\n        return `${props.dataItem.category} item: ${formatedNumber}`;\n      };\n      \n      const ChartContainer = () => (\n        <Chart>\n          <ChartTitle text=\"Ratios of Items Sold\" />\n          <ChartLegend position=\"bottom\" />\n          <ChartSeries>\n            <ChartSeriesItem\n              type=\"pie\"\n              data={dataToPlot}\n              field=\"value\"\n              categoryField=\"category\"\n              labels={{ visible: true, content: labelContent }}\n            />\n          </ChartSeries>\n        </Chart>\n      );\n\n      const calculateRatioItems = () => {\n               \n        var items = {}\n        // {'pencil':3, 'eraser':10}\n        var totalNumber = 0\n        // 13\n\n        sales.map(element => {\n\n            element.items.map(item => {\n              var itemNames = Object.keys(items) ;\n              var contains = itemNames.some(x => x.hasOwnProperty(item.name)) ;\n\n                if(contains) {                  \n                    items[item.name]+=parseInt(item.quantity)\n                } else {\n                    items[item.name]=parseInt(item.quantity)\n                }\n\n                totalNumber+=parseInt(item.quantity)\n            })\n\n        });\n\n        var ratios = []\n\n        var objectKeysArray = Object.keys(items)\n\n        objectKeysArray.forEach((objKey) => {\n            var objValue = items[objKey]\n            // objVal holds quantity of each item\n            var ratio = objValue/totalNumber\n            var newJsonObject = {\n                'category': objKey,\n                'value': ratio\n            }\n            ratios.push(newJsonObject)\n        })\n\n        return ratios\n    }\n    \n      const DisplayPieChart = (e) => {\n        SalesDataService.find(store, \"location\")\n                .then(response => {\n                    setSales(response.data.Sales)\n                })\n                .catch(e => {\n                    console.log(e);\n                })\n        \n        // const series = calculateRatioItems()\n\n        // setdataToPlot(series)\n        \n    }\n\n      return (\n        <div>\n            <div className=\"row form\">            \n                <div className=\"input-group mb-3\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\" id=\"basic-addon3\">@</span>\n                    </div>\n\n                    <select class=\"form-control\" onChange={OnChangeSetStore}>\n                        {\n                        locations.map(method => {\n                            return (\n                            <option value={method}> {method} </option>\n                            )\n                        })\n                        }\n                    </select>\n\n                    <div className=\"input-group-append\">\n                        <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={DisplayPieChart}\n                        >\n                        Analyze\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n\n\n<div className=\"row\">\n        {\n        \n        sales.map((sale) => {\n          return (\n            <div className=\"col-lg-4 pb-1\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{sale.storeLocation}</h5>\n                  <p className=\"card-text\">\n                    <strong>Customer :  </strong>{sale.customer.email}<br/>\n                    <strong>Ratings : </strong>{sale.customer.satisfaction}<br/>\n                    <strong>Purchase Method : </strong>{sale.purchaseMethod}<br/>\n                    <strong>Coupon Used :</strong>{\n                      sale.couponUsed?\" YES\":\" NO\"\n                    }<br/>\n                  </p>\n                  {/* <div className=\"row\">\n                  <Link to={\"/sales/\"+sale._id} className=\"btn btn-primary col-lg-5 mx-1 mb-1\">\n                    View Reviews\n                  </Link>\n                  <a target=\"_blank\" href={\"https://www.google.com/maps/place/\" + address} className=\"btn btn-primary col-lg-5 mx-1 mb-1\">View Map</a>\n                  </div> */}\n                </div>\n              </div>\n            </div>\n          );\n        })\n        \n        }\n        </div>\n\n         </div> \n      \n      );\n\n}\n\nexport default AnalyzeSales;\n"]},"metadata":{},"sourceType":"module"}