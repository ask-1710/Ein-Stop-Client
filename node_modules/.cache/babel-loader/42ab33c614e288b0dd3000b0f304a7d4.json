{"ast":null,"code":"import SalesDataService from './sales.js';\n\nclass SalesAnalysisDataService {\n  calculateRatioItems(store) {\n    // var sales\n    // SalesDataService.find(store, \"location\")\n    //         .then(response => {\n    //             sales = response.data.Sales ;\n    //         })\n    //         .catch(e => {\n    //             console.log(e);\n    //         })\n    // var items = {}\n    // // {'pencil':3, 'eraser':10}\n    // var totalNumber = 0\n    // // 13\n    // sales.forEach(element => {\n    //     element.items.forEach(item => {\n    //         if(Object.keys(items).some(x => x.hasOwnProperty(item.name))) {\n    //             items[item.name]+=parseInt(item.quantity)\n    //         } else {\n    //             items[item.name]=parseInt(item.quantity)\n    //         }\n    //         totalNumber+=parseInt(item.quantity)\n    //     })\n    // });\n    // var ratios = []\n    // var objectKeysArray = Object.keys(items)\n    // objectKeysArray.forEach((objKey) => {\n    //     var objValue = items[objKey]\n    //     // objVal holds quantity of each item\n    //     var ratio = objValue/totalNumber\n    //     var newJsonObject = {\n    //         'category': objKey,\n    //         'value': ratio\n    //     }\n    //     ratios.push(newJsonObject)\n    // })\n    return 'Hello World';\n  }\n\n} // var minRange = 999999999\n// var maxRange = 0\n// sales.forEach(element => {\n//     totalAmount = 0.0\n//     element.items.forEach(item => {\n//         totalAmount+=(parseInt(item.price) * parseInt(item.quantity)) ;\n//     })\n//     minRange = (minRange>totalAmount?totalAmount:minRange)\n//     maxRange = (maxRange<totalAmount?totalAmount:maxRange)\n// });\n\n\nexport default new SalesAnalysisDataService();","map":{"version":3,"sources":["/home/aarthi/fitgit/react/einduch-shop/frontend/src/services/analyze.js"],"names":["SalesDataService","SalesAnalysisDataService","calculateRatioItems","store"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,YAA7B;;AAEA,MAAMC,wBAAN,CAA+B;AAE3BC,EAAAA,mBAAmB,CAACC,KAAD,EAAQ;AAEvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,WAAO,aAAP;AACH;;AA/C0B,C,CAmD/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe,IAAIF,wBAAJ,EAAf","sourcesContent":["import SalesDataService from './sales.js' ;\n\nclass SalesAnalysisDataService {\n    \n    calculateRatioItems(store) {\n\n        // var sales\n\n        // SalesDataService.find(store, \"location\")\n        //         .then(response => {\n        //             sales = response.data.Sales ;\n        //         })\n        //         .catch(e => {\n        //             console.log(e);\n        //         })\n                \n        // var items = {}\n        // // {'pencil':3, 'eraser':10}\n        // var totalNumber = 0\n        // // 13\n\n        // sales.forEach(element => {\n        //     element.items.forEach(item => {\n        //         if(Object.keys(items).some(x => x.hasOwnProperty(item.name))) {\n        //             items[item.name]+=parseInt(item.quantity)\n        //         } else {\n        //             items[item.name]=parseInt(item.quantity)\n        //         }\n        //         totalNumber+=parseInt(item.quantity)\n        //     })\n        // });\n\n        // var ratios = []\n\n        // var objectKeysArray = Object.keys(items)\n\n        // objectKeysArray.forEach((objKey) => {\n        //     var objValue = items[objKey]\n        //     // objVal holds quantity of each item\n        //     var ratio = objValue/totalNumber\n        //     var newJsonObject = {\n        //         'category': objKey,\n        //         'value': ratio\n        //     }\n        //     ratios.push(newJsonObject)\n        // })\n\n                \n        return 'Hello World' \n    }\n\n}\n\n// var minRange = 999999999\n// var maxRange = 0\n// sales.forEach(element => {\n//     totalAmount = 0.0\n//     element.items.forEach(item => {\n//         totalAmount+=(parseInt(item.price) * parseInt(item.quantity)) ;\n//     })\n//     minRange = (minRange>totalAmount?totalAmount:minRange)\n//     maxRange = (maxRange<totalAmount?totalAmount:maxRange)\n// });\nexport default new SalesAnalysisDataService();"]},"metadata":{},"sourceType":"module"}