{"ast":null,"code":"var _jsxFileName = \"/home/aarthi/fitgit/react/einduch-stop/frontend/src/components/analyze.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport SalesDataService from '../services/sales.js';\nimport dayjs from 'dayjs';\nimport { Chart } from \"react-google-charts\";\nimport Login from './login.js';\nimport { Link, Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnalyzeSales = props => {\n  _s();\n\n  // G1 : revenue from each all stores -> min & max = one graph has all stores \n  // G2 : percentage of different items sold from a given store - DONE\n  const [store, setStore] = React.useState(\"\");\n  const [locations, setLocations] = React.useState([]);\n  const [dataForPiePlot, setdataForPiePlot] = React.useState(null);\n  const [dataForLineChart, setdataForLineChart] = React.useState(null);\n  const [dataForBarChart, setdataForBarChart] = React.useState(null);\n  const [sales, setSales] = React.useState([]);\n  const [month, setMonth] = React.useState(\"\");\n  const months = ['Jan', 'Feb', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const [queryItem, setItem] = React.useState('');\n  const [queryYear, setQueryYear] = React.useState();\n  const [dataForAnnualPie, setDataForAnnualPie] = React.useState(null);\n  useEffect(() => {\n    retrieveLocations();\n  }, []);\n\n  const retrieveLocations = () => {\n    SalesDataService.getStoreLocations().then(response => {\n      // console.log(response.data);\n      setLocations(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }; // triggered setters\n\n\n  const OnChangeSetStore = e => {\n    setStore(e.target.value);\n  };\n\n  const OnChangeSetMonth = e => {\n    console.log(e.target.value);\n\n    for (var i = 0; i < 12; i++) {\n      if (months[i] === e.target.value) {\n        setMonth(i);\n        return;\n      }\n    }\n\n    return;\n  };\n\n  const OnChangeSetItem = e => {\n    setItem(e.target.value.toLowerCase());\n  };\n\n  const OnChangeSetYear = e => {\n    setQueryYear(e.target.value);\n  }; // helper functions\n\n\n  const calculateQuantityItems = () => {\n    var items = {}; // {'pencil':3, 'eraser':10}\n    // 13\n\n    sales.map(element => {\n      element.items.map(item => {\n        items[item.name] = items[item.name] ? items[item.name] + parseInt(item.quantity) : parseInt(item.quantity);\n      });\n    });\n    var ratios = [['Category', 'Quantity sold']];\n    var objectKeysArray = Object.keys(items);\n    objectKeysArray.forEach(objKey => {\n      var objValue = items[objKey]; // objVal holds quantity of each item\n\n      var ration = [objKey, objValue];\n      ratios.push(ration);\n    });\n    return ratios;\n  };\n\n  const calculateTotalRevenue = items => {\n    // console.log(items) ;\n    var totalRevenue = 0.0;\n    items.map(item => {\n      totalRevenue += parseInt(item.quantity) * item.price['$numberDecimal'];\n    });\n    return totalRevenue;\n  }; // display graphs\n\n\n  const DisplayPieChart = () => {\n    SalesDataService.find(store, \"location\").then(response => {\n      setSales(response.data.Sales);\n    }).catch(e => {\n      console.log(e);\n    });\n    const series = calculateQuantityItems();\n    setdataForPiePlot(series);\n  };\n\n  const DisplayLineChart = () => {\n    // choose a month -> display line chart from that month      \n    SalesDataService.getUnlimited(store, \"location\").then(response => {\n      setSales(response.data.Sales);\n    }).catch(e => {\n      console.log(e);\n    });\n    var m = [[\"Date\", \"Revenue\"]];\n    var monthlySaleExists = false;\n    sales.map(sale => {\n      const date = dayjs(sale.saleDate).month();\n\n      if (date === month) {\n        monthlySaleExists = true;\n        const d = dayjs(sale.saleDate).date();\n        const monthlyRevenue = calculateTotalRevenue(sale.items);\n        var flag = 0;\n\n        for (var i = 0; i < m.length; i++) {\n          if (m[i][0] === d) {\n            m[i][1] += monthlyRevenue;\n            flag = 1;\n            break;\n          }\n        }\n\n        if (!flag) {\n          m.push([d, monthlyRevenue]);\n        }\n      }\n    });\n    if (!monthlySaleExists) setdataForLineChart(null);else {\n      m.sort((a, b) => a[0] - b[0]);\n      setdataForLineChart(m);\n    }\n  };\n\n  const DisplayPieForRevenueChart = () => {\n    // as pie chart comparing all stores\n    SalesDataService.getUnlimited().then(response => {\n      setSales(response.data.Sales);\n    }).catch(e => {\n      console.log(e);\n    });\n    var m = [[\"Store\", \"Annual Revenue\"]];\n    sales.map(sale => {\n      const year = dayjs(sale.saleDate).year();\n\n      if (year == queryYear) {\n        const annualRevenue = calculateTotalRevenue(sale.items);\n        var flag = 0;\n\n        for (var i = 1; i < m.length; i++) {\n          if (m[i][0] === sale.storeLocation) {\n            m[i][1] += annualRevenue;\n            flag = 1;\n            break;\n          }\n        }\n\n        if (!flag) {\n          m.push([sale.storeLocation, annualRevenue]);\n        }\n      }\n    });\n    setDataForAnnualPie(m);\n  };\n\n  const DisplayBarChart = () => {\n    // comparison of sales of the given item in all outlets\n    // ACTIONS : increase the cost of the item in that branch , increase supply of the item and relevant ones to tht branch\n    SalesDataService.getAll().then(response => {\n      setSales(response.data.Sales);\n    }).catch(e => {\n      console.log(e);\n    });\n    var quant = {};\n    var itemSold = false;\n    sales.map(sale => {\n      sale.items.map(item => {\n        if (item.name === queryItem) {\n          itemSold = true;\n          quant[sale.storeLocation] = quant[sale.storeLocation] ? quant[sale.storeLocation] + parseInt(item.quantity) : parseInt(item.quantity);\n        }\n      });\n    });\n\n    if (!itemSold) {\n      setdataForBarChart(null);\n      return;\n    }\n\n    var data = [['Store', 'Quantity']];\n    var objectKeysArray = Object.keys(quant);\n    objectKeysArray.forEach(objKey => {\n      var objValue = quant[objKey];\n      console.log(objKey, objValue); // objVal holds  of each item\n\n      var q = [objKey, objValue];\n      data.push(q);\n    });\n    setdataForBarChart(data);\n  };\n\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    class: \"form-outline form-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"formWhite\",\n      class: \"form-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      class: \"form-label\",\n      for: \"formWhite\",\n      children: \"Example label\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 1\n  }, this);\n\n  return props.loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container wrapper App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row py-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-3\",\n        id: \"sticky-sidebar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"sticky-top \",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"nav flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"input-group-prepend\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"input-group-text\",\n                  id: \"basic-addon3\",\n                  children: \"Store Location\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                class: \"form-control\",\n                onChange: OnChangeSetStore,\n                children: locations.map(method => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: method,\n                    children: [\" \", method, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 31\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group-append\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-outline-dark\",\n                  label: \"Analyze an outlet\",\n                  type: \"button\",\n                  onClick: DisplayPieChart,\n                  children: \"Analyze\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"input-group-prepend\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"input-group-text\",\n                  id: \"basic-addon3\",\n                  children: \"Month\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                class: \"form-control\",\n                onChange: OnChangeSetMonth,\n                children: months.map(method => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: method,\n                    children: [\" \", method, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 31\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group-append\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-outline-dark\",\n                  type: \"button\",\n                  onClick: DisplayLineChart,\n                  children: \"Analyze\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"input-group-prepend\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"input-group-text\",\n                  id: \"basic-addon3\",\n                  children: \"Item\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                class: \"form-control\",\n                onChange: OnChangeSetItem\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group-append\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-outline-dark\",\n                  type: \"button\",\n                  onClick: DisplayBarChart,\n                  children: \"Analyze\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"input-group-prepend\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"input-group-text\",\n                  id: \"basic-addon3\",\n                  children: \"Year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                class: \"form-control\",\n                type: \"number\",\n                min: \"2013\",\n                max: \"2017\",\n                onChange: OnChangeSetYear\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group-append\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-outline-dark\",\n                  type: \"button\",\n                  onClick: DisplayPieForRevenueChart,\n                  children: \"Analyze\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          class: \"columns\",\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: dataForPiePlot ? /*#__PURE__*/_jsxDEV(Chart, {\n              width: '800px',\n              height: '600px',\n              chartType: \"PieChart\",\n              loader: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Loading Chart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 29\n              }, this),\n              data: dataForPiePlot,\n              options: {\n                title: `Percentage of items Sold in ${store}`,\n                // chartArea: { left: 12, top: 12, right: 0, bottom: 0 },\n                pieSliceText: \"label\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 35\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"jumbotron jumbotron-fluid\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"container\",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  class: \"display-6\",\n                  children: \"1. Sales % Of Items in a Store\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  class: \"lead text-italics\",\n                  children: \"Select a store\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: dataForAnnualPie ? /*#__PURE__*/_jsxDEV(Chart, {\n              width: '800px',\n              height: '600px',\n              chartType: \"PieChart\",\n              loader: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Loading Chart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 29\n              }, this),\n              data: dataForAnnualPie,\n              options: {\n                title: `% Revenue per outlet in the year ${queryYear}`,\n                // chartArea: { left: 15, top: 15, right: 0, bottom: 0 },\n                pieSliceText: \"label\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"jumbotron jumbotron-fluid\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"container\",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  class: \"display-6\",\n                  children: \"2. Annual Sales Comparison between stores\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  class: \"lead text-italics\",\n                  children: \"Select a year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: dataForLineChart != null ? /*#__PURE__*/_jsxDEV(Chart, {\n              chartType: \"LineChart\",\n              width: \"100%\",\n              height: \"400px\",\n              data: dataForLineChart,\n              options: {\n                title: `Revenue in ${store} in the month of ${months[month]}`,\n                curveType: \"function\",\n                legend: {\n                  position: \"bottom\"\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 43\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"jumbotron jumbotron-fluid\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"container\",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  class: \"display-6\",\n                  children: \"2. Monthly Revenue Chart for a Store\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  class: \"lead text-italics\",\n                  children: \"Select a Store and a Month\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: dataForBarChart != null ? /*#__PURE__*/_jsxDEV(Chart, {\n              chartType: \"BarChart\",\n              width: \"100%\",\n              height: \"400px\",\n              data: dataForBarChart,\n              options: {\n                title: `Demand for ${queryItem}`,\n                curveType: \"function\",\n                legend: {\n                  position: \"bottom\"\n                },\n                hAxis: {\n                  title: `Total Sales of ${queryItem}`,\n                  minValue: 0\n                },\n                vAxis: {\n                  title: \"City\"\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 42\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"jumbotron jumbotron-fluid\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"container\",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  class: \"display-6\",\n                  children: \"3. Comparison of product demand in all stores\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  class: \"lead\",\n                  children: \"Enter an Item\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"jumbotron jumbotron-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          class: \"display-4\",\n          children: \"Log In to continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"lead\",\n          children: [\"Head on to \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/supply\",\n            children: \"Login Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/supply\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            login: props.login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 433,\n    columnNumber: 8\n  }, this);\n};\n\n_s(AnalyzeSales, \"E0K/SqZ4qplO5+8cxN3xqHEF37w=\");\n\n_c = AnalyzeSales;\nexport default AnalyzeSales;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnalyzeSales\");","map":{"version":3,"sources":["/home/aarthi/fitgit/react/einduch-stop/frontend/src/components/analyze.js"],"names":["React","useEffect","SalesDataService","dayjs","Chart","Login","Link","Routes","Route","AnalyzeSales","props","store","setStore","useState","locations","setLocations","dataForPiePlot","setdataForPiePlot","dataForLineChart","setdataForLineChart","dataForBarChart","setdataForBarChart","sales","setSales","month","setMonth","months","queryItem","setItem","queryYear","setQueryYear","dataForAnnualPie","setDataForAnnualPie","retrieveLocations","getStoreLocations","then","response","data","catch","e","console","log","OnChangeSetStore","target","value","OnChangeSetMonth","i","OnChangeSetItem","toLowerCase","OnChangeSetYear","calculateQuantityItems","items","map","element","item","name","parseInt","quantity","ratios","objectKeysArray","Object","keys","forEach","objKey","objValue","ration","push","calculateTotalRevenue","totalRevenue","price","DisplayPieChart","find","Sales","series","DisplayLineChart","getUnlimited","m","monthlySaleExists","sale","date","saleDate","d","monthlyRevenue","flag","length","sort","a","b","DisplayPieForRevenueChart","year","annualRevenue","storeLocation","DisplayBarChart","getAll","quant","itemSold","q","loggedIn","method","title","pieSliceText","curveType","legend","position","hAxis","minValue","vAxis","login"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport SalesDataService from '../services/sales.js' ;\nimport dayjs from 'dayjs' ;\nimport { Chart } from \"react-google-charts\";\nimport Login from './login.js';\nimport {Link,Routes,Route} from 'react-router-dom';\n\nconst AnalyzeSales = (props) => {\n    // G1 : revenue from each all stores -> min & max = one graph has all stores \n\n    // G2 : percentage of different items sold from a given store - DONE\n    \n  const [store, setStore] = React.useState(\"\")\n  const [locations, setLocations] = React.useState([])\n  const [dataForPiePlot, setdataForPiePlot] = React.useState(null)\n  const [dataForLineChart, setdataForLineChart] = React.useState(null)\n  const [dataForBarChart, setdataForBarChart] = React.useState(null)\n  const [sales, setSales] = React.useState([])\n  const [month, setMonth] = React.useState(\"\")\n  const months = ['Jan', 'Feb','March','April','May','June','July','August','September','October','November','December'] \n  const [queryItem, setItem] = React.useState('')\n  const [queryYear, setQueryYear] = React.useState()\n  const [dataForAnnualPie, setDataForAnnualPie] = React.useState(null)\n        \n  useEffect(() => {\n    retrieveLocations();\n  }, []);\n\n    const retrieveLocations = () => {\n        SalesDataService.getStoreLocations()\n        .then(response => {\n        // console.log(response.data);\n        setLocations(response.data);\n        })\n        .catch(e => {\n        console.log(e);\n        });\n    }\n    // triggered setters\n    const OnChangeSetStore = e => {\n        setStore(e.target.value)\n    }\n\n    const OnChangeSetMonth = e => {\n      console.log(e.target.value)\n      for(var i=0;i<12;i++){\n        if(months[i] === e.target.value) {\n          setMonth(i) \n          return  \n        }\n      }\n      return \n    }\n\n    const OnChangeSetItem = (e) => {\n      setItem(e.target.value.toLowerCase())\n    }\n    \n    const OnChangeSetYear = e => {\n      setQueryYear(e.target.value)\n    }\n\n    // helper functions\n    const calculateQuantityItems = () => {\n               \n        var items = {}\n        // {'pencil':3, 'eraser':10}\n        // 13\n        sales.map(element => {\n\n            element.items.map(item => {\n              \n              items[item.name]=(items[item.name] ? items[item.name]+parseInt(item.quantity) : parseInt(item.quantity))\n\n            })\n        });\n        var ratios = [['Category','Quantity sold']]\n        var objectKeysArray = Object.keys(items)\n        objectKeysArray.forEach((objKey) => {\n            var objValue = items[objKey]\n            // objVal holds quantity of each item\n            var ration = [objKey, objValue]\n            ratios.push(ration)\n        })\n        \n        return ratios\n    }\n    \n    const calculateTotalRevenue = (items) => {\n      // console.log(items) ;\n      var totalRevenue = 0.0\n      items.map(item => {\n        totalRevenue+=(parseInt(item.quantity)*item.price['$numberDecimal']) \n      })\n      return totalRevenue\n    }\n\n    // display graphs\n    const DisplayPieChart = () => {\n        SalesDataService.find(store, \"location\")\n                .then(response => {       \n                    setSales(response.data.Sales)\n                })\n                .catch(e => {\n                    console.log(e);\n                })\n        \n        const series = calculateQuantityItems()\n\n        setdataForPiePlot(series)\n    }\n\n    const DisplayLineChart = () => {      \n      // choose a month -> display line chart from that month      \n      SalesDataService.getUnlimited(store, \"location\")\n      .then(response => {        \n          setSales(response.data.Sales)\n      })\n      .catch(e => {\n          console.log(e);\n      })\n\n      var m = [[\"Date\",\"Revenue\"]]\n      var monthlySaleExists = false \n      sales.map((sale)=>{\n        const date = dayjs(sale.saleDate).month()\n        if(date === month) {\n          monthlySaleExists = true ;\n          const d = dayjs(sale.saleDate).date()\n          const monthlyRevenue = calculateTotalRevenue(sale.items) \n          \n          var flag = 0\n          for(var i=0;i<m.length;i++) {\n            if(m[i][0] === d) {\n              m[i][1]+=monthlyRevenue\n              flag = 1\n              break\n            }\n          }\n          if(!flag) {\n            m.push([d,monthlyRevenue])\n          }\n        }\n      })\n      if(!monthlySaleExists)\n        setdataForLineChart(null)\n      else {\n        m.sort((a,b)=>a[0]-b[0])\n        setdataForLineChart(m)\n      }\n\n    }\n\n    const DisplayPieForRevenueChart = () => {\n      // as pie chart comparing all stores\n      SalesDataService.getUnlimited()\n      .then(response => {       \n          setSales(response.data.Sales)\n      })\n      .catch(e => {\n          console.log(e);\n      })\n\n      var m = [[\"Store\",\"Annual Revenue\"]]\n      \n      sales.map((sale)=>{\n        const year = dayjs(sale.saleDate).year()\n        if(year == queryYear) {\n          const annualRevenue = calculateTotalRevenue(sale.items) \n          \n          var flag = 0\n          for(var i=1;i<m.length;i++) {\n            if(m[i][0] === sale.storeLocation) {\n              m[i][1]+=annualRevenue\n              flag = 1\n              break\n            }\n          }\n          if(!flag) {\n            m.push([sale.storeLocation, annualRevenue])\n          }\n        }\n      })\n\n      setDataForAnnualPie(m)\n    }\n\n    const DisplayBarChart = () => {\n      // comparison of sales of the given item in all outlets\n      // ACTIONS : increase the cost of the item in that branch , increase supply of the item and relevant ones to tht branch\n\n      SalesDataService.getAll()\n      .then(response => {\n        setSales(response.data.Sales);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n\n        var quant = {}        \n        var itemSold=false\n        sales.map(sale => {\n          sale.items.map(item => {\n            if(item.name === queryItem) {\n              itemSold=true\n              quant[sale.storeLocation] = (quant[sale.storeLocation] ? quant[sale.storeLocation] + parseInt(item.quantity) : parseInt(item.quantity))\n            }\n          })\n        })\n        if(!itemSold){\n          setdataForBarChart(null)\n          return\n        }       \n        var data = [['Store', 'Quantity']]\n\n        var objectKeysArray = Object.keys(quant)\n\n        objectKeysArray.forEach((objKey) => {\n            var objValue = quant[objKey]\n            console.log(objKey, objValue)\n            // objVal holds  of each item\n            var q = [objKey, objValue]\n            data.push(q)            \n        })\n\n        setdataForBarChart(data) \n    }\n\n<div class=\"form-outline form-white\">\n  <input type=\"text\" id=\"formWhite\" class=\"form-control\" />\n  <label class=\"form-label\" for=\"formWhite\">Example label</label>\n</div>\n\n    return (\n      props.loggedIn ? (\n      <div className='container wrapper App'>\n        <div class=\"row py-3\">\n          <div class=\"col-3\" id=\"sticky-sidebar\">\n            <div class=\"sticky-top \">\n                <div class=\"nav flex-column\">      \n                  <div className=\"input-group mb-3\">\n                      <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\" id=\"basic-addon3\">Store Location</span>\n                      </div>\n\n                      <select class=\"form-control\" onChange={OnChangeSetStore}>\n                        {\n                          locations.map(method => {\n                              return (\n                              <option value={method}> {method} </option>\n                              )\n                          })\n                        }\n                      </select>\n\n                    <div className=\"input-group-append\">\n                      <button\n                        className=\"btn btn-outline-dark\"\n                        label=\"Analyze an outlet\"\n                        type=\"button\"\n                        onClick={DisplayPieChart}\n                      > \n                      Analyze\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"input-group mb-3\">\n                      <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\" id=\"basic-addon3\">Month</span>\n                      </div>\n\n                      <select class=\"form-control\" onChange={OnChangeSetMonth}>\n                          {\n                          months.map(method => {\n                              return (\n                              <option value={method}> {method} </option>\n                              )\n                          })\n                          }\n                      </select>\n\n                      <div className=\"input-group-append\">\n                          <button\n                          className=\"btn btn-outline-dark\"\n                          type=\"button\"\n                          onClick={DisplayLineChart}\n                          >\n                          Analyze\n                          </button>\n                      </div>\n                  </div>\n                  <div className=\"input-group mb-3\">\n                      <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\" id=\"basic-addon3\">Item</span>\n                      </div>\n\n                      <input class=\"form-control\"  onChange={OnChangeSetItem}>\n                      </input>\n\n                      <div className=\"input-group-append\">\n                          <button\n                          className=\"btn btn-outline-dark\"\n                          type=\"button\"\n                          onClick={DisplayBarChart}\n                          >\n                          Analyze\n                          </button>\n                      </div>\n                  </div>\n                  <div className=\"input-group mb-3\">\n                      <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\" id=\"basic-addon3\">Year</span>\n                      </div>\n\n                      <input class=\"form-control\" type=\"number\" min=\"2013\" max=\"2017\" onChange={OnChangeSetYear} >\n                      </input>\n\n                      <div className=\"input-group-append\">\n                          <button\n                          className=\"btn btn-outline-dark\"\n                          type=\"button\"\n                          onClick={DisplayPieForRevenueChart}\n                          >\n                          Analyze\n                          </button>\n                      </div>\n                  </div>   \n                </div>\n            </div>\n          </div>\n          <div class=\"col\">\n            <table class=\"columns\">\n              <tr>\n                {\n                  dataForPiePlot?(<Chart\n                    width={'800px'}\n                    height={'600px'}\n                    chartType=\"PieChart\"\n                    loader={<div>Loading Chart</div>}\n                    data={dataForPiePlot}\n                    options={{\n                      title: `Percentage of items Sold in ${store}`,\n                      // chartArea: { left: 12, top: 12, right: 0, bottom: 0 },\n                      pieSliceText: \"label\",\n                    }}\n                  />) :\n                  <div class=\"jumbotron jumbotron-fluid\">\n                    <div class=\"container\">\n                      <h1 class=\"display-6\">1. Sales % Of Items in a Store</h1>\n                      <p class=\"lead text-italics\">Select a store</p>\n                    </div>\n                  </div>\n                }\n              </tr>\n              <tr>\n              {\n                  dataForAnnualPie?(<Chart\n                    width={'800px'}\n                    height={'600px'}\n                    chartType=\"PieChart\"\n                    loader={<div>Loading Chart</div>}\n                    data={dataForAnnualPie}\n                    options={{\n                      title: `% Revenue per outlet in the year ${queryYear}`,\n                      // chartArea: { left: 15, top: 15, right: 0, bottom: 0 },\n                      pieSliceText: \"label\",\n                    }}\n                    \n                  />) :\n                  <div class=\"jumbotron jumbotron-fluid\">\n                    <div class=\"container\">\n                      <h1 class=\"display-6\">2. Annual Sales Comparison between stores</h1>\n                      <p class=\"lead text-italics\">Select a year</p>\n                    </div>\n                  </div>\n              }\n              </tr>\n              <tr>\n                {\n                  dataForLineChart!=null?(<Chart\n                    chartType=\"LineChart\"\n                    width=\"100%\"\n                    height=\"400px\"\n                    data={dataForLineChart}\n                    options={{\n                      title: `Revenue in ${store} in the month of ${months[month]}`,\n                      curveType: \"function\",\n                      legend: { position: \"bottom\" },\n                    }}\n                  /> ) :\n                  <div class=\"jumbotron jumbotron-fluid\">\n                    <div class=\"container\">\n                      <h1 class=\"display-6\">2. Monthly Revenue Chart for a Store</h1>\n                      <p class=\"lead text-italics\">Select a Store and a Month</p>\n                    </div>\n                  </div>\n                }\n              </tr>\n              <tr>                \n               {\n                  dataForBarChart!=null?(<Chart\n                    chartType=\"BarChart\"\n                    width=\"100%\"\n                    height=\"400px\"\n                    data={dataForBarChart}\n                    options={{\n                      title: `Demand for ${queryItem}`,\n                      curveType: \"function\",\n                      legend: { position: \"bottom\" } ,\n                      hAxis: {\n                        title: `Total Sales of ${queryItem}`,\n                        minValue: 0,\n                      },\n                      vAxis: {\n                        title: \"City\",\n                      },\n                    }}\n                  /> ) :\n                  <div class=\"jumbotron jumbotron-fluid\">\n                    <div class=\"container\">\n                      <h1 class=\"display-6\">3. Comparison of product demand in all stores</h1>\n                      <p class=\"lead\">Enter an Item</p>\n                    </div>\n                  </div>\n                }\n              </tr>\n            </table>\n          </div>\n        </div> \n      </div>\n       ) :\n       (\n       <div>\n       <div class=\"jumbotron jumbotron-fluid\">\n         <div class=\"container\">\n           <h1 class=\"display-4\">Log In to continue</h1>\n           <p class=\"lead\">Head on to <Link to='/supply'>Login Page</Link></p>\n         </div>\n       </div>\n        <div className=\"container mt-3\">\n        <Routes>\n          <Route path=\"/supply\" element={<Login login={props.login}/>}\n          />\n        </Routes>\n        </div>\n        </div>\n       )\n    );\n\n}\n\nexport default AnalyzeSales;"]},"metadata":{},"sourceType":"module"}